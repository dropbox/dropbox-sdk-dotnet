// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Alert recipients setting type</para>
    /// </summary>
    public class AlertRecipientsSettingType
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AlertRecipientsSettingType> Encoder = new AlertRecipientsSettingTypeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AlertRecipientsSettingType> Decoder = new AlertRecipientsSettingTypeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AlertRecipientsSettingType" />
        /// class.</para>
        /// </summary>
        public AlertRecipientsSettingType()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is CustomList</para>
        /// </summary>
        public bool IsCustomList
        {
            get
            {
                return this is CustomList;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CustomList, or <c>null</c>.</para>
        /// </summary>
        public CustomList AsCustomList
        {
            get
            {
                return this as CustomList;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Invalid</para>
        /// </summary>
        public bool IsInvalid
        {
            get
            {
                return this is Invalid;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Invalid, or <c>null</c>.</para>
        /// </summary>
        public Invalid AsInvalid
        {
            get
            {
                return this as Invalid;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is None</para>
        /// </summary>
        public bool IsNone
        {
            get
            {
                return this is None;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a None, or <c>null</c>.</para>
        /// </summary>
        public None AsNone
        {
            get
            {
                return this as None;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamAdmins</para>
        /// </summary>
        public bool IsTeamAdmins
        {
            get
            {
                return this is TeamAdmins;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamAdmins, or <c>null</c>.</para>
        /// </summary>
        public TeamAdmins AsTeamAdmins
        {
            get
            {
                return this as TeamAdmins;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AlertRecipientsSettingType" />.</para>
        /// </summary>
        private class AlertRecipientsSettingTypeEncoder : enc.StructEncoder<AlertRecipientsSettingType>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AlertRecipientsSettingType value, enc.IJsonWriter writer)
            {
                if (value is CustomList)
                {
                    WriteProperty(".tag", "custom_list", writer, enc.StringEncoder.Instance);
                    CustomList.Encoder.EncodeFields((CustomList)value, writer);
                    return;
                }
                if (value is Invalid)
                {
                    WriteProperty(".tag", "invalid", writer, enc.StringEncoder.Instance);
                    Invalid.Encoder.EncodeFields((Invalid)value, writer);
                    return;
                }
                if (value is None)
                {
                    WriteProperty(".tag", "none", writer, enc.StringEncoder.Instance);
                    None.Encoder.EncodeFields((None)value, writer);
                    return;
                }
                if (value is TeamAdmins)
                {
                    WriteProperty(".tag", "team_admins", writer, enc.StringEncoder.Instance);
                    TeamAdmins.Encoder.EncodeFields((TeamAdmins)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AlertRecipientsSettingType" />.</para>
        /// </summary>
        private class AlertRecipientsSettingTypeDecoder : enc.UnionDecoder<AlertRecipientsSettingType>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AlertRecipientsSettingType"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AlertRecipientsSettingType Create()
            {
                return new AlertRecipientsSettingType();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override AlertRecipientsSettingType Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "custom_list":
                        return CustomList.Decoder.DecodeFields(reader);
                    case "invalid":
                        return Invalid.Decoder.DecodeFields(reader);
                    case "none":
                        return None.Decoder.DecodeFields(reader);
                    case "team_admins":
                        return TeamAdmins.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The custom list object</para>
        /// </summary>
        public sealed class CustomList : AlertRecipientsSettingType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CustomList> Encoder = new CustomListEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CustomList> Decoder = new CustomListDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="CustomList" /> class.</para>
            /// </summary>
            private CustomList()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CustomList</para>
            /// </summary>
            public static readonly CustomList Instance = new CustomList();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CustomList" />.</para>
            /// </summary>
            private class CustomListEncoder : enc.StructEncoder<CustomList>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CustomList value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CustomList" />.</para>
            /// </summary>
            private class CustomListDecoder : enc.StructDecoder<CustomList>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="CustomList" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CustomList Create()
                {
                    return CustomList.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The invalid object</para>
        /// </summary>
        public sealed class Invalid : AlertRecipientsSettingType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Invalid> Encoder = new InvalidEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Invalid> Decoder = new InvalidDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Invalid" /> class.</para>
            /// </summary>
            private Invalid()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Invalid</para>
            /// </summary>
            public static readonly Invalid Instance = new Invalid();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Invalid" />.</para>
            /// </summary>
            private class InvalidEncoder : enc.StructEncoder<Invalid>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Invalid value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Invalid" />.</para>
            /// </summary>
            private class InvalidDecoder : enc.StructDecoder<Invalid>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Invalid" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Invalid Create()
                {
                    return Invalid.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The none object</para>
        /// </summary>
        public sealed class None : AlertRecipientsSettingType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<None> Encoder = new NoneEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<None> Decoder = new NoneDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="None" /> class.</para>
            /// </summary>
            private None()
            {
            }

            /// <summary>
            /// <para>A singleton instance of None</para>
            /// </summary>
            public static readonly None Instance = new None();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="None" />.</para>
            /// </summary>
            private class NoneEncoder : enc.StructEncoder<None>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(None value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="None" />.</para>
            /// </summary>
            private class NoneDecoder : enc.StructDecoder<None>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="None" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override None Create()
                {
                    return None.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The team admins object</para>
        /// </summary>
        public sealed class TeamAdmins : AlertRecipientsSettingType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamAdmins> Encoder = new TeamAdminsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamAdmins> Decoder = new TeamAdminsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamAdmins" /> class.</para>
            /// </summary>
            private TeamAdmins()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TeamAdmins</para>
            /// </summary>
            public static readonly TeamAdmins Instance = new TeamAdmins();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamAdmins" />.</para>
            /// </summary>
            private class TeamAdminsEncoder : enc.StructEncoder<TeamAdmins>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamAdmins value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamAdmins" />.</para>
            /// </summary>
            private class TeamAdminsDecoder : enc.StructDecoder<TeamAdmins>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamAdmins" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamAdmins Create()
                {
                    return TeamAdmins.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : AlertRecipientsSettingType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
