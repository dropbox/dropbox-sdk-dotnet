// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>A role which can be attached to a team member. This replaces AdminTier; each
    /// AdminTier corresponds to a new TeamMemberRole with a matching name.</para>
    /// </summary>
    public class TeamMemberRole
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<TeamMemberRole> Encoder = new TeamMemberRoleEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<TeamMemberRole> Decoder = new TeamMemberRoleDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TeamMemberRole" /> class.</para>
        /// </summary>
        /// <param name="roleId">A string containing encoded role ID. For roles defined by
        /// Dropbox, this is the same across all teams.</param>
        /// <param name="name">The role display name.</param>
        /// <param name="description">Role description. Describes which permissions come with
        /// this role.</param>
        public TeamMemberRole(string roleId,
                              string name,
                              string description)
        {
            if (roleId == null)
            {
                throw new sys.ArgumentNullException("roleId");
            }
            if (roleId.Length > 128)
            {
                throw new sys.ArgumentOutOfRangeException("roleId", "Length should be at most 128");
            }
            if (!re.Regex.IsMatch(roleId, @"\A(?:pid_dbtmr:.*)\z"))
            {
                throw new sys.ArgumentOutOfRangeException("roleId", @"Value should match pattern '\A(?:pid_dbtmr:.*)\z'");
            }

            if (name == null)
            {
                throw new sys.ArgumentNullException("name");
            }
            if (name.Length > 32)
            {
                throw new sys.ArgumentOutOfRangeException("name", "Length should be at most 32");
            }

            if (description == null)
            {
                throw new sys.ArgumentNullException("description");
            }
            if (description.Length > 256)
            {
                throw new sys.ArgumentOutOfRangeException("description", "Length should be at most 256");
            }

            this.RoleId = roleId;
            this.Name = name;
            this.Description = description;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TeamMemberRole" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public TeamMemberRole()
        {
        }

        /// <summary>
        /// <para>A string containing encoded role ID. For roles defined by Dropbox, this is
        /// the same across all teams.</para>
        /// </summary>
        public string RoleId { get; protected set; }

        /// <summary>
        /// <para>The role display name.</para>
        /// </summary>
        public string Name { get; protected set; }

        /// <summary>
        /// <para>Role description. Describes which permissions come with this role.</para>
        /// </summary>
        public string Description { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="TeamMemberRole" />.</para>
        /// </summary>
        private class TeamMemberRoleEncoder : enc.StructEncoder<TeamMemberRole>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(TeamMemberRole value, enc.IJsonWriter writer)
            {
                WriteProperty("role_id", value.RoleId, writer, enc.StringEncoder.Instance);
                WriteProperty("name", value.Name, writer, enc.StringEncoder.Instance);
                WriteProperty("description", value.Description, writer, enc.StringEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="TeamMemberRole" />.</para>
        /// </summary>
        private class TeamMemberRoleDecoder : enc.StructDecoder<TeamMemberRole>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="TeamMemberRole" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override TeamMemberRole Create()
            {
                return new TeamMemberRole();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(TeamMemberRole value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "role_id":
                        value.RoleId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "name":
                        value.Name = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "description":
                        value.Description = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
