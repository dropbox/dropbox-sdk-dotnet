// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Structure representing Approve List entries. Domain and emails are supported. At
    /// least one entry of any supported type is required.</para>
    /// </summary>
    public class SharingAllowlistAddArgs
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SharingAllowlistAddArgs> Encoder = new SharingAllowlistAddArgsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SharingAllowlistAddArgs> Decoder = new SharingAllowlistAddArgsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharingAllowlistAddArgs" />
        /// class.</para>
        /// </summary>
        /// <param name="domains">List of domains represented by valid string representation
        /// (RFC-1034/5).</param>
        /// <param name="emails">List of emails represented by valid string representation
        /// (RFC-5322/822).</param>
        public SharingAllowlistAddArgs(col.IEnumerable<string> domains = null,
                                       col.IEnumerable<string> emails = null)
        {
            var domainsList = enc.Util.ToList(domains);

            var emailsList = enc.Util.ToList(emails);

            this.Domains = domainsList;
            this.Emails = emailsList;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharingAllowlistAddArgs" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public SharingAllowlistAddArgs()
        {
        }

        /// <summary>
        /// <para>List of domains represented by valid string representation
        /// (RFC-1034/5).</para>
        /// </summary>
        public col.IList<string> Domains { get; protected set; }

        /// <summary>
        /// <para>List of emails represented by valid string representation
        /// (RFC-5322/822).</para>
        /// </summary>
        public col.IList<string> Emails { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SharingAllowlistAddArgs" />.</para>
        /// </summary>
        private class SharingAllowlistAddArgsEncoder : enc.StructEncoder<SharingAllowlistAddArgs>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SharingAllowlistAddArgs value, enc.IJsonWriter writer)
            {
                if (value.Domains.Count > 0)
                {
                    WriteListProperty("domains", value.Domains, writer, enc.StringEncoder.Instance);
                }
                if (value.Emails.Count > 0)
                {
                    WriteListProperty("emails", value.Emails, writer, enc.StringEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SharingAllowlistAddArgs" />.</para>
        /// </summary>
        private class SharingAllowlistAddArgsDecoder : enc.StructDecoder<SharingAllowlistAddArgs>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SharingAllowlistAddArgs"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SharingAllowlistAddArgs Create()
            {
                return new SharingAllowlistAddArgs();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(SharingAllowlistAddArgs value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "domains":
                        value.Domains = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    case "emails":
                        value.Emails = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
