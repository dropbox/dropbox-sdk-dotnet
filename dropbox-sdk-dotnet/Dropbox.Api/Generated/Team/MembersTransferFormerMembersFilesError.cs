// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The members transfer former members files error object</para>
    /// </summary>
    public class MembersTransferFormerMembersFilesError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<MembersTransferFormerMembersFilesError> Encoder = new MembersTransferFormerMembersFilesErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<MembersTransferFormerMembersFilesError> Decoder = new MembersTransferFormerMembersFilesErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see
        /// cref="MembersTransferFormerMembersFilesError" /> class.</para>
        /// </summary>
        public MembersTransferFormerMembersFilesError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// UserDataIsBeingTransferred</para>
        /// </summary>
        public bool IsUserDataIsBeingTransferred
        {
            get
            {
                return this is UserDataIsBeingTransferred;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserDataIsBeingTransferred, or <c>null</c>.</para>
        /// </summary>
        public UserDataIsBeingTransferred AsUserDataIsBeingTransferred
        {
            get
            {
                return this as UserDataIsBeingTransferred;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserNotRemoved</para>
        /// </summary>
        public bool IsUserNotRemoved
        {
            get
            {
                return this is UserNotRemoved;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserNotRemoved, or <c>null</c>.</para>
        /// </summary>
        public UserNotRemoved AsUserNotRemoved
        {
            get
            {
                return this as UserNotRemoved;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// UserDataCannotBeTransferred</para>
        /// </summary>
        public bool IsUserDataCannotBeTransferred
        {
            get
            {
                return this is UserDataCannotBeTransferred;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserDataCannotBeTransferred, or <c>null</c>.</para>
        /// </summary>
        public UserDataCannotBeTransferred AsUserDataCannotBeTransferred
        {
            get
            {
                return this as UserDataCannotBeTransferred;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// UserDataAlreadyTransferred</para>
        /// </summary>
        public bool IsUserDataAlreadyTransferred
        {
            get
            {
                return this is UserDataAlreadyTransferred;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserDataAlreadyTransferred, or <c>null</c>.</para>
        /// </summary>
        public UserDataAlreadyTransferred AsUserDataAlreadyTransferred
        {
            get
            {
                return this as UserDataAlreadyTransferred;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// RemovedAndTransferDestShouldDiffer</para>
        /// </summary>
        public bool IsRemovedAndTransferDestShouldDiffer
        {
            get
            {
                return this is RemovedAndTransferDestShouldDiffer;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RemovedAndTransferDestShouldDiffer, or
        /// <c>null</c>.</para>
        /// </summary>
        public RemovedAndTransferDestShouldDiffer AsRemovedAndTransferDestShouldDiffer
        {
            get
            {
                return this as RemovedAndTransferDestShouldDiffer;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// RemovedAndTransferAdminShouldDiffer</para>
        /// </summary>
        public bool IsRemovedAndTransferAdminShouldDiffer
        {
            get
            {
                return this is RemovedAndTransferAdminShouldDiffer;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RemovedAndTransferAdminShouldDiffer, or
        /// <c>null</c>.</para>
        /// </summary>
        public RemovedAndTransferAdminShouldDiffer AsRemovedAndTransferAdminShouldDiffer
        {
            get
            {
                return this as RemovedAndTransferAdminShouldDiffer;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferDestUserNotFound</para>
        /// </summary>
        public bool IsTransferDestUserNotFound
        {
            get
            {
                return this is TransferDestUserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferDestUserNotFound, or <c>null</c>.</para>
        /// </summary>
        public TransferDestUserNotFound AsTransferDestUserNotFound
        {
            get
            {
                return this as TransferDestUserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferDestUserNotInTeam</para>
        /// </summary>
        public bool IsTransferDestUserNotInTeam
        {
            get
            {
                return this is TransferDestUserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferDestUserNotInTeam, or <c>null</c>.</para>
        /// </summary>
        public TransferDestUserNotInTeam AsTransferDestUserNotInTeam
        {
            get
            {
                return this as TransferDestUserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferAdminUserNotInTeam</para>
        /// </summary>
        public bool IsTransferAdminUserNotInTeam
        {
            get
            {
                return this is TransferAdminUserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferAdminUserNotInTeam, or <c>null</c>.</para>
        /// </summary>
        public TransferAdminUserNotInTeam AsTransferAdminUserNotInTeam
        {
            get
            {
                return this as TransferAdminUserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferAdminUserNotFound</para>
        /// </summary>
        public bool IsTransferAdminUserNotFound
        {
            get
            {
                return this is TransferAdminUserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferAdminUserNotFound, or <c>null</c>.</para>
        /// </summary>
        public TransferAdminUserNotFound AsTransferAdminUserNotFound
        {
            get
            {
                return this as TransferAdminUserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// UnspecifiedTransferAdminId</para>
        /// </summary>
        public bool IsUnspecifiedTransferAdminId
        {
            get
            {
                return this is UnspecifiedTransferAdminId;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UnspecifiedTransferAdminId, or <c>null</c>.</para>
        /// </summary>
        public UnspecifiedTransferAdminId AsUnspecifiedTransferAdminId
        {
            get
            {
                return this as UnspecifiedTransferAdminId;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferAdminIsNotAdmin</para>
        /// </summary>
        public bool IsTransferAdminIsNotAdmin
        {
            get
            {
                return this is TransferAdminIsNotAdmin;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferAdminIsNotAdmin, or <c>null</c>.</para>
        /// </summary>
        public TransferAdminIsNotAdmin AsTransferAdminIsNotAdmin
        {
            get
            {
                return this as TransferAdminIsNotAdmin;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RecipientNotVerified</para>
        /// </summary>
        public bool IsRecipientNotVerified
        {
            get
            {
                return this is RecipientNotVerified;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RecipientNotVerified, or <c>null</c>.</para>
        /// </summary>
        public RecipientNotVerified AsRecipientNotVerified
        {
            get
            {
                return this as RecipientNotVerified;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserNotInTeam</para>
        /// </summary>
        public bool IsUserNotInTeam
        {
            get
            {
                return this is UserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserNotInTeam, or <c>null</c>.</para>
        /// </summary>
        public UserNotInTeam AsUserNotInTeam
        {
            get
            {
                return this as UserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserNotFound</para>
        /// </summary>
        public bool IsUserNotFound
        {
            get
            {
                return this is UserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserNotFound, or <c>null</c>.</para>
        /// </summary>
        public UserNotFound AsUserNotFound
        {
            get
            {
                return this as UserNotFound;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="MembersTransferFormerMembersFilesError" />.</para>
        /// </summary>
        private class MembersTransferFormerMembersFilesErrorEncoder : enc.StructEncoder<MembersTransferFormerMembersFilesError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(MembersTransferFormerMembersFilesError value, enc.IJsonWriter writer)
            {
                if (value is UserDataIsBeingTransferred)
                {
                    WriteProperty(".tag", "user_data_is_being_transferred", writer, enc.StringEncoder.Instance);
                    UserDataIsBeingTransferred.Encoder.EncodeFields((UserDataIsBeingTransferred)value, writer);
                    return;
                }
                if (value is UserNotRemoved)
                {
                    WriteProperty(".tag", "user_not_removed", writer, enc.StringEncoder.Instance);
                    UserNotRemoved.Encoder.EncodeFields((UserNotRemoved)value, writer);
                    return;
                }
                if (value is UserDataCannotBeTransferred)
                {
                    WriteProperty(".tag", "user_data_cannot_be_transferred", writer, enc.StringEncoder.Instance);
                    UserDataCannotBeTransferred.Encoder.EncodeFields((UserDataCannotBeTransferred)value, writer);
                    return;
                }
                if (value is UserDataAlreadyTransferred)
                {
                    WriteProperty(".tag", "user_data_already_transferred", writer, enc.StringEncoder.Instance);
                    UserDataAlreadyTransferred.Encoder.EncodeFields((UserDataAlreadyTransferred)value, writer);
                    return;
                }
                if (value is RemovedAndTransferDestShouldDiffer)
                {
                    WriteProperty(".tag", "removed_and_transfer_dest_should_differ", writer, enc.StringEncoder.Instance);
                    RemovedAndTransferDestShouldDiffer.Encoder.EncodeFields((RemovedAndTransferDestShouldDiffer)value, writer);
                    return;
                }
                if (value is RemovedAndTransferAdminShouldDiffer)
                {
                    WriteProperty(".tag", "removed_and_transfer_admin_should_differ", writer, enc.StringEncoder.Instance);
                    RemovedAndTransferAdminShouldDiffer.Encoder.EncodeFields((RemovedAndTransferAdminShouldDiffer)value, writer);
                    return;
                }
                if (value is TransferDestUserNotFound)
                {
                    WriteProperty(".tag", "transfer_dest_user_not_found", writer, enc.StringEncoder.Instance);
                    TransferDestUserNotFound.Encoder.EncodeFields((TransferDestUserNotFound)value, writer);
                    return;
                }
                if (value is TransferDestUserNotInTeam)
                {
                    WriteProperty(".tag", "transfer_dest_user_not_in_team", writer, enc.StringEncoder.Instance);
                    TransferDestUserNotInTeam.Encoder.EncodeFields((TransferDestUserNotInTeam)value, writer);
                    return;
                }
                if (value is TransferAdminUserNotInTeam)
                {
                    WriteProperty(".tag", "transfer_admin_user_not_in_team", writer, enc.StringEncoder.Instance);
                    TransferAdminUserNotInTeam.Encoder.EncodeFields((TransferAdminUserNotInTeam)value, writer);
                    return;
                }
                if (value is TransferAdminUserNotFound)
                {
                    WriteProperty(".tag", "transfer_admin_user_not_found", writer, enc.StringEncoder.Instance);
                    TransferAdminUserNotFound.Encoder.EncodeFields((TransferAdminUserNotFound)value, writer);
                    return;
                }
                if (value is UnspecifiedTransferAdminId)
                {
                    WriteProperty(".tag", "unspecified_transfer_admin_id", writer, enc.StringEncoder.Instance);
                    UnspecifiedTransferAdminId.Encoder.EncodeFields((UnspecifiedTransferAdminId)value, writer);
                    return;
                }
                if (value is TransferAdminIsNotAdmin)
                {
                    WriteProperty(".tag", "transfer_admin_is_not_admin", writer, enc.StringEncoder.Instance);
                    TransferAdminIsNotAdmin.Encoder.EncodeFields((TransferAdminIsNotAdmin)value, writer);
                    return;
                }
                if (value is RecipientNotVerified)
                {
                    WriteProperty(".tag", "recipient_not_verified", writer, enc.StringEncoder.Instance);
                    RecipientNotVerified.Encoder.EncodeFields((RecipientNotVerified)value, writer);
                    return;
                }
                if (value is UserNotInTeam)
                {
                    WriteProperty(".tag", "user_not_in_team", writer, enc.StringEncoder.Instance);
                    UserNotInTeam.Encoder.EncodeFields((UserNotInTeam)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                if (value is UserNotFound)
                {
                    WriteProperty(".tag", "user_not_found", writer, enc.StringEncoder.Instance);
                    UserNotFound.Encoder.EncodeFields((UserNotFound)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="MembersTransferFormerMembersFilesError" />.</para>
        /// </summary>
        private class MembersTransferFormerMembersFilesErrorDecoder : enc.UnionDecoder<MembersTransferFormerMembersFilesError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see
            /// cref="MembersTransferFormerMembersFilesError" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override MembersTransferFormerMembersFilesError Create()
            {
                return new MembersTransferFormerMembersFilesError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override MembersTransferFormerMembersFilesError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "user_data_is_being_transferred":
                        return UserDataIsBeingTransferred.Decoder.DecodeFields(reader);
                    case "user_not_removed":
                        return UserNotRemoved.Decoder.DecodeFields(reader);
                    case "user_data_cannot_be_transferred":
                        return UserDataCannotBeTransferred.Decoder.DecodeFields(reader);
                    case "user_data_already_transferred":
                        return UserDataAlreadyTransferred.Decoder.DecodeFields(reader);
                    case "removed_and_transfer_dest_should_differ":
                        return RemovedAndTransferDestShouldDiffer.Decoder.DecodeFields(reader);
                    case "removed_and_transfer_admin_should_differ":
                        return RemovedAndTransferAdminShouldDiffer.Decoder.DecodeFields(reader);
                    case "transfer_dest_user_not_found":
                        return TransferDestUserNotFound.Decoder.DecodeFields(reader);
                    case "transfer_dest_user_not_in_team":
                        return TransferDestUserNotInTeam.Decoder.DecodeFields(reader);
                    case "transfer_admin_user_not_in_team":
                        return TransferAdminUserNotInTeam.Decoder.DecodeFields(reader);
                    case "transfer_admin_user_not_found":
                        return TransferAdminUserNotFound.Decoder.DecodeFields(reader);
                    case "unspecified_transfer_admin_id":
                        return UnspecifiedTransferAdminId.Decoder.DecodeFields(reader);
                    case "transfer_admin_is_not_admin":
                        return TransferAdminIsNotAdmin.Decoder.DecodeFields(reader);
                    case "recipient_not_verified":
                        return RecipientNotVerified.Decoder.DecodeFields(reader);
                    case "user_not_in_team":
                        return UserNotInTeam.Decoder.DecodeFields(reader);
                    case "other":
                        return Other.Decoder.DecodeFields(reader);
                    case "user_not_found":
                        return UserNotFound.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The user's data is being transferred. Please wait some time before
        /// retrying.</para>
        /// </summary>
        public sealed class UserDataIsBeingTransferred : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserDataIsBeingTransferred> Encoder = new UserDataIsBeingTransferredEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserDataIsBeingTransferred> Decoder = new UserDataIsBeingTransferredDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserDataIsBeingTransferred"
            /// /> class.</para>
            /// </summary>
            private UserDataIsBeingTransferred()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserDataIsBeingTransferred</para>
            /// </summary>
            public static readonly UserDataIsBeingTransferred Instance = new UserDataIsBeingTransferred();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserDataIsBeingTransferred" />.</para>
            /// </summary>
            private class UserDataIsBeingTransferredEncoder : enc.StructEncoder<UserDataIsBeingTransferred>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserDataIsBeingTransferred value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserDataIsBeingTransferred" />.</para>
            /// </summary>
            private class UserDataIsBeingTransferredDecoder : enc.StructDecoder<UserDataIsBeingTransferred>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserDataIsBeingTransferred"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserDataIsBeingTransferred Create()
                {
                    return UserDataIsBeingTransferred.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>No matching removed user found for the argument user.</para>
        /// </summary>
        public sealed class UserNotRemoved : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserNotRemoved> Encoder = new UserNotRemovedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserNotRemoved> Decoder = new UserNotRemovedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserNotRemoved" />
            /// class.</para>
            /// </summary>
            private UserNotRemoved()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserNotRemoved</para>
            /// </summary>
            public static readonly UserNotRemoved Instance = new UserNotRemoved();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserNotRemoved" />.</para>
            /// </summary>
            private class UserNotRemovedEncoder : enc.StructEncoder<UserNotRemoved>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserNotRemoved value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserNotRemoved" />.</para>
            /// </summary>
            private class UserNotRemovedDecoder : enc.StructDecoder<UserNotRemoved>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserNotRemoved" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserNotRemoved Create()
                {
                    return UserNotRemoved.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>User files aren't transferable anymore.</para>
        /// </summary>
        public sealed class UserDataCannotBeTransferred : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserDataCannotBeTransferred> Encoder = new UserDataCannotBeTransferredEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserDataCannotBeTransferred> Decoder = new UserDataCannotBeTransferredDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserDataCannotBeTransferred"
            /// /> class.</para>
            /// </summary>
            private UserDataCannotBeTransferred()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserDataCannotBeTransferred</para>
            /// </summary>
            public static readonly UserDataCannotBeTransferred Instance = new UserDataCannotBeTransferred();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserDataCannotBeTransferred" />.</para>
            /// </summary>
            private class UserDataCannotBeTransferredEncoder : enc.StructEncoder<UserDataCannotBeTransferred>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserDataCannotBeTransferred value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserDataCannotBeTransferred" />.</para>
            /// </summary>
            private class UserDataCannotBeTransferredDecoder : enc.StructDecoder<UserDataCannotBeTransferred>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserDataCannotBeTransferred"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserDataCannotBeTransferred Create()
                {
                    return UserDataCannotBeTransferred.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>User's data has already been transferred to another user.</para>
        /// </summary>
        public sealed class UserDataAlreadyTransferred : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserDataAlreadyTransferred> Encoder = new UserDataAlreadyTransferredEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserDataAlreadyTransferred> Decoder = new UserDataAlreadyTransferredDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserDataAlreadyTransferred"
            /// /> class.</para>
            /// </summary>
            private UserDataAlreadyTransferred()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserDataAlreadyTransferred</para>
            /// </summary>
            public static readonly UserDataAlreadyTransferred Instance = new UserDataAlreadyTransferred();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserDataAlreadyTransferred" />.</para>
            /// </summary>
            private class UserDataAlreadyTransferredEncoder : enc.StructEncoder<UserDataAlreadyTransferred>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserDataAlreadyTransferred value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserDataAlreadyTransferred" />.</para>
            /// </summary>
            private class UserDataAlreadyTransferredDecoder : enc.StructDecoder<UserDataAlreadyTransferred>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserDataAlreadyTransferred"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserDataAlreadyTransferred Create()
                {
                    return UserDataAlreadyTransferred.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Expected removed user and transfer_dest user to be different.</para>
        /// </summary>
        public sealed class RemovedAndTransferDestShouldDiffer : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RemovedAndTransferDestShouldDiffer> Encoder = new RemovedAndTransferDestShouldDifferEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RemovedAndTransferDestShouldDiffer> Decoder = new RemovedAndTransferDestShouldDifferDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="RemovedAndTransferDestShouldDiffer" /> class.</para>
            /// </summary>
            private RemovedAndTransferDestShouldDiffer()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RemovedAndTransferDestShouldDiffer</para>
            /// </summary>
            public static readonly RemovedAndTransferDestShouldDiffer Instance = new RemovedAndTransferDestShouldDiffer();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RemovedAndTransferDestShouldDiffer" />.</para>
            /// </summary>
            private class RemovedAndTransferDestShouldDifferEncoder : enc.StructEncoder<RemovedAndTransferDestShouldDiffer>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RemovedAndTransferDestShouldDiffer value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RemovedAndTransferDestShouldDiffer" />.</para>
            /// </summary>
            private class RemovedAndTransferDestShouldDifferDecoder : enc.StructDecoder<RemovedAndTransferDestShouldDiffer>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="RemovedAndTransferDestShouldDiffer" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RemovedAndTransferDestShouldDiffer Create()
                {
                    return RemovedAndTransferDestShouldDiffer.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Expected removed user and transfer_admin user to be different.</para>
        /// </summary>
        public sealed class RemovedAndTransferAdminShouldDiffer : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RemovedAndTransferAdminShouldDiffer> Encoder = new RemovedAndTransferAdminShouldDifferEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RemovedAndTransferAdminShouldDiffer> Decoder = new RemovedAndTransferAdminShouldDifferDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="RemovedAndTransferAdminShouldDiffer" /> class.</para>
            /// </summary>
            private RemovedAndTransferAdminShouldDiffer()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RemovedAndTransferAdminShouldDiffer</para>
            /// </summary>
            public static readonly RemovedAndTransferAdminShouldDiffer Instance = new RemovedAndTransferAdminShouldDiffer();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RemovedAndTransferAdminShouldDiffer" />.</para>
            /// </summary>
            private class RemovedAndTransferAdminShouldDifferEncoder : enc.StructEncoder<RemovedAndTransferAdminShouldDiffer>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RemovedAndTransferAdminShouldDiffer value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RemovedAndTransferAdminShouldDiffer" />.</para>
            /// </summary>
            private class RemovedAndTransferAdminShouldDifferDecoder : enc.StructDecoder<RemovedAndTransferAdminShouldDiffer>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="RemovedAndTransferAdminShouldDiffer" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RemovedAndTransferAdminShouldDiffer Create()
                {
                    return RemovedAndTransferAdminShouldDiffer.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>No matching user found for the argument transfer_dest_id.</para>
        /// </summary>
        public sealed class TransferDestUserNotFound : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferDestUserNotFound> Encoder = new TransferDestUserNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferDestUserNotFound> Decoder = new TransferDestUserNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferDestUserNotFound" />
            /// class.</para>
            /// </summary>
            private TransferDestUserNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferDestUserNotFound</para>
            /// </summary>
            public static readonly TransferDestUserNotFound Instance = new TransferDestUserNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferDestUserNotFound" />.</para>
            /// </summary>
            private class TransferDestUserNotFoundEncoder : enc.StructEncoder<TransferDestUserNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferDestUserNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferDestUserNotFound" />.</para>
            /// </summary>
            private class TransferDestUserNotFoundDecoder : enc.StructDecoder<TransferDestUserNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferDestUserNotFound"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferDestUserNotFound Create()
                {
                    return TransferDestUserNotFound.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The provided transfer_dest_id does not exist on this team.</para>
        /// </summary>
        public sealed class TransferDestUserNotInTeam : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferDestUserNotInTeam> Encoder = new TransferDestUserNotInTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferDestUserNotInTeam> Decoder = new TransferDestUserNotInTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferDestUserNotInTeam"
            /// /> class.</para>
            /// </summary>
            private TransferDestUserNotInTeam()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferDestUserNotInTeam</para>
            /// </summary>
            public static readonly TransferDestUserNotInTeam Instance = new TransferDestUserNotInTeam();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferDestUserNotInTeam" />.</para>
            /// </summary>
            private class TransferDestUserNotInTeamEncoder : enc.StructEncoder<TransferDestUserNotInTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferDestUserNotInTeam value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferDestUserNotInTeam" />.</para>
            /// </summary>
            private class TransferDestUserNotInTeamDecoder : enc.StructDecoder<TransferDestUserNotInTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferDestUserNotInTeam"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferDestUserNotInTeam Create()
                {
                    return TransferDestUserNotInTeam.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The provided transfer_admin_id does not exist on this team.</para>
        /// </summary>
        public sealed class TransferAdminUserNotInTeam : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferAdminUserNotInTeam> Encoder = new TransferAdminUserNotInTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferAdminUserNotInTeam> Decoder = new TransferAdminUserNotInTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferAdminUserNotInTeam"
            /// /> class.</para>
            /// </summary>
            private TransferAdminUserNotInTeam()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferAdminUserNotInTeam</para>
            /// </summary>
            public static readonly TransferAdminUserNotInTeam Instance = new TransferAdminUserNotInTeam();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferAdminUserNotInTeam" />.</para>
            /// </summary>
            private class TransferAdminUserNotInTeamEncoder : enc.StructEncoder<TransferAdminUserNotInTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferAdminUserNotInTeam value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferAdminUserNotInTeam" />.</para>
            /// </summary>
            private class TransferAdminUserNotInTeamDecoder : enc.StructDecoder<TransferAdminUserNotInTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferAdminUserNotInTeam"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferAdminUserNotInTeam Create()
                {
                    return TransferAdminUserNotInTeam.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>No matching user found for the argument transfer_admin_id.</para>
        /// </summary>
        public sealed class TransferAdminUserNotFound : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferAdminUserNotFound> Encoder = new TransferAdminUserNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferAdminUserNotFound> Decoder = new TransferAdminUserNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferAdminUserNotFound"
            /// /> class.</para>
            /// </summary>
            private TransferAdminUserNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferAdminUserNotFound</para>
            /// </summary>
            public static readonly TransferAdminUserNotFound Instance = new TransferAdminUserNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferAdminUserNotFound" />.</para>
            /// </summary>
            private class TransferAdminUserNotFoundEncoder : enc.StructEncoder<TransferAdminUserNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferAdminUserNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferAdminUserNotFound" />.</para>
            /// </summary>
            private class TransferAdminUserNotFoundDecoder : enc.StructDecoder<TransferAdminUserNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferAdminUserNotFound"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferAdminUserNotFound Create()
                {
                    return TransferAdminUserNotFound.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The transfer_admin_id argument must be provided when file transfer is
        /// requested.</para>
        /// </summary>
        public sealed class UnspecifiedTransferAdminId : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UnspecifiedTransferAdminId> Encoder = new UnspecifiedTransferAdminIdEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UnspecifiedTransferAdminId> Decoder = new UnspecifiedTransferAdminIdDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UnspecifiedTransferAdminId"
            /// /> class.</para>
            /// </summary>
            private UnspecifiedTransferAdminId()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UnspecifiedTransferAdminId</para>
            /// </summary>
            public static readonly UnspecifiedTransferAdminId Instance = new UnspecifiedTransferAdminId();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UnspecifiedTransferAdminId" />.</para>
            /// </summary>
            private class UnspecifiedTransferAdminIdEncoder : enc.StructEncoder<UnspecifiedTransferAdminId>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UnspecifiedTransferAdminId value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UnspecifiedTransferAdminId" />.</para>
            /// </summary>
            private class UnspecifiedTransferAdminIdDecoder : enc.StructDecoder<UnspecifiedTransferAdminId>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UnspecifiedTransferAdminId"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UnspecifiedTransferAdminId Create()
                {
                    return UnspecifiedTransferAdminId.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Specified transfer_admin user is not a team admin.</para>
        /// </summary>
        public sealed class TransferAdminIsNotAdmin : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferAdminIsNotAdmin> Encoder = new TransferAdminIsNotAdminEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferAdminIsNotAdmin> Decoder = new TransferAdminIsNotAdminDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferAdminIsNotAdmin" />
            /// class.</para>
            /// </summary>
            private TransferAdminIsNotAdmin()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferAdminIsNotAdmin</para>
            /// </summary>
            public static readonly TransferAdminIsNotAdmin Instance = new TransferAdminIsNotAdmin();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferAdminIsNotAdmin" />.</para>
            /// </summary>
            private class TransferAdminIsNotAdminEncoder : enc.StructEncoder<TransferAdminIsNotAdmin>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferAdminIsNotAdmin value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferAdminIsNotAdmin" />.</para>
            /// </summary>
            private class TransferAdminIsNotAdminDecoder : enc.StructDecoder<TransferAdminIsNotAdmin>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferAdminIsNotAdmin"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferAdminIsNotAdmin Create()
                {
                    return TransferAdminIsNotAdmin.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The recipient user's email is not verified.</para>
        /// </summary>
        public sealed class RecipientNotVerified : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RecipientNotVerified> Encoder = new RecipientNotVerifiedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RecipientNotVerified> Decoder = new RecipientNotVerifiedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RecipientNotVerified" />
            /// class.</para>
            /// </summary>
            private RecipientNotVerified()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RecipientNotVerified</para>
            /// </summary>
            public static readonly RecipientNotVerified Instance = new RecipientNotVerified();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RecipientNotVerified" />.</para>
            /// </summary>
            private class RecipientNotVerifiedEncoder : enc.StructEncoder<RecipientNotVerified>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RecipientNotVerified value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RecipientNotVerified" />.</para>
            /// </summary>
            private class RecipientNotVerifiedDecoder : enc.StructDecoder<RecipientNotVerified>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RecipientNotVerified"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RecipientNotVerified Create()
                {
                    return RecipientNotVerified.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The user is not a member of the team.</para>
        /// </summary>
        public sealed class UserNotInTeam : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserNotInTeam> Encoder = new UserNotInTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserNotInTeam> Decoder = new UserNotInTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserNotInTeam" />
            /// class.</para>
            /// </summary>
            private UserNotInTeam()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserNotInTeam</para>
            /// </summary>
            public static readonly UserNotInTeam Instance = new UserNotInTeam();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserNotInTeam" />.</para>
            /// </summary>
            private class UserNotInTeamEncoder : enc.StructEncoder<UserNotInTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserNotInTeam value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserNotInTeam" />.</para>
            /// </summary>
            private class UserNotInTeamDecoder : enc.StructDecoder<UserNotInTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserNotInTeam" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserNotInTeam Create()
                {
                    return UserNotInTeam.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>No matching user found. The provided team_member_id, email, or external_id
        /// does not exist on this team.</para>
        /// </summary>
        public sealed class UserNotFound : MembersTransferFormerMembersFilesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserNotFound> Encoder = new UserNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserNotFound> Decoder = new UserNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserNotFound" />
            /// class.</para>
            /// </summary>
            private UserNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserNotFound</para>
            /// </summary>
            public static readonly UserNotFound Instance = new UserNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserNotFound" />.</para>
            /// </summary>
            private class UserNotFoundEncoder : enc.StructEncoder<UserNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserNotFound" />.</para>
            /// </summary>
            private class UserNotFoundDecoder : enc.StructDecoder<UserNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserNotFound" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserNotFound Create()
                {
                    return UserNotFound.Instance;
                }

            }

            #endregion
        }
    }
}
