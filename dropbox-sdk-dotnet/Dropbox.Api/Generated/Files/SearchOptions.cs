// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The search options object</para>
    /// </summary>
    public class SearchOptions
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SearchOptions> Encoder = new SearchOptionsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SearchOptions> Decoder = new SearchOptionsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SearchOptions" /> class.</para>
        /// </summary>
        /// <param name="path">Scopes the search to a path in the user's Dropbox. Searches the
        /// entire Dropbox if not specified.</param>
        /// <param name="maxResults">The maximum number of search results to return.</param>
        /// <param name="orderBy">Specified property of the order of search results. By
        /// default, results are sorted by relevance.</param>
        /// <param name="fileStatus">Restricts search to the given file status.</param>
        /// <param name="filenameOnly">Restricts search to only match on filenames.</param>
        /// <param name="fileExtensions">Restricts search to only the extensions specified.
        /// Only supported for active file search.</param>
        /// <param name="fileCategories">Restricts search to only the file categories
        /// specified. Only supported for active file search.</param>
        public SearchOptions(string path = null,
                             ulong maxResults = 100,
                             SearchOrderBy orderBy = null,
                             FileStatus fileStatus = null,
                             bool filenameOnly = false,
                             col.IEnumerable<string> fileExtensions = null,
                             col.IEnumerable<FileCategory> fileCategories = null)
        {
            if (path != null)
            {
                if (!re.Regex.IsMatch(path, @"\A(?:(/(.|[\r\n])*)?|id:.*|(ns:[0-9]+(/.*)?))\z"))
                {
                    throw new sys.ArgumentOutOfRangeException("path", @"Value should match pattern '\A(?:(/(.|[\r\n])*)?|id:.*|(ns:[0-9]+(/.*)?))\z'");
                }
            }

            if (maxResults < 1UL)
            {
                throw new sys.ArgumentOutOfRangeException("maxResults", "Value should be greater or equal than 1");
            }
            if (maxResults > 1000UL)
            {
                throw new sys.ArgumentOutOfRangeException("maxResults", "Value should be less of equal than 1000");
            }

            if (fileStatus == null)
            {
                fileStatus = global::Dropbox.Api.Files.FileStatus.Active.Instance;
            }
            var fileExtensionsList = enc.Util.ToList(fileExtensions);

            var fileCategoriesList = enc.Util.ToList(fileCategories);

            this.Path = path;
            this.MaxResults = maxResults;
            this.OrderBy = orderBy;
            this.FileStatus = fileStatus;
            this.FilenameOnly = filenameOnly;
            this.FileExtensions = fileExtensionsList;
            this.FileCategories = fileCategoriesList;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SearchOptions" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public SearchOptions()
        {
            this.MaxResults = 100;
            this.FileStatus = global::Dropbox.Api.Files.FileStatus.Active.Instance;
            this.FilenameOnly = false;
        }

        /// <summary>
        /// <para>Scopes the search to a path in the user's Dropbox. Searches the entire
        /// Dropbox if not specified.</para>
        /// </summary>
        public string Path { get; protected set; }

        /// <summary>
        /// <para>The maximum number of search results to return.</para>
        /// </summary>
        public ulong MaxResults { get; protected set; }

        /// <summary>
        /// <para>Specified property of the order of search results. By default, results are
        /// sorted by relevance.</para>
        /// </summary>
        public SearchOrderBy OrderBy { get; protected set; }

        /// <summary>
        /// <para>Restricts search to the given file status.</para>
        /// </summary>
        public FileStatus FileStatus { get; protected set; }

        /// <summary>
        /// <para>Restricts search to only match on filenames.</para>
        /// </summary>
        public bool FilenameOnly { get; protected set; }

        /// <summary>
        /// <para>Restricts search to only the extensions specified. Only supported for active
        /// file search.</para>
        /// </summary>
        public col.IList<string> FileExtensions { get; protected set; }

        /// <summary>
        /// <para>Restricts search to only the file categories specified. Only supported for
        /// active file search.</para>
        /// </summary>
        public col.IList<FileCategory> FileCategories { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SearchOptions" />.</para>
        /// </summary>
        private class SearchOptionsEncoder : enc.StructEncoder<SearchOptions>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SearchOptions value, enc.IJsonWriter writer)
            {
                if (value.Path != null)
                {
                    WriteProperty("path", value.Path, writer, enc.StringEncoder.Instance);
                }
                WriteProperty("max_results", value.MaxResults, writer, enc.UInt64Encoder.Instance);
                if (value.OrderBy != null)
                {
                    WriteProperty("order_by", value.OrderBy, writer, global::Dropbox.Api.Files.SearchOrderBy.Encoder);
                }
                WriteProperty("file_status", value.FileStatus, writer, global::Dropbox.Api.Files.FileStatus.Encoder);
                WriteProperty("filename_only", value.FilenameOnly, writer, enc.BooleanEncoder.Instance);
                if (value.FileExtensions.Count > 0)
                {
                    WriteListProperty("file_extensions", value.FileExtensions, writer, enc.StringEncoder.Instance);
                }
                if (value.FileCategories.Count > 0)
                {
                    WriteListProperty("file_categories", value.FileCategories, writer, global::Dropbox.Api.Files.FileCategory.Encoder);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SearchOptions" />.</para>
        /// </summary>
        private class SearchOptionsDecoder : enc.StructDecoder<SearchOptions>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SearchOptions" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SearchOptions Create()
            {
                return new SearchOptions();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(SearchOptions value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "path":
                        value.Path = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "max_results":
                        value.MaxResults = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    case "order_by":
                        value.OrderBy = global::Dropbox.Api.Files.SearchOrderBy.Decoder.Decode(reader);
                        break;
                    case "file_status":
                        value.FileStatus = global::Dropbox.Api.Files.FileStatus.Decoder.Decode(reader);
                        break;
                    case "filename_only":
                        value.FilenameOnly = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    case "file_extensions":
                        value.FileExtensions = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    case "file_categories":
                        value.FileCategories = ReadList<FileCategory>(reader, global::Dropbox.Api.Files.FileCategory.Decoder);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
