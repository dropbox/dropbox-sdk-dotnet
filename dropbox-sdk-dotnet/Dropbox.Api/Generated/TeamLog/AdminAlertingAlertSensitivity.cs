// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Alert sensitivity</para>
    /// </summary>
    public class AdminAlertingAlertSensitivity
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AdminAlertingAlertSensitivity> Encoder = new AdminAlertingAlertSensitivityEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AdminAlertingAlertSensitivity> Decoder = new AdminAlertingAlertSensitivityDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AdminAlertingAlertSensitivity"
        /// /> class.</para>
        /// </summary>
        public AdminAlertingAlertSensitivity()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is High</para>
        /// </summary>
        public bool IsHigh
        {
            get
            {
                return this is High;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a High, or <c>null</c>.</para>
        /// </summary>
        public High AsHigh
        {
            get
            {
                return this as High;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Highest</para>
        /// </summary>
        public bool IsHighest
        {
            get
            {
                return this is Highest;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Highest, or <c>null</c>.</para>
        /// </summary>
        public Highest AsHighest
        {
            get
            {
                return this as Highest;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Invalid</para>
        /// </summary>
        public bool IsInvalid
        {
            get
            {
                return this is Invalid;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Invalid, or <c>null</c>.</para>
        /// </summary>
        public Invalid AsInvalid
        {
            get
            {
                return this as Invalid;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Low</para>
        /// </summary>
        public bool IsLow
        {
            get
            {
                return this is Low;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Low, or <c>null</c>.</para>
        /// </summary>
        public Low AsLow
        {
            get
            {
                return this as Low;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Lowest</para>
        /// </summary>
        public bool IsLowest
        {
            get
            {
                return this is Lowest;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Lowest, or <c>null</c>.</para>
        /// </summary>
        public Lowest AsLowest
        {
            get
            {
                return this as Lowest;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Medium</para>
        /// </summary>
        public bool IsMedium
        {
            get
            {
                return this is Medium;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Medium, or <c>null</c>.</para>
        /// </summary>
        public Medium AsMedium
        {
            get
            {
                return this as Medium;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AdminAlertingAlertSensitivity" />.</para>
        /// </summary>
        private class AdminAlertingAlertSensitivityEncoder : enc.StructEncoder<AdminAlertingAlertSensitivity>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AdminAlertingAlertSensitivity value, enc.IJsonWriter writer)
            {
                if (value is High)
                {
                    WriteProperty(".tag", "high", writer, enc.StringEncoder.Instance);
                    High.Encoder.EncodeFields((High)value, writer);
                    return;
                }
                if (value is Highest)
                {
                    WriteProperty(".tag", "highest", writer, enc.StringEncoder.Instance);
                    Highest.Encoder.EncodeFields((Highest)value, writer);
                    return;
                }
                if (value is Invalid)
                {
                    WriteProperty(".tag", "invalid", writer, enc.StringEncoder.Instance);
                    Invalid.Encoder.EncodeFields((Invalid)value, writer);
                    return;
                }
                if (value is Low)
                {
                    WriteProperty(".tag", "low", writer, enc.StringEncoder.Instance);
                    Low.Encoder.EncodeFields((Low)value, writer);
                    return;
                }
                if (value is Lowest)
                {
                    WriteProperty(".tag", "lowest", writer, enc.StringEncoder.Instance);
                    Lowest.Encoder.EncodeFields((Lowest)value, writer);
                    return;
                }
                if (value is Medium)
                {
                    WriteProperty(".tag", "medium", writer, enc.StringEncoder.Instance);
                    Medium.Encoder.EncodeFields((Medium)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AdminAlertingAlertSensitivity" />.</para>
        /// </summary>
        private class AdminAlertingAlertSensitivityDecoder : enc.UnionDecoder<AdminAlertingAlertSensitivity>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AdminAlertingAlertSensitivity"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AdminAlertingAlertSensitivity Create()
            {
                return new AdminAlertingAlertSensitivity();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override AdminAlertingAlertSensitivity Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "high":
                        return High.Decoder.DecodeFields(reader);
                    case "highest":
                        return Highest.Decoder.DecodeFields(reader);
                    case "invalid":
                        return Invalid.Decoder.DecodeFields(reader);
                    case "low":
                        return Low.Decoder.DecodeFields(reader);
                    case "lowest":
                        return Lowest.Decoder.DecodeFields(reader);
                    case "medium":
                        return Medium.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The high object</para>
        /// </summary>
        public sealed class High : AdminAlertingAlertSensitivity
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<High> Encoder = new HighEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<High> Decoder = new HighDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="High" /> class.</para>
            /// </summary>
            private High()
            {
            }

            /// <summary>
            /// <para>A singleton instance of High</para>
            /// </summary>
            public static readonly High Instance = new High();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="High" />.</para>
            /// </summary>
            private class HighEncoder : enc.StructEncoder<High>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(High value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="High" />.</para>
            /// </summary>
            private class HighDecoder : enc.StructDecoder<High>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="High" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override High Create()
                {
                    return High.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The highest object</para>
        /// </summary>
        public sealed class Highest : AdminAlertingAlertSensitivity
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Highest> Encoder = new HighestEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Highest> Decoder = new HighestDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Highest" /> class.</para>
            /// </summary>
            private Highest()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Highest</para>
            /// </summary>
            public static readonly Highest Instance = new Highest();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Highest" />.</para>
            /// </summary>
            private class HighestEncoder : enc.StructEncoder<Highest>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Highest value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Highest" />.</para>
            /// </summary>
            private class HighestDecoder : enc.StructDecoder<Highest>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Highest" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Highest Create()
                {
                    return Highest.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The invalid object</para>
        /// </summary>
        public sealed class Invalid : AdminAlertingAlertSensitivity
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Invalid> Encoder = new InvalidEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Invalid> Decoder = new InvalidDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Invalid" /> class.</para>
            /// </summary>
            private Invalid()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Invalid</para>
            /// </summary>
            public static readonly Invalid Instance = new Invalid();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Invalid" />.</para>
            /// </summary>
            private class InvalidEncoder : enc.StructEncoder<Invalid>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Invalid value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Invalid" />.</para>
            /// </summary>
            private class InvalidDecoder : enc.StructDecoder<Invalid>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Invalid" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Invalid Create()
                {
                    return Invalid.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The low object</para>
        /// </summary>
        public sealed class Low : AdminAlertingAlertSensitivity
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Low> Encoder = new LowEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Low> Decoder = new LowDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Low" /> class.</para>
            /// </summary>
            private Low()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Low</para>
            /// </summary>
            public static readonly Low Instance = new Low();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Low" />.</para>
            /// </summary>
            private class LowEncoder : enc.StructEncoder<Low>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Low value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Low" />.</para>
            /// </summary>
            private class LowDecoder : enc.StructDecoder<Low>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Low" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Low Create()
                {
                    return Low.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The lowest object</para>
        /// </summary>
        public sealed class Lowest : AdminAlertingAlertSensitivity
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Lowest> Encoder = new LowestEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Lowest> Decoder = new LowestDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Lowest" /> class.</para>
            /// </summary>
            private Lowest()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Lowest</para>
            /// </summary>
            public static readonly Lowest Instance = new Lowest();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Lowest" />.</para>
            /// </summary>
            private class LowestEncoder : enc.StructEncoder<Lowest>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Lowest value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Lowest" />.</para>
            /// </summary>
            private class LowestDecoder : enc.StructDecoder<Lowest>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Lowest" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Lowest Create()
                {
                    return Lowest.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The medium object</para>
        /// </summary>
        public sealed class Medium : AdminAlertingAlertSensitivity
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Medium> Encoder = new MediumEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Medium> Decoder = new MediumDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Medium" /> class.</para>
            /// </summary>
            private Medium()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Medium</para>
            /// </summary>
            public static readonly Medium Instance = new Medium();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Medium" />.</para>
            /// </summary>
            private class MediumEncoder : enc.StructEncoder<Medium>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Medium value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Medium" />.</para>
            /// </summary>
            private class MediumDecoder : enc.StructDecoder<Medium>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Medium" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Medium Create()
                {
                    return Medium.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : AdminAlertingAlertSensitivity
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
