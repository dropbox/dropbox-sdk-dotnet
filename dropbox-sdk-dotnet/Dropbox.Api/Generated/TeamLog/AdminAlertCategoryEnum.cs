// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Alert category</para>
    /// </summary>
    public class AdminAlertCategoryEnum
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AdminAlertCategoryEnum> Encoder = new AdminAlertCategoryEnumEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AdminAlertCategoryEnum> Decoder = new AdminAlertCategoryEnumDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AdminAlertCategoryEnum" />
        /// class.</para>
        /// </summary>
        public AdminAlertCategoryEnum()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is AccountTakeover</para>
        /// </summary>
        public bool IsAccountTakeover
        {
            get
            {
                return this is AccountTakeover;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a AccountTakeover, or <c>null</c>.</para>
        /// </summary>
        public AccountTakeover AsAccountTakeover
        {
            get
            {
                return this as AccountTakeover;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is DataLossProtection</para>
        /// </summary>
        public bool IsDataLossProtection
        {
            get
            {
                return this is DataLossProtection;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a DataLossProtection, or <c>null</c>.</para>
        /// </summary>
        public DataLossProtection AsDataLossProtection
        {
            get
            {
                return this as DataLossProtection;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is MalwareSharing</para>
        /// </summary>
        public bool IsMalwareSharing
        {
            get
            {
                return this is MalwareSharing;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a MalwareSharing, or <c>null</c>.</para>
        /// </summary>
        public MalwareSharing AsMalwareSharing
        {
            get
            {
                return this as MalwareSharing;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is MassiveFileOperation</para>
        /// </summary>
        public bool IsMassiveFileOperation
        {
            get
            {
                return this is MassiveFileOperation;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a MassiveFileOperation, or <c>null</c>.</para>
        /// </summary>
        public MassiveFileOperation AsMassiveFileOperation
        {
            get
            {
                return this as MassiveFileOperation;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Na</para>
        /// </summary>
        public bool IsNa
        {
            get
            {
                return this is Na;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Na, or <c>null</c>.</para>
        /// </summary>
        public Na AsNa
        {
            get
            {
                return this as Na;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ThreatManagement</para>
        /// </summary>
        public bool IsThreatManagement
        {
            get
            {
                return this is ThreatManagement;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ThreatManagement, or <c>null</c>.</para>
        /// </summary>
        public ThreatManagement AsThreatManagement
        {
            get
            {
                return this as ThreatManagement;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AdminAlertCategoryEnum" />.</para>
        /// </summary>
        private class AdminAlertCategoryEnumEncoder : enc.StructEncoder<AdminAlertCategoryEnum>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AdminAlertCategoryEnum value, enc.IJsonWriter writer)
            {
                if (value is AccountTakeover)
                {
                    WriteProperty(".tag", "account_takeover", writer, enc.StringEncoder.Instance);
                    AccountTakeover.Encoder.EncodeFields((AccountTakeover)value, writer);
                    return;
                }
                if (value is DataLossProtection)
                {
                    WriteProperty(".tag", "data_loss_protection", writer, enc.StringEncoder.Instance);
                    DataLossProtection.Encoder.EncodeFields((DataLossProtection)value, writer);
                    return;
                }
                if (value is MalwareSharing)
                {
                    WriteProperty(".tag", "malware_sharing", writer, enc.StringEncoder.Instance);
                    MalwareSharing.Encoder.EncodeFields((MalwareSharing)value, writer);
                    return;
                }
                if (value is MassiveFileOperation)
                {
                    WriteProperty(".tag", "massive_file_operation", writer, enc.StringEncoder.Instance);
                    MassiveFileOperation.Encoder.EncodeFields((MassiveFileOperation)value, writer);
                    return;
                }
                if (value is Na)
                {
                    WriteProperty(".tag", "na", writer, enc.StringEncoder.Instance);
                    Na.Encoder.EncodeFields((Na)value, writer);
                    return;
                }
                if (value is ThreatManagement)
                {
                    WriteProperty(".tag", "threat_management", writer, enc.StringEncoder.Instance);
                    ThreatManagement.Encoder.EncodeFields((ThreatManagement)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AdminAlertCategoryEnum" />.</para>
        /// </summary>
        private class AdminAlertCategoryEnumDecoder : enc.UnionDecoder<AdminAlertCategoryEnum>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AdminAlertCategoryEnum"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AdminAlertCategoryEnum Create()
            {
                return new AdminAlertCategoryEnum();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override AdminAlertCategoryEnum Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "account_takeover":
                        return AccountTakeover.Decoder.DecodeFields(reader);
                    case "data_loss_protection":
                        return DataLossProtection.Decoder.DecodeFields(reader);
                    case "malware_sharing":
                        return MalwareSharing.Decoder.DecodeFields(reader);
                    case "massive_file_operation":
                        return MassiveFileOperation.Decoder.DecodeFields(reader);
                    case "na":
                        return Na.Decoder.DecodeFields(reader);
                    case "threat_management":
                        return ThreatManagement.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The account takeover object</para>
        /// </summary>
        public sealed class AccountTakeover : AdminAlertCategoryEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<AccountTakeover> Encoder = new AccountTakeoverEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<AccountTakeover> Decoder = new AccountTakeoverDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AccountTakeover" />
            /// class.</para>
            /// </summary>
            private AccountTakeover()
            {
            }

            /// <summary>
            /// <para>A singleton instance of AccountTakeover</para>
            /// </summary>
            public static readonly AccountTakeover Instance = new AccountTakeover();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="AccountTakeover" />.</para>
            /// </summary>
            private class AccountTakeoverEncoder : enc.StructEncoder<AccountTakeover>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(AccountTakeover value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="AccountTakeover" />.</para>
            /// </summary>
            private class AccountTakeoverDecoder : enc.StructDecoder<AccountTakeover>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="AccountTakeover" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override AccountTakeover Create()
                {
                    return AccountTakeover.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The data loss protection object</para>
        /// </summary>
        public sealed class DataLossProtection : AdminAlertCategoryEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<DataLossProtection> Encoder = new DataLossProtectionEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<DataLossProtection> Decoder = new DataLossProtectionDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DataLossProtection" />
            /// class.</para>
            /// </summary>
            private DataLossProtection()
            {
            }

            /// <summary>
            /// <para>A singleton instance of DataLossProtection</para>
            /// </summary>
            public static readonly DataLossProtection Instance = new DataLossProtection();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="DataLossProtection" />.</para>
            /// </summary>
            private class DataLossProtectionEncoder : enc.StructEncoder<DataLossProtection>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(DataLossProtection value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="DataLossProtection" />.</para>
            /// </summary>
            private class DataLossProtectionDecoder : enc.StructDecoder<DataLossProtection>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="DataLossProtection"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override DataLossProtection Create()
                {
                    return DataLossProtection.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The malware sharing object</para>
        /// </summary>
        public sealed class MalwareSharing : AdminAlertCategoryEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<MalwareSharing> Encoder = new MalwareSharingEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<MalwareSharing> Decoder = new MalwareSharingDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="MalwareSharing" />
            /// class.</para>
            /// </summary>
            private MalwareSharing()
            {
            }

            /// <summary>
            /// <para>A singleton instance of MalwareSharing</para>
            /// </summary>
            public static readonly MalwareSharing Instance = new MalwareSharing();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="MalwareSharing" />.</para>
            /// </summary>
            private class MalwareSharingEncoder : enc.StructEncoder<MalwareSharing>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(MalwareSharing value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="MalwareSharing" />.</para>
            /// </summary>
            private class MalwareSharingDecoder : enc.StructDecoder<MalwareSharing>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="MalwareSharing" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override MalwareSharing Create()
                {
                    return MalwareSharing.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The massive file operation object</para>
        /// </summary>
        public sealed class MassiveFileOperation : AdminAlertCategoryEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<MassiveFileOperation> Encoder = new MassiveFileOperationEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<MassiveFileOperation> Decoder = new MassiveFileOperationDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="MassiveFileOperation" />
            /// class.</para>
            /// </summary>
            private MassiveFileOperation()
            {
            }

            /// <summary>
            /// <para>A singleton instance of MassiveFileOperation</para>
            /// </summary>
            public static readonly MassiveFileOperation Instance = new MassiveFileOperation();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="MassiveFileOperation" />.</para>
            /// </summary>
            private class MassiveFileOperationEncoder : enc.StructEncoder<MassiveFileOperation>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(MassiveFileOperation value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="MassiveFileOperation" />.</para>
            /// </summary>
            private class MassiveFileOperationDecoder : enc.StructDecoder<MassiveFileOperation>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="MassiveFileOperation"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override MassiveFileOperation Create()
                {
                    return MassiveFileOperation.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The na object</para>
        /// </summary>
        public sealed class Na : AdminAlertCategoryEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Na> Encoder = new NaEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Na> Decoder = new NaDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Na" /> class.</para>
            /// </summary>
            private Na()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Na</para>
            /// </summary>
            public static readonly Na Instance = new Na();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Na" />.</para>
            /// </summary>
            private class NaEncoder : enc.StructEncoder<Na>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Na value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Na" />.</para>
            /// </summary>
            private class NaDecoder : enc.StructDecoder<Na>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Na" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Na Create()
                {
                    return Na.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The threat management object</para>
        /// </summary>
        public sealed class ThreatManagement : AdminAlertCategoryEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ThreatManagement> Encoder = new ThreatManagementEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ThreatManagement> Decoder = new ThreatManagementDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ThreatManagement" />
            /// class.</para>
            /// </summary>
            private ThreatManagement()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ThreatManagement</para>
            /// </summary>
            public static readonly ThreatManagement Instance = new ThreatManagement();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ThreatManagement" />.</para>
            /// </summary>
            private class ThreatManagementEncoder : enc.StructEncoder<ThreatManagement>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ThreatManagement value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ThreatManagement" />.</para>
            /// </summary>
            private class ThreatManagementDecoder : enc.StructDecoder<ThreatManagement>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ThreatManagement" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ThreatManagement Create()
                {
                    return ThreatManagement.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : AdminAlertCategoryEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
