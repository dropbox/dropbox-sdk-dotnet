// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The member remove action type object</para>
    /// </summary>
    public class MemberRemoveActionType
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<MemberRemoveActionType> Encoder = new MemberRemoveActionTypeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<MemberRemoveActionType> Decoder = new MemberRemoveActionTypeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MemberRemoveActionType" />
        /// class.</para>
        /// </summary>
        public MemberRemoveActionType()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Delete</para>
        /// </summary>
        public bool IsDelete
        {
            get
            {
                return this is Delete;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Delete, or <c>null</c>.</para>
        /// </summary>
        public Delete AsDelete
        {
            get
            {
                return this as Delete;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Leave</para>
        /// </summary>
        public bool IsLeave
        {
            get
            {
                return this is Leave;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Leave, or <c>null</c>.</para>
        /// </summary>
        public Leave AsLeave
        {
            get
            {
                return this as Leave;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Offboard</para>
        /// </summary>
        public bool IsOffboard
        {
            get
            {
                return this is Offboard;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Offboard, or <c>null</c>.</para>
        /// </summary>
        public Offboard AsOffboard
        {
            get
            {
                return this as Offboard;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// OffboardAndRetainTeamFolders</para>
        /// </summary>
        public bool IsOffboardAndRetainTeamFolders
        {
            get
            {
                return this is OffboardAndRetainTeamFolders;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a OffboardAndRetainTeamFolders, or <c>null</c>.</para>
        /// </summary>
        public OffboardAndRetainTeamFolders AsOffboardAndRetainTeamFolders
        {
            get
            {
                return this as OffboardAndRetainTeamFolders;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="MemberRemoveActionType" />.</para>
        /// </summary>
        private class MemberRemoveActionTypeEncoder : enc.StructEncoder<MemberRemoveActionType>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(MemberRemoveActionType value, enc.IJsonWriter writer)
            {
                if (value is Delete)
                {
                    WriteProperty(".tag", "delete", writer, enc.StringEncoder.Instance);
                    Delete.Encoder.EncodeFields((Delete)value, writer);
                    return;
                }
                if (value is Leave)
                {
                    WriteProperty(".tag", "leave", writer, enc.StringEncoder.Instance);
                    Leave.Encoder.EncodeFields((Leave)value, writer);
                    return;
                }
                if (value is Offboard)
                {
                    WriteProperty(".tag", "offboard", writer, enc.StringEncoder.Instance);
                    Offboard.Encoder.EncodeFields((Offboard)value, writer);
                    return;
                }
                if (value is OffboardAndRetainTeamFolders)
                {
                    WriteProperty(".tag", "offboard_and_retain_team_folders", writer, enc.StringEncoder.Instance);
                    OffboardAndRetainTeamFolders.Encoder.EncodeFields((OffboardAndRetainTeamFolders)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="MemberRemoveActionType" />.</para>
        /// </summary>
        private class MemberRemoveActionTypeDecoder : enc.UnionDecoder<MemberRemoveActionType>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="MemberRemoveActionType"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override MemberRemoveActionType Create()
            {
                return new MemberRemoveActionType();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override MemberRemoveActionType Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "delete":
                        return Delete.Decoder.DecodeFields(reader);
                    case "leave":
                        return Leave.Decoder.DecodeFields(reader);
                    case "offboard":
                        return Offboard.Decoder.DecodeFields(reader);
                    case "offboard_and_retain_team_folders":
                        return OffboardAndRetainTeamFolders.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The delete object</para>
        /// </summary>
        public sealed class Delete : MemberRemoveActionType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Delete> Encoder = new DeleteEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Delete> Decoder = new DeleteDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Delete" /> class.</para>
            /// </summary>
            private Delete()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Delete</para>
            /// </summary>
            public static readonly Delete Instance = new Delete();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Delete" />.</para>
            /// </summary>
            private class DeleteEncoder : enc.StructEncoder<Delete>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Delete value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Delete" />.</para>
            /// </summary>
            private class DeleteDecoder : enc.StructDecoder<Delete>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Delete" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Delete Create()
                {
                    return Delete.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The leave object</para>
        /// </summary>
        public sealed class Leave : MemberRemoveActionType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Leave> Encoder = new LeaveEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Leave> Decoder = new LeaveDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Leave" /> class.</para>
            /// </summary>
            private Leave()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Leave</para>
            /// </summary>
            public static readonly Leave Instance = new Leave();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Leave" />.</para>
            /// </summary>
            private class LeaveEncoder : enc.StructEncoder<Leave>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Leave value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Leave" />.</para>
            /// </summary>
            private class LeaveDecoder : enc.StructDecoder<Leave>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Leave" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Leave Create()
                {
                    return Leave.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The offboard object</para>
        /// </summary>
        public sealed class Offboard : MemberRemoveActionType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Offboard> Encoder = new OffboardEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Offboard> Decoder = new OffboardDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Offboard" /> class.</para>
            /// </summary>
            private Offboard()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Offboard</para>
            /// </summary>
            public static readonly Offboard Instance = new Offboard();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Offboard" />.</para>
            /// </summary>
            private class OffboardEncoder : enc.StructEncoder<Offboard>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Offboard value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Offboard" />.</para>
            /// </summary>
            private class OffboardDecoder : enc.StructDecoder<Offboard>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Offboard" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Offboard Create()
                {
                    return Offboard.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The offboard and retain team folders object</para>
        /// </summary>
        public sealed class OffboardAndRetainTeamFolders : MemberRemoveActionType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<OffboardAndRetainTeamFolders> Encoder = new OffboardAndRetainTeamFoldersEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<OffboardAndRetainTeamFolders> Decoder = new OffboardAndRetainTeamFoldersDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="OffboardAndRetainTeamFolders" /> class.</para>
            /// </summary>
            private OffboardAndRetainTeamFolders()
            {
            }

            /// <summary>
            /// <para>A singleton instance of OffboardAndRetainTeamFolders</para>
            /// </summary>
            public static readonly OffboardAndRetainTeamFolders Instance = new OffboardAndRetainTeamFolders();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="OffboardAndRetainTeamFolders" />.</para>
            /// </summary>
            private class OffboardAndRetainTeamFoldersEncoder : enc.StructEncoder<OffboardAndRetainTeamFolders>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(OffboardAndRetainTeamFolders value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="OffboardAndRetainTeamFolders" />.</para>
            /// </summary>
            private class OffboardAndRetainTeamFoldersDecoder : enc.StructDecoder<OffboardAndRetainTeamFolders>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="OffboardAndRetainTeamFolders" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override OffboardAndRetainTeamFolders Create()
                {
                    return OffboardAndRetainTeamFolders.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : MemberRemoveActionType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
