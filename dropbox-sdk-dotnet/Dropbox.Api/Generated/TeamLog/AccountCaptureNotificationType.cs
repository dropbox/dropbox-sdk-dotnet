// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The account capture notification type object</para>
    /// </summary>
    public class AccountCaptureNotificationType
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AccountCaptureNotificationType> Encoder = new AccountCaptureNotificationTypeEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AccountCaptureNotificationType> Decoder = new AccountCaptureNotificationTypeDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AccountCaptureNotificationType"
        /// /> class.</para>
        /// </summary>
        public AccountCaptureNotificationType()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// ActionableNotification</para>
        /// </summary>
        public bool IsActionableNotification
        {
            get
            {
                return this is ActionableNotification;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ActionableNotification, or <c>null</c>.</para>
        /// </summary>
        public ActionableNotification AsActionableNotification
        {
            get
            {
                return this as ActionableNotification;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// ProactiveWarningNotification</para>
        /// </summary>
        public bool IsProactiveWarningNotification
        {
            get
            {
                return this is ProactiveWarningNotification;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ProactiveWarningNotification, or <c>null</c>.</para>
        /// </summary>
        public ProactiveWarningNotification AsProactiveWarningNotification
        {
            get
            {
                return this as ProactiveWarningNotification;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AccountCaptureNotificationType" />.</para>
        /// </summary>
        private class AccountCaptureNotificationTypeEncoder : enc.StructEncoder<AccountCaptureNotificationType>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AccountCaptureNotificationType value, enc.IJsonWriter writer)
            {
                if (value is ActionableNotification)
                {
                    WriteProperty(".tag", "actionable_notification", writer, enc.StringEncoder.Instance);
                    ActionableNotification.Encoder.EncodeFields((ActionableNotification)value, writer);
                    return;
                }
                if (value is ProactiveWarningNotification)
                {
                    WriteProperty(".tag", "proactive_warning_notification", writer, enc.StringEncoder.Instance);
                    ProactiveWarningNotification.Encoder.EncodeFields((ProactiveWarningNotification)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AccountCaptureNotificationType" />.</para>
        /// </summary>
        private class AccountCaptureNotificationTypeDecoder : enc.UnionDecoder<AccountCaptureNotificationType>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AccountCaptureNotificationType"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AccountCaptureNotificationType Create()
            {
                return new AccountCaptureNotificationType();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override AccountCaptureNotificationType Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "actionable_notification":
                        return ActionableNotification.Decoder.DecodeFields(reader);
                    case "proactive_warning_notification":
                        return ProactiveWarningNotification.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The actionable notification object</para>
        /// </summary>
        public sealed class ActionableNotification : AccountCaptureNotificationType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ActionableNotification> Encoder = new ActionableNotificationEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ActionableNotification> Decoder = new ActionableNotificationDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ActionableNotification" />
            /// class.</para>
            /// </summary>
            private ActionableNotification()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ActionableNotification</para>
            /// </summary>
            public static readonly ActionableNotification Instance = new ActionableNotification();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ActionableNotification" />.</para>
            /// </summary>
            private class ActionableNotificationEncoder : enc.StructEncoder<ActionableNotification>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ActionableNotification value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ActionableNotification" />.</para>
            /// </summary>
            private class ActionableNotificationDecoder : enc.StructDecoder<ActionableNotification>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ActionableNotification"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ActionableNotification Create()
                {
                    return ActionableNotification.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The proactive warning notification object</para>
        /// </summary>
        public sealed class ProactiveWarningNotification : AccountCaptureNotificationType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ProactiveWarningNotification> Encoder = new ProactiveWarningNotificationEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ProactiveWarningNotification> Decoder = new ProactiveWarningNotificationDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="ProactiveWarningNotification" /> class.</para>
            /// </summary>
            private ProactiveWarningNotification()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ProactiveWarningNotification</para>
            /// </summary>
            public static readonly ProactiveWarningNotification Instance = new ProactiveWarningNotification();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ProactiveWarningNotification" />.</para>
            /// </summary>
            private class ProactiveWarningNotificationEncoder : enc.StructEncoder<ProactiveWarningNotification>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ProactiveWarningNotification value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ProactiveWarningNotification" />.</para>
            /// </summary>
            private class ProactiveWarningNotificationDecoder : enc.StructDecoder<ProactiveWarningNotification>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="ProactiveWarningNotification" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ProactiveWarningNotification Create()
                {
                    return ProactiveWarningNotification.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : AccountCaptureNotificationType
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
