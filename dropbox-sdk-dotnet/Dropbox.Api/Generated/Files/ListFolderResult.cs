// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The list folder result object</para>
    /// </summary>
    public class ListFolderResult
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ListFolderResult> Encoder = new ListFolderResultEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ListFolderResult> Decoder = new ListFolderResultDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListFolderResult" />
        /// class.</para>
        /// </summary>
        /// <param name="entries">The files and (direct) subfolders in the folder.</param>
        /// <param name="cursor">Pass the cursor into <see
        /// cref="Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync" /> to see
        /// what's changed in the folder since your previous query.</param>
        /// <param name="hasMore">If true, then there are more entries available. Pass the
        /// cursor to <see
        /// cref="Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync" /> to
        /// retrieve the rest.</param>
        public ListFolderResult(col.IEnumerable<Metadata> entries,
                                string cursor,
                                bool hasMore)
        {
            var entriesList = enc.Util.ToList(entries);

            if (entries == null)
            {
                throw new sys.ArgumentNullException("entries");
            }

            if (cursor == null)
            {
                throw new sys.ArgumentNullException("cursor");
            }
            if (cursor.Length < 1)
            {
                throw new sys.ArgumentOutOfRangeException("cursor", "Length should be at least 1");
            }

            this.Entries = entriesList;
            this.Cursor = cursor;
            this.HasMore = hasMore;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListFolderResult" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public ListFolderResult()
        {
        }

        /// <summary>
        /// <para>The files and (direct) subfolders in the folder.</para>
        /// </summary>
        public col.IList<Metadata> Entries { get; protected set; }

        /// <summary>
        /// <para>Pass the cursor into <see
        /// cref="Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync" /> to see
        /// what's changed in the folder since your previous query.</para>
        /// </summary>
        public string Cursor { get; protected set; }

        /// <summary>
        /// <para>If true, then there are more entries available. Pass the cursor to <see
        /// cref="Dropbox.Api.Files.Routes.FilesUserRoutes.ListFolderContinueAsync" /> to
        /// retrieve the rest.</para>
        /// </summary>
        public bool HasMore { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ListFolderResult" />.</para>
        /// </summary>
        private class ListFolderResultEncoder : enc.StructEncoder<ListFolderResult>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ListFolderResult value, enc.IJsonWriter writer)
            {
                WriteListProperty("entries", value.Entries, writer, global::Dropbox.Api.Files.Metadata.Encoder);
                WriteProperty("cursor", value.Cursor, writer, enc.StringEncoder.Instance);
                WriteProperty("has_more", value.HasMore, writer, enc.BooleanEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ListFolderResult" />.</para>
        /// </summary>
        private class ListFolderResultDecoder : enc.StructDecoder<ListFolderResult>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ListFolderResult" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ListFolderResult Create()
            {
                return new ListFolderResult();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(ListFolderResult value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "entries":
                        value.Entries = ReadList<Metadata>(reader, global::Dropbox.Api.Files.Metadata.Decoder);
                        break;
                    case "cursor":
                        value.Cursor = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "has_more":
                        value.HasMore = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
