// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Category of events in event audit log.</para>
    /// </summary>
    public class EventCategory
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<EventCategory> Encoder = new EventCategoryEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<EventCategory> Decoder = new EventCategoryDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="EventCategory" /> class.</para>
        /// </summary>
        public EventCategory()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Apps</para>
        /// </summary>
        public bool IsApps
        {
            get
            {
                return this is Apps;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Apps, or <c>null</c>.</para>
        /// </summary>
        public Apps AsApps
        {
            get
            {
                return this as Apps;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Comments</para>
        /// </summary>
        public bool IsComments
        {
            get
            {
                return this is Comments;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Comments, or <c>null</c>.</para>
        /// </summary>
        public Comments AsComments
        {
            get
            {
                return this as Comments;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is DataGovernance</para>
        /// </summary>
        public bool IsDataGovernance
        {
            get
            {
                return this is DataGovernance;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a DataGovernance, or <c>null</c>.</para>
        /// </summary>
        public DataGovernance AsDataGovernance
        {
            get
            {
                return this as DataGovernance;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Devices</para>
        /// </summary>
        public bool IsDevices
        {
            get
            {
                return this is Devices;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Devices, or <c>null</c>.</para>
        /// </summary>
        public Devices AsDevices
        {
            get
            {
                return this as Devices;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Domains</para>
        /// </summary>
        public bool IsDomains
        {
            get
            {
                return this is Domains;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Domains, or <c>null</c>.</para>
        /// </summary>
        public Domains AsDomains
        {
            get
            {
                return this as Domains;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FileOperations</para>
        /// </summary>
        public bool IsFileOperations
        {
            get
            {
                return this is FileOperations;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FileOperations, or <c>null</c>.</para>
        /// </summary>
        public FileOperations AsFileOperations
        {
            get
            {
                return this as FileOperations;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FileRequests</para>
        /// </summary>
        public bool IsFileRequests
        {
            get
            {
                return this is FileRequests;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FileRequests, or <c>null</c>.</para>
        /// </summary>
        public FileRequests AsFileRequests
        {
            get
            {
                return this as FileRequests;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Groups</para>
        /// </summary>
        public bool IsGroups
        {
            get
            {
                return this is Groups;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Groups, or <c>null</c>.</para>
        /// </summary>
        public Groups AsGroups
        {
            get
            {
                return this as Groups;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Logins</para>
        /// </summary>
        public bool IsLogins
        {
            get
            {
                return this is Logins;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Logins, or <c>null</c>.</para>
        /// </summary>
        public Logins AsLogins
        {
            get
            {
                return this as Logins;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Members</para>
        /// </summary>
        public bool IsMembers
        {
            get
            {
                return this is Members;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Members, or <c>null</c>.</para>
        /// </summary>
        public Members AsMembers
        {
            get
            {
                return this as Members;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Paper</para>
        /// </summary>
        public bool IsPaper
        {
            get
            {
                return this is Paper;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Paper, or <c>null</c>.</para>
        /// </summary>
        public Paper AsPaper
        {
            get
            {
                return this as Paper;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Passwords</para>
        /// </summary>
        public bool IsPasswords
        {
            get
            {
                return this is Passwords;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Passwords, or <c>null</c>.</para>
        /// </summary>
        public Passwords AsPasswords
        {
            get
            {
                return this as Passwords;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Reports</para>
        /// </summary>
        public bool IsReports
        {
            get
            {
                return this is Reports;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Reports, or <c>null</c>.</para>
        /// </summary>
        public Reports AsReports
        {
            get
            {
                return this as Reports;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Sharing</para>
        /// </summary>
        public bool IsSharing
        {
            get
            {
                return this is Sharing;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Sharing, or <c>null</c>.</para>
        /// </summary>
        public Sharing AsSharing
        {
            get
            {
                return this as Sharing;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Showcase</para>
        /// </summary>
        public bool IsShowcase
        {
            get
            {
                return this is Showcase;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Showcase, or <c>null</c>.</para>
        /// </summary>
        public Showcase AsShowcase
        {
            get
            {
                return this as Showcase;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Sso</para>
        /// </summary>
        public bool IsSso
        {
            get
            {
                return this is Sso;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Sso, or <c>null</c>.</para>
        /// </summary>
        public Sso AsSso
        {
            get
            {
                return this as Sso;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamFolders</para>
        /// </summary>
        public bool IsTeamFolders
        {
            get
            {
                return this is TeamFolders;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamFolders, or <c>null</c>.</para>
        /// </summary>
        public TeamFolders AsTeamFolders
        {
            get
            {
                return this as TeamFolders;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamPolicies</para>
        /// </summary>
        public bool IsTeamPolicies
        {
            get
            {
                return this is TeamPolicies;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamPolicies, or <c>null</c>.</para>
        /// </summary>
        public TeamPolicies AsTeamPolicies
        {
            get
            {
                return this as TeamPolicies;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamProfile</para>
        /// </summary>
        public bool IsTeamProfile
        {
            get
            {
                return this is TeamProfile;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamProfile, or <c>null</c>.</para>
        /// </summary>
        public TeamProfile AsTeamProfile
        {
            get
            {
                return this as TeamProfile;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Tfa</para>
        /// </summary>
        public bool IsTfa
        {
            get
            {
                return this is Tfa;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Tfa, or <c>null</c>.</para>
        /// </summary>
        public Tfa AsTfa
        {
            get
            {
                return this as Tfa;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TrustedTeams</para>
        /// </summary>
        public bool IsTrustedTeams
        {
            get
            {
                return this is TrustedTeams;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TrustedTeams, or <c>null</c>.</para>
        /// </summary>
        public TrustedTeams AsTrustedTeams
        {
            get
            {
                return this as TrustedTeams;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="EventCategory" />.</para>
        /// </summary>
        private class EventCategoryEncoder : enc.StructEncoder<EventCategory>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(EventCategory value, enc.IJsonWriter writer)
            {
                if (value is Apps)
                {
                    WriteProperty(".tag", "apps", writer, enc.StringEncoder.Instance);
                    Apps.Encoder.EncodeFields((Apps)value, writer);
                    return;
                }
                if (value is Comments)
                {
                    WriteProperty(".tag", "comments", writer, enc.StringEncoder.Instance);
                    Comments.Encoder.EncodeFields((Comments)value, writer);
                    return;
                }
                if (value is DataGovernance)
                {
                    WriteProperty(".tag", "data_governance", writer, enc.StringEncoder.Instance);
                    DataGovernance.Encoder.EncodeFields((DataGovernance)value, writer);
                    return;
                }
                if (value is Devices)
                {
                    WriteProperty(".tag", "devices", writer, enc.StringEncoder.Instance);
                    Devices.Encoder.EncodeFields((Devices)value, writer);
                    return;
                }
                if (value is Domains)
                {
                    WriteProperty(".tag", "domains", writer, enc.StringEncoder.Instance);
                    Domains.Encoder.EncodeFields((Domains)value, writer);
                    return;
                }
                if (value is FileOperations)
                {
                    WriteProperty(".tag", "file_operations", writer, enc.StringEncoder.Instance);
                    FileOperations.Encoder.EncodeFields((FileOperations)value, writer);
                    return;
                }
                if (value is FileRequests)
                {
                    WriteProperty(".tag", "file_requests", writer, enc.StringEncoder.Instance);
                    FileRequests.Encoder.EncodeFields((FileRequests)value, writer);
                    return;
                }
                if (value is Groups)
                {
                    WriteProperty(".tag", "groups", writer, enc.StringEncoder.Instance);
                    Groups.Encoder.EncodeFields((Groups)value, writer);
                    return;
                }
                if (value is Logins)
                {
                    WriteProperty(".tag", "logins", writer, enc.StringEncoder.Instance);
                    Logins.Encoder.EncodeFields((Logins)value, writer);
                    return;
                }
                if (value is Members)
                {
                    WriteProperty(".tag", "members", writer, enc.StringEncoder.Instance);
                    Members.Encoder.EncodeFields((Members)value, writer);
                    return;
                }
                if (value is Paper)
                {
                    WriteProperty(".tag", "paper", writer, enc.StringEncoder.Instance);
                    Paper.Encoder.EncodeFields((Paper)value, writer);
                    return;
                }
                if (value is Passwords)
                {
                    WriteProperty(".tag", "passwords", writer, enc.StringEncoder.Instance);
                    Passwords.Encoder.EncodeFields((Passwords)value, writer);
                    return;
                }
                if (value is Reports)
                {
                    WriteProperty(".tag", "reports", writer, enc.StringEncoder.Instance);
                    Reports.Encoder.EncodeFields((Reports)value, writer);
                    return;
                }
                if (value is Sharing)
                {
                    WriteProperty(".tag", "sharing", writer, enc.StringEncoder.Instance);
                    Sharing.Encoder.EncodeFields((Sharing)value, writer);
                    return;
                }
                if (value is Showcase)
                {
                    WriteProperty(".tag", "showcase", writer, enc.StringEncoder.Instance);
                    Showcase.Encoder.EncodeFields((Showcase)value, writer);
                    return;
                }
                if (value is Sso)
                {
                    WriteProperty(".tag", "sso", writer, enc.StringEncoder.Instance);
                    Sso.Encoder.EncodeFields((Sso)value, writer);
                    return;
                }
                if (value is TeamFolders)
                {
                    WriteProperty(".tag", "team_folders", writer, enc.StringEncoder.Instance);
                    TeamFolders.Encoder.EncodeFields((TeamFolders)value, writer);
                    return;
                }
                if (value is TeamPolicies)
                {
                    WriteProperty(".tag", "team_policies", writer, enc.StringEncoder.Instance);
                    TeamPolicies.Encoder.EncodeFields((TeamPolicies)value, writer);
                    return;
                }
                if (value is TeamProfile)
                {
                    WriteProperty(".tag", "team_profile", writer, enc.StringEncoder.Instance);
                    TeamProfile.Encoder.EncodeFields((TeamProfile)value, writer);
                    return;
                }
                if (value is Tfa)
                {
                    WriteProperty(".tag", "tfa", writer, enc.StringEncoder.Instance);
                    Tfa.Encoder.EncodeFields((Tfa)value, writer);
                    return;
                }
                if (value is TrustedTeams)
                {
                    WriteProperty(".tag", "trusted_teams", writer, enc.StringEncoder.Instance);
                    TrustedTeams.Encoder.EncodeFields((TrustedTeams)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="EventCategory" />.</para>
        /// </summary>
        private class EventCategoryDecoder : enc.UnionDecoder<EventCategory>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="EventCategory" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override EventCategory Create()
            {
                return new EventCategory();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override EventCategory Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "apps":
                        return Apps.Decoder.DecodeFields(reader);
                    case "comments":
                        return Comments.Decoder.DecodeFields(reader);
                    case "data_governance":
                        return DataGovernance.Decoder.DecodeFields(reader);
                    case "devices":
                        return Devices.Decoder.DecodeFields(reader);
                    case "domains":
                        return Domains.Decoder.DecodeFields(reader);
                    case "file_operations":
                        return FileOperations.Decoder.DecodeFields(reader);
                    case "file_requests":
                        return FileRequests.Decoder.DecodeFields(reader);
                    case "groups":
                        return Groups.Decoder.DecodeFields(reader);
                    case "logins":
                        return Logins.Decoder.DecodeFields(reader);
                    case "members":
                        return Members.Decoder.DecodeFields(reader);
                    case "paper":
                        return Paper.Decoder.DecodeFields(reader);
                    case "passwords":
                        return Passwords.Decoder.DecodeFields(reader);
                    case "reports":
                        return Reports.Decoder.DecodeFields(reader);
                    case "sharing":
                        return Sharing.Decoder.DecodeFields(reader);
                    case "showcase":
                        return Showcase.Decoder.DecodeFields(reader);
                    case "sso":
                        return Sso.Decoder.DecodeFields(reader);
                    case "team_folders":
                        return TeamFolders.Decoder.DecodeFields(reader);
                    case "team_policies":
                        return TeamPolicies.Decoder.DecodeFields(reader);
                    case "team_profile":
                        return TeamProfile.Decoder.DecodeFields(reader);
                    case "tfa":
                        return Tfa.Decoder.DecodeFields(reader);
                    case "trusted_teams":
                        return TrustedTeams.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Events that apply to management of linked apps.</para>
        /// </summary>
        public sealed class Apps : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Apps> Encoder = new AppsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Apps> Decoder = new AppsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Apps" /> class.</para>
            /// </summary>
            private Apps()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Apps</para>
            /// </summary>
            public static readonly Apps Instance = new Apps();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Apps" />.</para>
            /// </summary>
            private class AppsEncoder : enc.StructEncoder<Apps>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Apps value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Apps" />.</para>
            /// </summary>
            private class AppsDecoder : enc.StructDecoder<Apps>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Apps" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Apps Create()
                {
                    return Apps.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that have to do with comments on files and Paper documents.</para>
        /// </summary>
        public sealed class Comments : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Comments> Encoder = new CommentsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Comments> Decoder = new CommentsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Comments" /> class.</para>
            /// </summary>
            private Comments()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Comments</para>
            /// </summary>
            public static readonly Comments Instance = new Comments();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Comments" />.</para>
            /// </summary>
            private class CommentsEncoder : enc.StructEncoder<Comments>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Comments value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Comments" />.</para>
            /// </summary>
            private class CommentsDecoder : enc.StructDecoder<Comments>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Comments" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Comments Create()
                {
                    return Comments.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve data governance actions</para>
        /// </summary>
        public sealed class DataGovernance : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<DataGovernance> Encoder = new DataGovernanceEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<DataGovernance> Decoder = new DataGovernanceDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DataGovernance" />
            /// class.</para>
            /// </summary>
            private DataGovernance()
            {
            }

            /// <summary>
            /// <para>A singleton instance of DataGovernance</para>
            /// </summary>
            public static readonly DataGovernance Instance = new DataGovernance();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="DataGovernance" />.</para>
            /// </summary>
            private class DataGovernanceEncoder : enc.StructEncoder<DataGovernance>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(DataGovernance value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="DataGovernance" />.</para>
            /// </summary>
            private class DataGovernanceDecoder : enc.StructDecoder<DataGovernance>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="DataGovernance" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override DataGovernance Create()
                {
                    return DataGovernance.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that apply to linked devices on mobile, desktop and Web
        /// platforms.</para>
        /// </summary>
        public sealed class Devices : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Devices> Encoder = new DevicesEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Devices> Decoder = new DevicesDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Devices" /> class.</para>
            /// </summary>
            private Devices()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Devices</para>
            /// </summary>
            public static readonly Devices Instance = new Devices();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Devices" />.</para>
            /// </summary>
            private class DevicesEncoder : enc.StructEncoder<Devices>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Devices value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Devices" />.</para>
            /// </summary>
            private class DevicesDecoder : enc.StructDecoder<Devices>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Devices" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Devices Create()
                {
                    return Devices.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve domain management feature: domain verification, invite
        /// enforcement and account capture.</para>
        /// </summary>
        public sealed class Domains : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Domains> Encoder = new DomainsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Domains> Decoder = new DomainsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Domains" /> class.</para>
            /// </summary>
            private Domains()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Domains</para>
            /// </summary>
            public static readonly Domains Instance = new Domains();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Domains" />.</para>
            /// </summary>
            private class DomainsEncoder : enc.StructEncoder<Domains>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Domains value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Domains" />.</para>
            /// </summary>
            private class DomainsDecoder : enc.StructDecoder<Domains>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Domains" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Domains Create()
                {
                    return Domains.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that have to do with filesystem operations on files and folders: copy,
        /// move, delete, etc.</para>
        /// </summary>
        public sealed class FileOperations : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FileOperations> Encoder = new FileOperationsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FileOperations> Decoder = new FileOperationsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FileOperations" />
            /// class.</para>
            /// </summary>
            private FileOperations()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FileOperations</para>
            /// </summary>
            public static readonly FileOperations Instance = new FileOperations();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FileOperations" />.</para>
            /// </summary>
            private class FileOperationsEncoder : enc.StructEncoder<FileOperations>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FileOperations value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FileOperations" />.</para>
            /// </summary>
            private class FileOperationsDecoder : enc.StructDecoder<FileOperations>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FileOperations" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FileOperations Create()
                {
                    return FileOperations.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that apply to the file requests feature.</para>
        /// </summary>
        public sealed class FileRequests : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FileRequests> Encoder = new FileRequestsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FileRequests> Decoder = new FileRequestsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FileRequests" />
            /// class.</para>
            /// </summary>
            private FileRequests()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FileRequests</para>
            /// </summary>
            public static readonly FileRequests Instance = new FileRequests();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FileRequests" />.</para>
            /// </summary>
            private class FileRequestsEncoder : enc.StructEncoder<FileRequests>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FileRequests value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FileRequests" />.</para>
            /// </summary>
            private class FileRequestsDecoder : enc.StructDecoder<FileRequests>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FileRequests" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FileRequests Create()
                {
                    return FileRequests.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve group management.</para>
        /// </summary>
        public sealed class Groups : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Groups> Encoder = new GroupsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Groups> Decoder = new GroupsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Groups" /> class.</para>
            /// </summary>
            private Groups()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Groups</para>
            /// </summary>
            public static readonly Groups Instance = new Groups();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Groups" />.</para>
            /// </summary>
            private class GroupsEncoder : enc.StructEncoder<Groups>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Groups value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Groups" />.</para>
            /// </summary>
            private class GroupsDecoder : enc.StructDecoder<Groups>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Groups" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Groups Create()
                {
                    return Groups.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve users signing in to or out of Dropbox.</para>
        /// </summary>
        public sealed class Logins : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Logins> Encoder = new LoginsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Logins> Decoder = new LoginsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Logins" /> class.</para>
            /// </summary>
            private Logins()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Logins</para>
            /// </summary>
            public static readonly Logins Instance = new Logins();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Logins" />.</para>
            /// </summary>
            private class LoginsEncoder : enc.StructEncoder<Logins>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Logins value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Logins" />.</para>
            /// </summary>
            private class LoginsDecoder : enc.StructDecoder<Logins>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Logins" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Logins Create()
                {
                    return Logins.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve team member management.</para>
        /// </summary>
        public sealed class Members : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Members> Encoder = new MembersEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Members> Decoder = new MembersDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Members" /> class.</para>
            /// </summary>
            private Members()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Members</para>
            /// </summary>
            public static readonly Members Instance = new Members();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Members" />.</para>
            /// </summary>
            private class MembersEncoder : enc.StructEncoder<Members>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Members value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Members" />.</para>
            /// </summary>
            private class MembersDecoder : enc.StructDecoder<Members>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Members" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Members Create()
                {
                    return Members.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that apply to Dropbox Paper.</para>
        /// </summary>
        public sealed class Paper : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Paper> Encoder = new PaperEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Paper> Decoder = new PaperDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Paper" /> class.</para>
            /// </summary>
            private Paper()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Paper</para>
            /// </summary>
            public static readonly Paper Instance = new Paper();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Paper" />.</para>
            /// </summary>
            private class PaperEncoder : enc.StructEncoder<Paper>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Paper value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Paper" />.</para>
            /// </summary>
            private class PaperDecoder : enc.StructDecoder<Paper>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Paper" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Paper Create()
                {
                    return Paper.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve using, changing or resetting passwords.</para>
        /// </summary>
        public sealed class Passwords : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Passwords> Encoder = new PasswordsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Passwords> Decoder = new PasswordsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Passwords" /> class.</para>
            /// </summary>
            private Passwords()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Passwords</para>
            /// </summary>
            public static readonly Passwords Instance = new Passwords();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Passwords" />.</para>
            /// </summary>
            private class PasswordsEncoder : enc.StructEncoder<Passwords>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Passwords value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Passwords" />.</para>
            /// </summary>
            private class PasswordsDecoder : enc.StructDecoder<Passwords>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Passwords" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Passwords Create()
                {
                    return Passwords.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that concern generation of admin reports, including team activity and
        /// device usage.</para>
        /// </summary>
        public sealed class Reports : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Reports> Encoder = new ReportsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Reports> Decoder = new ReportsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Reports" /> class.</para>
            /// </summary>
            private Reports()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Reports</para>
            /// </summary>
            public static readonly Reports Instance = new Reports();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Reports" />.</para>
            /// </summary>
            private class ReportsEncoder : enc.StructEncoder<Reports>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Reports value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Reports" />.</para>
            /// </summary>
            private class ReportsDecoder : enc.StructDecoder<Reports>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Reports" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Reports Create()
                {
                    return Reports.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that apply to all types of sharing and collaboration.</para>
        /// </summary>
        public sealed class Sharing : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Sharing> Encoder = new SharingEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Sharing> Decoder = new SharingDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Sharing" /> class.</para>
            /// </summary>
            private Sharing()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Sharing</para>
            /// </summary>
            public static readonly Sharing Instance = new Sharing();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Sharing" />.</para>
            /// </summary>
            private class SharingEncoder : enc.StructEncoder<Sharing>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Sharing value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Sharing" />.</para>
            /// </summary>
            private class SharingDecoder : enc.StructDecoder<Sharing>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Sharing" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Sharing Create()
                {
                    return Sharing.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that apply to Dropbox Showcase.</para>
        /// </summary>
        public sealed class Showcase : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Showcase> Encoder = new ShowcaseEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Showcase> Decoder = new ShowcaseDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Showcase" /> class.</para>
            /// </summary>
            private Showcase()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Showcase</para>
            /// </summary>
            public static readonly Showcase Instance = new Showcase();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Showcase" />.</para>
            /// </summary>
            private class ShowcaseEncoder : enc.StructEncoder<Showcase>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Showcase value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Showcase" />.</para>
            /// </summary>
            private class ShowcaseDecoder : enc.StructDecoder<Showcase>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Showcase" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Showcase Create()
                {
                    return Showcase.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve using or configuring single sign-on as well as
        /// administrative policies concerning single sign-on.</para>
        /// </summary>
        public sealed class Sso : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Sso> Encoder = new SsoEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Sso> Decoder = new SsoDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Sso" /> class.</para>
            /// </summary>
            private Sso()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Sso</para>
            /// </summary>
            public static readonly Sso Instance = new Sso();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Sso" />.</para>
            /// </summary>
            private class SsoEncoder : enc.StructEncoder<Sso>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Sso value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Sso" />.</para>
            /// </summary>
            private class SsoDecoder : enc.StructDecoder<Sso>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Sso" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Sso Create()
                {
                    return Sso.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve team folder management.</para>
        /// </summary>
        public sealed class TeamFolders : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamFolders> Encoder = new TeamFoldersEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamFolders> Decoder = new TeamFoldersDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamFolders" />
            /// class.</para>
            /// </summary>
            private TeamFolders()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TeamFolders</para>
            /// </summary>
            public static readonly TeamFolders Instance = new TeamFolders();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamFolders" />.</para>
            /// </summary>
            private class TeamFoldersEncoder : enc.StructEncoder<TeamFolders>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamFolders value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamFolders" />.</para>
            /// </summary>
            private class TeamFoldersDecoder : enc.StructDecoder<TeamFolders>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamFolders" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamFolders Create()
                {
                    return TeamFolders.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve a change in team-wide policies.</para>
        /// </summary>
        public sealed class TeamPolicies : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamPolicies> Encoder = new TeamPoliciesEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamPolicies> Decoder = new TeamPoliciesDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamPolicies" />
            /// class.</para>
            /// </summary>
            private TeamPolicies()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TeamPolicies</para>
            /// </summary>
            public static readonly TeamPolicies Instance = new TeamPolicies();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamPolicies" />.</para>
            /// </summary>
            private class TeamPoliciesEncoder : enc.StructEncoder<TeamPolicies>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamPolicies value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamPolicies" />.</para>
            /// </summary>
            private class TeamPoliciesDecoder : enc.StructDecoder<TeamPolicies>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamPolicies" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamPolicies Create()
                {
                    return TeamPolicies.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve a change in the team profile.</para>
        /// </summary>
        public sealed class TeamProfile : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamProfile> Encoder = new TeamProfileEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamProfile> Decoder = new TeamProfileDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamProfile" />
            /// class.</para>
            /// </summary>
            private TeamProfile()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TeamProfile</para>
            /// </summary>
            public static readonly TeamProfile Instance = new TeamProfile();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamProfile" />.</para>
            /// </summary>
            private class TeamProfileEncoder : enc.StructEncoder<TeamProfile>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamProfile value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamProfile" />.</para>
            /// </summary>
            private class TeamProfileDecoder : enc.StructDecoder<TeamProfile>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamProfile" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamProfile Create()
                {
                    return TeamProfile.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that involve using or configuring two factor authentication as well as
        /// administrative policies concerning two factor authentication.</para>
        /// </summary>
        public sealed class Tfa : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Tfa> Encoder = new TfaEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Tfa> Decoder = new TfaDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Tfa" /> class.</para>
            /// </summary>
            private Tfa()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Tfa</para>
            /// </summary>
            public static readonly Tfa Instance = new Tfa();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Tfa" />.</para>
            /// </summary>
            private class TfaEncoder : enc.StructEncoder<Tfa>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Tfa value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Tfa" />.</para>
            /// </summary>
            private class TfaDecoder : enc.StructDecoder<Tfa>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Tfa" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Tfa Create()
                {
                    return Tfa.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Events that apply to cross-team trust establishment.</para>
        /// </summary>
        public sealed class TrustedTeams : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TrustedTeams> Encoder = new TrustedTeamsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TrustedTeams> Decoder = new TrustedTeamsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TrustedTeams" />
            /// class.</para>
            /// </summary>
            private TrustedTeams()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TrustedTeams</para>
            /// </summary>
            public static readonly TrustedTeams Instance = new TrustedTeams();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TrustedTeams" />.</para>
            /// </summary>
            private class TrustedTeamsEncoder : enc.StructEncoder<TrustedTeams>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TrustedTeams value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TrustedTeams" />.</para>
            /// </summary>
            private class TrustedTeamsDecoder : enc.StructDecoder<TrustedTeams>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TrustedTeams" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TrustedTeams Create()
                {
                    return TrustedTeams.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : EventCategory
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
