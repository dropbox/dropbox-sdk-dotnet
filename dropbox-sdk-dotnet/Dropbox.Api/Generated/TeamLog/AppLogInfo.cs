// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>App's logged information.</para>
    /// </summary>
    /// <seealso cref="AppLinkTeamDetails" />
    /// <seealso cref="AppLinkUserDetails" />
    /// <seealso cref="AppUnlinkTeamDetails" />
    /// <seealso cref="AppUnlinkUserDetails" />
    /// <seealso cref="TeamLinkedAppLogInfo" />
    /// <seealso cref="UserLinkedAppLogInfo" />
    /// <seealso cref="UserOrTeamLinkedAppLogInfo" />
    public class AppLogInfo
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AppLogInfo> Encoder = new AppLogInfoEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AppLogInfo> Decoder = new AppLogInfoDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AppLogInfo" /> class.</para>
        /// </summary>
        /// <param name="appId">App unique ID.</param>
        /// <param name="displayName">App display name.</param>
        protected AppLogInfo(string appId = null,
                             string displayName = null)
        {
            this.AppId = appId;
            this.DisplayName = displayName;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AppLogInfo" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public AppLogInfo()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserOrTeamLinkedApp</para>
        /// </summary>
        public bool IsUserOrTeamLinkedApp
        {
            get
            {
                return this is UserOrTeamLinkedAppLogInfo;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a <see cref="UserOrTeamLinkedAppLogInfo" />, or
        /// <c>null</c>.</para>
        /// </summary>
        public UserOrTeamLinkedAppLogInfo AsUserOrTeamLinkedApp
        {
            get
            {
                return this as UserOrTeamLinkedAppLogInfo;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserLinkedApp</para>
        /// </summary>
        public bool IsUserLinkedApp
        {
            get
            {
                return this is UserLinkedAppLogInfo;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a <see cref="UserLinkedAppLogInfo" />, or
        /// <c>null</c>.</para>
        /// </summary>
        public UserLinkedAppLogInfo AsUserLinkedApp
        {
            get
            {
                return this as UserLinkedAppLogInfo;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamLinkedApp</para>
        /// </summary>
        public bool IsTeamLinkedApp
        {
            get
            {
                return this is TeamLinkedAppLogInfo;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a <see cref="TeamLinkedAppLogInfo" />, or
        /// <c>null</c>.</para>
        /// </summary>
        public TeamLinkedAppLogInfo AsTeamLinkedApp
        {
            get
            {
                return this as TeamLinkedAppLogInfo;
            }
        }

        /// <summary>
        /// <para>App unique ID.</para>
        /// </summary>
        public string AppId { get; protected set; }

        /// <summary>
        /// <para>App display name.</para>
        /// </summary>
        public string DisplayName { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AppLogInfo" />.</para>
        /// </summary>
        private class AppLogInfoEncoder : enc.StructEncoder<AppLogInfo>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AppLogInfo value, enc.IJsonWriter writer)
            {
                if (value is UserOrTeamLinkedAppLogInfo)
                {
                    WriteProperty(".tag", "user_or_team_linked_app", writer, enc.StringEncoder.Instance);
                    UserOrTeamLinkedAppLogInfo.Encoder.EncodeFields((UserOrTeamLinkedAppLogInfo)value, writer);
                    return;
                }
                if (value is UserLinkedAppLogInfo)
                {
                    WriteProperty(".tag", "user_linked_app", writer, enc.StringEncoder.Instance);
                    UserLinkedAppLogInfo.Encoder.EncodeFields((UserLinkedAppLogInfo)value, writer);
                    return;
                }
                if (value is TeamLinkedAppLogInfo)
                {
                    WriteProperty(".tag", "team_linked_app", writer, enc.StringEncoder.Instance);
                    TeamLinkedAppLogInfo.Encoder.EncodeFields((TeamLinkedAppLogInfo)value, writer);
                    return;
                }
                if (value.AppId != null)
                {
                    WriteProperty("app_id", value.AppId, writer, enc.StringEncoder.Instance);
                }
                if (value.DisplayName != null)
                {
                    WriteProperty("display_name", value.DisplayName, writer, enc.StringEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AppLogInfo" />.</para>
        /// </summary>
        private class AppLogInfoDecoder : enc.UnionDecoder<AppLogInfo>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AppLogInfo" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AppLogInfo Create()
            {
                return new AppLogInfo();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override AppLogInfo Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "user_or_team_linked_app":
                        return UserOrTeamLinkedAppLogInfo.Decoder.DecodeFields(reader);
                    case "user_linked_app":
                        return UserLinkedAppLogInfo.Decoder.DecodeFields(reader);
                    case "team_linked_app":
                        return TeamLinkedAppLogInfo.Decoder.DecodeFields(reader);
                    default:
                        return base.Decode(reader);
                }
            }
            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(AppLogInfo value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "app_id":
                        value.AppId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "display_name":
                        value.DisplayName = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
