// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Path's details.</para>
    /// </summary>
    /// <seealso cref="FileLogInfo" />
    /// <seealso cref="FileOrFolderLogInfo" />
    /// <seealso cref="FolderLogInfo" />
    public class PathLogInfo
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<PathLogInfo> Encoder = new PathLogInfoEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<PathLogInfo> Decoder = new PathLogInfoDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PathLogInfo" /> class.</para>
        /// </summary>
        /// <param name="namespaceRelative">Path relative to the namespace containing the
        /// content.</param>
        /// <param name="contextual">Fully qualified path relative to event's context.</param>
        public PathLogInfo(NamespaceRelativePathLogInfo namespaceRelative,
                           string contextual = null)
        {
            if (namespaceRelative == null)
            {
                throw new sys.ArgumentNullException("namespaceRelative");
            }

            this.NamespaceRelative = namespaceRelative;
            this.Contextual = contextual;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PathLogInfo" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public PathLogInfo()
        {
        }

        /// <summary>
        /// <para>Path relative to the namespace containing the content.</para>
        /// </summary>
        public NamespaceRelativePathLogInfo NamespaceRelative { get; protected set; }

        /// <summary>
        /// <para>Fully qualified path relative to event's context.</para>
        /// </summary>
        public string Contextual { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="PathLogInfo" />.</para>
        /// </summary>
        private class PathLogInfoEncoder : enc.StructEncoder<PathLogInfo>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(PathLogInfo value, enc.IJsonWriter writer)
            {
                WriteProperty("namespace_relative", value.NamespaceRelative, writer, global::Dropbox.Api.TeamLog.NamespaceRelativePathLogInfo.Encoder);
                if (value.Contextual != null)
                {
                    WriteProperty("contextual", value.Contextual, writer, enc.StringEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="PathLogInfo" />.</para>
        /// </summary>
        private class PathLogInfoDecoder : enc.StructDecoder<PathLogInfo>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="PathLogInfo" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override PathLogInfo Create()
            {
                return new PathLogInfo();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(PathLogInfo value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "namespace_relative":
                        value.NamespaceRelative = global::Dropbox.Api.TeamLog.NamespaceRelativePathLogInfo.Decoder.Decode(reader);
                        break;
                    case "contextual":
                        value.Contextual = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
