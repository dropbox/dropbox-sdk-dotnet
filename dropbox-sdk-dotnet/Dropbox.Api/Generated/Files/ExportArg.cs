// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The export arg object</para>
    /// </summary>
    public class ExportArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ExportArg> Encoder = new ExportArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ExportArg> Decoder = new ExportArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ExportArg" /> class.</para>
        /// </summary>
        /// <param name="path">The path of the file to be exported.</param>
        /// <param name="exportFormat">The file format to which the file should be exported.
        /// This must be one of the formats listed in the file's export_options returned by
        /// <see cref="Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync" />. If none
        /// is specified, the default format (specified in export_as in file metadata) will be
        /// used.</param>
        public ExportArg(string path,
                         string exportFormat = null)
        {
            if (path == null)
            {
                throw new sys.ArgumentNullException("path");
            }
            if (!re.Regex.IsMatch(path, @"\A(?:(/(.|[\r\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?))\z"))
            {
                throw new sys.ArgumentOutOfRangeException("path", @"Value should match pattern '\A(?:(/(.|[\r\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?))\z'");
            }

            this.Path = path;
            this.ExportFormat = exportFormat;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ExportArg" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public ExportArg()
        {
        }

        /// <summary>
        /// <para>The path of the file to be exported.</para>
        /// </summary>
        public string Path { get; protected set; }

        /// <summary>
        /// <para>The file format to which the file should be exported. This must be one of the
        /// formats listed in the file's export_options returned by <see
        /// cref="Dropbox.Api.Files.Routes.FilesUserRoutes.GetMetadataAsync" />. If none is
        /// specified, the default format (specified in export_as in file metadata) will be
        /// used.</para>
        /// </summary>
        public string ExportFormat { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ExportArg" />.</para>
        /// </summary>
        private class ExportArgEncoder : enc.StructEncoder<ExportArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ExportArg value, enc.IJsonWriter writer)
            {
                WriteProperty("path", value.Path, writer, enc.StringEncoder.Instance);
                if (value.ExportFormat != null)
                {
                    WriteProperty("export_format", value.ExportFormat, writer, enc.StringEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ExportArg" />.</para>
        /// </summary>
        private class ExportArgDecoder : enc.StructDecoder<ExportArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ExportArg" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ExportArg Create()
            {
                return new ExportArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(ExportArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "path":
                        value.Path = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "export_format":
                        value.ExportFormat = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
