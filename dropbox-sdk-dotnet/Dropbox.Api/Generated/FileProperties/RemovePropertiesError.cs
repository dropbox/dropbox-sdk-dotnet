// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.FileProperties
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The remove properties error object</para>
    /// </summary>
    public class RemovePropertiesError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<RemovePropertiesError> Encoder = new RemovePropertiesErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<RemovePropertiesError> Decoder = new RemovePropertiesErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="RemovePropertiesError" />
        /// class.</para>
        /// </summary>
        public RemovePropertiesError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is PropertyGroupLookup</para>
        /// </summary>
        public bool IsPropertyGroupLookup
        {
            get
            {
                return this is PropertyGroupLookup;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a PropertyGroupLookup, or <c>null</c>.</para>
        /// </summary>
        public PropertyGroupLookup AsPropertyGroupLookup
        {
            get
            {
                return this as PropertyGroupLookup;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Path</para>
        /// </summary>
        public bool IsPath
        {
            get
            {
                return this is Path;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Path, or <c>null</c>.</para>
        /// </summary>
        public Path AsPath
        {
            get
            {
                return this as Path;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UnsupportedFolder</para>
        /// </summary>
        public bool IsUnsupportedFolder
        {
            get
            {
                return this is UnsupportedFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UnsupportedFolder, or <c>null</c>.</para>
        /// </summary>
        public UnsupportedFolder AsUnsupportedFolder
        {
            get
            {
                return this as UnsupportedFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TemplateNotFound</para>
        /// </summary>
        public bool IsTemplateNotFound
        {
            get
            {
                return this is TemplateNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TemplateNotFound, or <c>null</c>.</para>
        /// </summary>
        public TemplateNotFound AsTemplateNotFound
        {
            get
            {
                return this as TemplateNotFound;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RestrictedContent</para>
        /// </summary>
        public bool IsRestrictedContent
        {
            get
            {
                return this is RestrictedContent;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RestrictedContent, or <c>null</c>.</para>
        /// </summary>
        public RestrictedContent AsRestrictedContent
        {
            get
            {
                return this as RestrictedContent;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="RemovePropertiesError" />.</para>
        /// </summary>
        private class RemovePropertiesErrorEncoder : enc.StructEncoder<RemovePropertiesError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(RemovePropertiesError value, enc.IJsonWriter writer)
            {
                if (value is PropertyGroupLookup)
                {
                    WriteProperty(".tag", "property_group_lookup", writer, enc.StringEncoder.Instance);
                    PropertyGroupLookup.Encoder.EncodeFields((PropertyGroupLookup)value, writer);
                    return;
                }
                if (value is Path)
                {
                    WriteProperty(".tag", "path", writer, enc.StringEncoder.Instance);
                    Path.Encoder.EncodeFields((Path)value, writer);
                    return;
                }
                if (value is UnsupportedFolder)
                {
                    WriteProperty(".tag", "unsupported_folder", writer, enc.StringEncoder.Instance);
                    UnsupportedFolder.Encoder.EncodeFields((UnsupportedFolder)value, writer);
                    return;
                }
                if (value is TemplateNotFound)
                {
                    WriteProperty(".tag", "template_not_found", writer, enc.StringEncoder.Instance);
                    TemplateNotFound.Encoder.EncodeFields((TemplateNotFound)value, writer);
                    return;
                }
                if (value is RestrictedContent)
                {
                    WriteProperty(".tag", "restricted_content", writer, enc.StringEncoder.Instance);
                    RestrictedContent.Encoder.EncodeFields((RestrictedContent)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="RemovePropertiesError" />.</para>
        /// </summary>
        private class RemovePropertiesErrorDecoder : enc.UnionDecoder<RemovePropertiesError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="RemovePropertiesError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override RemovePropertiesError Create()
            {
                return new RemovePropertiesError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override RemovePropertiesError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "property_group_lookup":
                        return PropertyGroupLookup.Decoder.DecodeFields(reader);
                    case "path":
                        return Path.Decoder.DecodeFields(reader);
                    case "unsupported_folder":
                        return UnsupportedFolder.Decoder.DecodeFields(reader);
                    case "template_not_found":
                        return TemplateNotFound.Decoder.DecodeFields(reader);
                    case "restricted_content":
                        return RestrictedContent.Decoder.DecodeFields(reader);
                    case "other":
                        return Other.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The property group lookup object</para>
        /// </summary>
        public sealed class PropertyGroupLookup : RemovePropertiesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<PropertyGroupLookup> Encoder = new PropertyGroupLookupEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<PropertyGroupLookup> Decoder = new PropertyGroupLookupDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="PropertyGroupLookup" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public PropertyGroupLookup(LookUpPropertiesError value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="PropertyGroupLookup" />
            /// class.</para>
            /// </summary>
            private PropertyGroupLookup()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public LookUpPropertiesError Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="PropertyGroupLookup" />.</para>
            /// </summary>
            private class PropertyGroupLookupEncoder : enc.StructEncoder<PropertyGroupLookup>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(PropertyGroupLookup value, enc.IJsonWriter writer)
                {
                    WriteProperty("property_group_lookup", value.Value, writer, global::Dropbox.Api.FileProperties.LookUpPropertiesError.Encoder);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="PropertyGroupLookup" />.</para>
            /// </summary>
            private class PropertyGroupLookupDecoder : enc.StructDecoder<PropertyGroupLookup>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="PropertyGroupLookup"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override PropertyGroupLookup Create()
                {
                    return new PropertyGroupLookup();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(PropertyGroupLookup value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "property_group_lookup":
                            value.Value = global::Dropbox.Api.FileProperties.LookUpPropertiesError.Decoder.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The path object</para>
        /// </summary>
        public sealed class Path : RemovePropertiesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Path> Encoder = new PathEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Path> Decoder = new PathDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Path" /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public Path(LookupError value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Path" /> class.</para>
            /// </summary>
            private Path()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public LookupError Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Path" />.</para>
            /// </summary>
            private class PathEncoder : enc.StructEncoder<Path>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Path value, enc.IJsonWriter writer)
                {
                    WriteProperty("path", value.Value, writer, global::Dropbox.Api.FileProperties.LookupError.Encoder);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Path" />.</para>
            /// </summary>
            private class PathDecoder : enc.StructDecoder<Path>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Path" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Path Create()
                {
                    return new Path();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(Path value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "path":
                            value.Value = global::Dropbox.Api.FileProperties.LookupError.Decoder.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>This folder cannot be tagged. Tagging folders is not supported for team-owned
        /// templates.</para>
        /// </summary>
        public sealed class UnsupportedFolder : RemovePropertiesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UnsupportedFolder> Encoder = new UnsupportedFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UnsupportedFolder> Decoder = new UnsupportedFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UnsupportedFolder" />
            /// class.</para>
            /// </summary>
            private UnsupportedFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UnsupportedFolder</para>
            /// </summary>
            public static readonly UnsupportedFolder Instance = new UnsupportedFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UnsupportedFolder" />.</para>
            /// </summary>
            private class UnsupportedFolderEncoder : enc.StructEncoder<UnsupportedFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UnsupportedFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UnsupportedFolder" />.</para>
            /// </summary>
            private class UnsupportedFolderDecoder : enc.StructDecoder<UnsupportedFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UnsupportedFolder"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UnsupportedFolder Create()
                {
                    return UnsupportedFolder.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Template does not exist for the given identifier.</para>
        /// </summary>
        public sealed class TemplateNotFound : RemovePropertiesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TemplateNotFound> Encoder = new TemplateNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TemplateNotFound> Decoder = new TemplateNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TemplateNotFound" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public TemplateNotFound(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TemplateNotFound" />
            /// class.</para>
            /// </summary>
            private TemplateNotFound()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TemplateNotFound" />.</para>
            /// </summary>
            private class TemplateNotFoundEncoder : enc.StructEncoder<TemplateNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TemplateNotFound value, enc.IJsonWriter writer)
                {
                    WriteProperty("template_not_found", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TemplateNotFound" />.</para>
            /// </summary>
            private class TemplateNotFoundDecoder : enc.StructDecoder<TemplateNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TemplateNotFound" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TemplateNotFound Create()
                {
                    return new TemplateNotFound();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(TemplateNotFound value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "template_not_found":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>You do not have permission to modify this template.</para>
        /// </summary>
        public sealed class RestrictedContent : RemovePropertiesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RestrictedContent> Encoder = new RestrictedContentEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RestrictedContent> Decoder = new RestrictedContentDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RestrictedContent" />
            /// class.</para>
            /// </summary>
            private RestrictedContent()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RestrictedContent</para>
            /// </summary>
            public static readonly RestrictedContent Instance = new RestrictedContent();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RestrictedContent" />.</para>
            /// </summary>
            private class RestrictedContentEncoder : enc.StructEncoder<RestrictedContent>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RestrictedContent value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RestrictedContent" />.</para>
            /// </summary>
            private class RestrictedContentDecoder : enc.StructDecoder<RestrictedContent>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RestrictedContent"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RestrictedContent Create()
                {
                    return RestrictedContent.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : RemovePropertiesError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
