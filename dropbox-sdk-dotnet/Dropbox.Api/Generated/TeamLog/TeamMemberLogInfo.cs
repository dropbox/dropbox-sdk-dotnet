// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Team member's logged information.</para>
    /// </summary>
    /// <seealso cref="Global::Dropbox.Api.TeamLog.UserLogInfo" />
    public class TeamMemberLogInfo : UserLogInfo
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<TeamMemberLogInfo> Encoder = new TeamMemberLogInfoEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<TeamMemberLogInfo> Decoder = new TeamMemberLogInfoDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TeamMemberLogInfo" />
        /// class.</para>
        /// </summary>
        /// <param name="accountId">User unique ID.</param>
        /// <param name="displayName">User display name.</param>
        /// <param name="email">User email address.</param>
        /// <param name="teamMemberId">Team member ID.</param>
        /// <param name="memberExternalId">Team member external ID.</param>
        /// <param name="team">Details about this user&#x2019s team for enterprise
        /// event.</param>
        public TeamMemberLogInfo(string accountId = null,
                                 string displayName = null,
                                 string email = null,
                                 string teamMemberId = null,
                                 string memberExternalId = null,
                                 TeamLogInfo team = null)
            : base(accountId, displayName, email)
        {
            if (memberExternalId != null)
            {
                if (memberExternalId.Length > 64)
                {
                    throw new sys.ArgumentOutOfRangeException("memberExternalId", "Length should be at most 64");
                }
            }

            this.TeamMemberId = teamMemberId;
            this.MemberExternalId = memberExternalId;
            this.Team = team;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="TeamMemberLogInfo" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public TeamMemberLogInfo()
        {
        }

        /// <summary>
        /// <para>Team member ID.</para>
        /// </summary>
        public string TeamMemberId { get; protected set; }

        /// <summary>
        /// <para>Team member external ID.</para>
        /// </summary>
        public string MemberExternalId { get; protected set; }

        /// <summary>
        /// <para>Details about this user&#x2019s team for enterprise event.</para>
        /// </summary>
        public TeamLogInfo Team { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="TeamMemberLogInfo" />.</para>
        /// </summary>
        private class TeamMemberLogInfoEncoder : enc.StructEncoder<TeamMemberLogInfo>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(TeamMemberLogInfo value, enc.IJsonWriter writer)
            {
                if (value.AccountId != null)
                {
                    WriteProperty("account_id", value.AccountId, writer, enc.StringEncoder.Instance);
                }
                if (value.DisplayName != null)
                {
                    WriteProperty("display_name", value.DisplayName, writer, enc.StringEncoder.Instance);
                }
                if (value.Email != null)
                {
                    WriteProperty("email", value.Email, writer, enc.StringEncoder.Instance);
                }
                if (value.TeamMemberId != null)
                {
                    WriteProperty("team_member_id", value.TeamMemberId, writer, enc.StringEncoder.Instance);
                }
                if (value.MemberExternalId != null)
                {
                    WriteProperty("member_external_id", value.MemberExternalId, writer, enc.StringEncoder.Instance);
                }
                if (value.Team != null)
                {
                    WriteProperty("team", value.Team, writer, global::Dropbox.Api.TeamLog.TeamLogInfo.Encoder);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="TeamMemberLogInfo" />.</para>
        /// </summary>
        private class TeamMemberLogInfoDecoder : enc.StructDecoder<TeamMemberLogInfo>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="TeamMemberLogInfo" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override TeamMemberLogInfo Create()
            {
                return new TeamMemberLogInfo();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(TeamMemberLogInfo value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "account_id":
                        value.AccountId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "display_name":
                        value.DisplayName = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "email":
                        value.Email = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "team_member_id":
                        value.TeamMemberId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "member_external_id":
                        value.MemberExternalId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "team":
                        value.Team = global::Dropbox.Api.TeamLog.TeamLogInfo.Decoder.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
