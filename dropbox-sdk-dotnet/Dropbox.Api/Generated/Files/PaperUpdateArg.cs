// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The paper update arg object</para>
    /// </summary>
    public class PaperUpdateArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<PaperUpdateArg> Encoder = new PaperUpdateArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<PaperUpdateArg> Decoder = new PaperUpdateArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PaperUpdateArg" /> class.</para>
        /// </summary>
        /// <param name="path">Path in the user's Dropbox to update. The path must correspond
        /// to a Paper doc or an error will be returned.</param>
        /// <param name="importFormat">The format of the provided data.</param>
        /// <param name="docUpdatePolicy">How the provided content should be applied to the
        /// doc.</param>
        /// <param name="paperRevision">The latest doc revision. Required when
        /// doc_update_policy is update. This value must match the current revision of the doc
        /// or error revision_mismatch will be returned.</param>
        public PaperUpdateArg(string path,
                              ImportFormat importFormat,
                              PaperDocUpdatePolicy docUpdatePolicy,
                              long? paperRevision = null)
        {
            if (path == null)
            {
                throw new sys.ArgumentNullException("path");
            }
            if (!re.Regex.IsMatch(path, @"\A(?:(/(.|[\r\n])*)|(ns:[0-9]+(/.*)?)|(id:.*))\z"))
            {
                throw new sys.ArgumentOutOfRangeException("path", @"Value should match pattern '\A(?:(/(.|[\r\n])*)|(ns:[0-9]+(/.*)?)|(id:.*))\z'");
            }

            if (importFormat == null)
            {
                throw new sys.ArgumentNullException("importFormat");
            }

            if (docUpdatePolicy == null)
            {
                throw new sys.ArgumentNullException("docUpdatePolicy");
            }

            this.Path = path;
            this.ImportFormat = importFormat;
            this.DocUpdatePolicy = docUpdatePolicy;
            this.PaperRevision = paperRevision;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PaperUpdateArg" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public PaperUpdateArg()
        {
        }

        /// <summary>
        /// <para>Path in the user's Dropbox to update. The path must correspond to a Paper doc
        /// or an error will be returned.</para>
        /// </summary>
        public string Path { get; protected set; }

        /// <summary>
        /// <para>The format of the provided data.</para>
        /// </summary>
        public ImportFormat ImportFormat { get; protected set; }

        /// <summary>
        /// <para>How the provided content should be applied to the doc.</para>
        /// </summary>
        public PaperDocUpdatePolicy DocUpdatePolicy { get; protected set; }

        /// <summary>
        /// <para>The latest doc revision. Required when doc_update_policy is update. This
        /// value must match the current revision of the doc or error revision_mismatch will be
        /// returned.</para>
        /// </summary>
        public long? PaperRevision { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="PaperUpdateArg" />.</para>
        /// </summary>
        private class PaperUpdateArgEncoder : enc.StructEncoder<PaperUpdateArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(PaperUpdateArg value, enc.IJsonWriter writer)
            {
                WriteProperty("path", value.Path, writer, enc.StringEncoder.Instance);
                WriteProperty("import_format", value.ImportFormat, writer, global::Dropbox.Api.Files.ImportFormat.Encoder);
                WriteProperty("doc_update_policy", value.DocUpdatePolicy, writer, global::Dropbox.Api.Files.PaperDocUpdatePolicy.Encoder);
                if (value.PaperRevision != null)
                {
                    WriteProperty("paper_revision", value.PaperRevision.Value, writer, enc.Int64Encoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="PaperUpdateArg" />.</para>
        /// </summary>
        private class PaperUpdateArgDecoder : enc.StructDecoder<PaperUpdateArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="PaperUpdateArg" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override PaperUpdateArg Create()
            {
                return new PaperUpdateArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(PaperUpdateArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "path":
                        value.Path = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "import_format":
                        value.ImportFormat = global::Dropbox.Api.Files.ImportFormat.Decoder.Decode(reader);
                        break;
                    case "doc_update_policy":
                        value.DocUpdatePolicy = global::Dropbox.Api.Files.PaperDocUpdatePolicy.Decoder.Decode(reader);
                        break;
                    case "paper_revision":
                        value.PaperRevision = enc.Int64Decoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
