// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The member add result base object</para>
    /// </summary>
    public class MemberAddResultBase
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<MemberAddResultBase> Encoder = new MemberAddResultBaseEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<MemberAddResultBase> Decoder = new MemberAddResultBaseDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MemberAddResultBase" />
        /// class.</para>
        /// </summary>
        public MemberAddResultBase()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamLicenseLimit</para>
        /// </summary>
        public bool IsTeamLicenseLimit
        {
            get
            {
                return this is TeamLicenseLimit;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamLicenseLimit, or <c>null</c>.</para>
        /// </summary>
        public TeamLicenseLimit AsTeamLicenseLimit
        {
            get
            {
                return this as TeamLicenseLimit;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// FreeTeamMemberLimitReached</para>
        /// </summary>
        public bool IsFreeTeamMemberLimitReached
        {
            get
            {
                return this is FreeTeamMemberLimitReached;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FreeTeamMemberLimitReached, or <c>null</c>.</para>
        /// </summary>
        public FreeTeamMemberLimitReached AsFreeTeamMemberLimitReached
        {
            get
            {
                return this as FreeTeamMemberLimitReached;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserAlreadyOnTeam</para>
        /// </summary>
        public bool IsUserAlreadyOnTeam
        {
            get
            {
                return this is UserAlreadyOnTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserAlreadyOnTeam, or <c>null</c>.</para>
        /// </summary>
        public UserAlreadyOnTeam AsUserAlreadyOnTeam
        {
            get
            {
                return this as UserAlreadyOnTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserOnAnotherTeam</para>
        /// </summary>
        public bool IsUserOnAnotherTeam
        {
            get
            {
                return this is UserOnAnotherTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserOnAnotherTeam, or <c>null</c>.</para>
        /// </summary>
        public UserOnAnotherTeam AsUserOnAnotherTeam
        {
            get
            {
                return this as UserOnAnotherTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserAlreadyPaired</para>
        /// </summary>
        public bool IsUserAlreadyPaired
        {
            get
            {
                return this is UserAlreadyPaired;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserAlreadyPaired, or <c>null</c>.</para>
        /// </summary>
        public UserAlreadyPaired AsUserAlreadyPaired
        {
            get
            {
                return this as UserAlreadyPaired;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserMigrationFailed</para>
        /// </summary>
        public bool IsUserMigrationFailed
        {
            get
            {
                return this is UserMigrationFailed;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserMigrationFailed, or <c>null</c>.</para>
        /// </summary>
        public UserMigrationFailed AsUserMigrationFailed
        {
            get
            {
                return this as UserMigrationFailed;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// DuplicateExternalMemberId</para>
        /// </summary>
        public bool IsDuplicateExternalMemberId
        {
            get
            {
                return this is DuplicateExternalMemberId;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a DuplicateExternalMemberId, or <c>null</c>.</para>
        /// </summary>
        public DuplicateExternalMemberId AsDuplicateExternalMemberId
        {
            get
            {
                return this as DuplicateExternalMemberId;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// DuplicateMemberPersistentId</para>
        /// </summary>
        public bool IsDuplicateMemberPersistentId
        {
            get
            {
                return this is DuplicateMemberPersistentId;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a DuplicateMemberPersistentId, or <c>null</c>.</para>
        /// </summary>
        public DuplicateMemberPersistentId AsDuplicateMemberPersistentId
        {
            get
            {
                return this as DuplicateMemberPersistentId;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is PersistentIdDisabled</para>
        /// </summary>
        public bool IsPersistentIdDisabled
        {
            get
            {
                return this is PersistentIdDisabled;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a PersistentIdDisabled, or <c>null</c>.</para>
        /// </summary>
        public PersistentIdDisabled AsPersistentIdDisabled
        {
            get
            {
                return this as PersistentIdDisabled;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserCreationFailed</para>
        /// </summary>
        public bool IsUserCreationFailed
        {
            get
            {
                return this is UserCreationFailed;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserCreationFailed, or <c>null</c>.</para>
        /// </summary>
        public UserCreationFailed AsUserCreationFailed
        {
            get
            {
                return this as UserCreationFailed;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="MemberAddResultBase" />.</para>
        /// </summary>
        private class MemberAddResultBaseEncoder : enc.StructEncoder<MemberAddResultBase>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(MemberAddResultBase value, enc.IJsonWriter writer)
            {
                if (value is TeamLicenseLimit)
                {
                    WriteProperty(".tag", "team_license_limit", writer, enc.StringEncoder.Instance);
                    TeamLicenseLimit.Encoder.EncodeFields((TeamLicenseLimit)value, writer);
                    return;
                }
                if (value is FreeTeamMemberLimitReached)
                {
                    WriteProperty(".tag", "free_team_member_limit_reached", writer, enc.StringEncoder.Instance);
                    FreeTeamMemberLimitReached.Encoder.EncodeFields((FreeTeamMemberLimitReached)value, writer);
                    return;
                }
                if (value is UserAlreadyOnTeam)
                {
                    WriteProperty(".tag", "user_already_on_team", writer, enc.StringEncoder.Instance);
                    UserAlreadyOnTeam.Encoder.EncodeFields((UserAlreadyOnTeam)value, writer);
                    return;
                }
                if (value is UserOnAnotherTeam)
                {
                    WriteProperty(".tag", "user_on_another_team", writer, enc.StringEncoder.Instance);
                    UserOnAnotherTeam.Encoder.EncodeFields((UserOnAnotherTeam)value, writer);
                    return;
                }
                if (value is UserAlreadyPaired)
                {
                    WriteProperty(".tag", "user_already_paired", writer, enc.StringEncoder.Instance);
                    UserAlreadyPaired.Encoder.EncodeFields((UserAlreadyPaired)value, writer);
                    return;
                }
                if (value is UserMigrationFailed)
                {
                    WriteProperty(".tag", "user_migration_failed", writer, enc.StringEncoder.Instance);
                    UserMigrationFailed.Encoder.EncodeFields((UserMigrationFailed)value, writer);
                    return;
                }
                if (value is DuplicateExternalMemberId)
                {
                    WriteProperty(".tag", "duplicate_external_member_id", writer, enc.StringEncoder.Instance);
                    DuplicateExternalMemberId.Encoder.EncodeFields((DuplicateExternalMemberId)value, writer);
                    return;
                }
                if (value is DuplicateMemberPersistentId)
                {
                    WriteProperty(".tag", "duplicate_member_persistent_id", writer, enc.StringEncoder.Instance);
                    DuplicateMemberPersistentId.Encoder.EncodeFields((DuplicateMemberPersistentId)value, writer);
                    return;
                }
                if (value is PersistentIdDisabled)
                {
                    WriteProperty(".tag", "persistent_id_disabled", writer, enc.StringEncoder.Instance);
                    PersistentIdDisabled.Encoder.EncodeFields((PersistentIdDisabled)value, writer);
                    return;
                }
                if (value is UserCreationFailed)
                {
                    WriteProperty(".tag", "user_creation_failed", writer, enc.StringEncoder.Instance);
                    UserCreationFailed.Encoder.EncodeFields((UserCreationFailed)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="MemberAddResultBase" />.</para>
        /// </summary>
        private class MemberAddResultBaseDecoder : enc.UnionDecoder<MemberAddResultBase>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="MemberAddResultBase" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override MemberAddResultBase Create()
            {
                return new MemberAddResultBase();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override MemberAddResultBase Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "team_license_limit":
                        return TeamLicenseLimit.Decoder.DecodeFields(reader);
                    case "free_team_member_limit_reached":
                        return FreeTeamMemberLimitReached.Decoder.DecodeFields(reader);
                    case "user_already_on_team":
                        return UserAlreadyOnTeam.Decoder.DecodeFields(reader);
                    case "user_on_another_team":
                        return UserOnAnotherTeam.Decoder.DecodeFields(reader);
                    case "user_already_paired":
                        return UserAlreadyPaired.Decoder.DecodeFields(reader);
                    case "user_migration_failed":
                        return UserMigrationFailed.Decoder.DecodeFields(reader);
                    case "duplicate_external_member_id":
                        return DuplicateExternalMemberId.Decoder.DecodeFields(reader);
                    case "duplicate_member_persistent_id":
                        return DuplicateMemberPersistentId.Decoder.DecodeFields(reader);
                    case "persistent_id_disabled":
                        return PersistentIdDisabled.Decoder.DecodeFields(reader);
                    case "user_creation_failed":
                        return UserCreationFailed.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Team is already full. The organization has no available licenses.</para>
        /// </summary>
        public sealed class TeamLicenseLimit : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamLicenseLimit> Encoder = new TeamLicenseLimitEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamLicenseLimit> Decoder = new TeamLicenseLimitDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamLicenseLimit" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public TeamLicenseLimit(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamLicenseLimit" />
            /// class.</para>
            /// </summary>
            private TeamLicenseLimit()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamLicenseLimit" />.</para>
            /// </summary>
            private class TeamLicenseLimitEncoder : enc.StructEncoder<TeamLicenseLimit>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamLicenseLimit value, enc.IJsonWriter writer)
                {
                    WriteProperty("team_license_limit", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamLicenseLimit" />.</para>
            /// </summary>
            private class TeamLicenseLimitDecoder : enc.StructDecoder<TeamLicenseLimit>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamLicenseLimit" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamLicenseLimit Create()
                {
                    return new TeamLicenseLimit();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(TeamLicenseLimit value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "team_license_limit":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>Team is already full. The free team member limit has been reached.</para>
        /// </summary>
        public sealed class FreeTeamMemberLimitReached : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FreeTeamMemberLimitReached> Encoder = new FreeTeamMemberLimitReachedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FreeTeamMemberLimitReached> Decoder = new FreeTeamMemberLimitReachedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FreeTeamMemberLimitReached"
            /// /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public FreeTeamMemberLimitReached(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FreeTeamMemberLimitReached"
            /// /> class.</para>
            /// </summary>
            private FreeTeamMemberLimitReached()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FreeTeamMemberLimitReached" />.</para>
            /// </summary>
            private class FreeTeamMemberLimitReachedEncoder : enc.StructEncoder<FreeTeamMemberLimitReached>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FreeTeamMemberLimitReached value, enc.IJsonWriter writer)
                {
                    WriteProperty("free_team_member_limit_reached", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FreeTeamMemberLimitReached" />.</para>
            /// </summary>
            private class FreeTeamMemberLimitReachedDecoder : enc.StructDecoder<FreeTeamMemberLimitReached>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FreeTeamMemberLimitReached"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FreeTeamMemberLimitReached Create()
                {
                    return new FreeTeamMemberLimitReached();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(FreeTeamMemberLimitReached value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "free_team_member_limit_reached":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>User is already on this team. The provided email address is associated with a
        /// user who is already a member of (including in recoverable state) or invited to the
        /// team.</para>
        /// </summary>
        public sealed class UserAlreadyOnTeam : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserAlreadyOnTeam> Encoder = new UserAlreadyOnTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserAlreadyOnTeam> Decoder = new UserAlreadyOnTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserAlreadyOnTeam" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public UserAlreadyOnTeam(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserAlreadyOnTeam" />
            /// class.</para>
            /// </summary>
            private UserAlreadyOnTeam()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserAlreadyOnTeam" />.</para>
            /// </summary>
            private class UserAlreadyOnTeamEncoder : enc.StructEncoder<UserAlreadyOnTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserAlreadyOnTeam value, enc.IJsonWriter writer)
                {
                    WriteProperty("user_already_on_team", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserAlreadyOnTeam" />.</para>
            /// </summary>
            private class UserAlreadyOnTeamDecoder : enc.StructDecoder<UserAlreadyOnTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserAlreadyOnTeam"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserAlreadyOnTeam Create()
                {
                    return new UserAlreadyOnTeam();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(UserAlreadyOnTeam value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "user_already_on_team":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>User is already on another team. The provided email address is associated
        /// with a user that is already a member or invited to another team.</para>
        /// </summary>
        public sealed class UserOnAnotherTeam : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserOnAnotherTeam> Encoder = new UserOnAnotherTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserOnAnotherTeam> Decoder = new UserOnAnotherTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserOnAnotherTeam" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public UserOnAnotherTeam(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserOnAnotherTeam" />
            /// class.</para>
            /// </summary>
            private UserOnAnotherTeam()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserOnAnotherTeam" />.</para>
            /// </summary>
            private class UserOnAnotherTeamEncoder : enc.StructEncoder<UserOnAnotherTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserOnAnotherTeam value, enc.IJsonWriter writer)
                {
                    WriteProperty("user_on_another_team", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserOnAnotherTeam" />.</para>
            /// </summary>
            private class UserOnAnotherTeamDecoder : enc.StructDecoder<UserOnAnotherTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserOnAnotherTeam"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserOnAnotherTeam Create()
                {
                    return new UserOnAnotherTeam();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(UserOnAnotherTeam value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "user_on_another_team":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>User is already paired.</para>
        /// </summary>
        public sealed class UserAlreadyPaired : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserAlreadyPaired> Encoder = new UserAlreadyPairedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserAlreadyPaired> Decoder = new UserAlreadyPairedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserAlreadyPaired" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public UserAlreadyPaired(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserAlreadyPaired" />
            /// class.</para>
            /// </summary>
            private UserAlreadyPaired()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserAlreadyPaired" />.</para>
            /// </summary>
            private class UserAlreadyPairedEncoder : enc.StructEncoder<UserAlreadyPaired>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserAlreadyPaired value, enc.IJsonWriter writer)
                {
                    WriteProperty("user_already_paired", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserAlreadyPaired" />.</para>
            /// </summary>
            private class UserAlreadyPairedDecoder : enc.StructDecoder<UserAlreadyPaired>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserAlreadyPaired"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserAlreadyPaired Create()
                {
                    return new UserAlreadyPaired();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(UserAlreadyPaired value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "user_already_paired":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>User migration has failed.</para>
        /// </summary>
        public sealed class UserMigrationFailed : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserMigrationFailed> Encoder = new UserMigrationFailedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserMigrationFailed> Decoder = new UserMigrationFailedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserMigrationFailed" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public UserMigrationFailed(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserMigrationFailed" />
            /// class.</para>
            /// </summary>
            private UserMigrationFailed()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserMigrationFailed" />.</para>
            /// </summary>
            private class UserMigrationFailedEncoder : enc.StructEncoder<UserMigrationFailed>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserMigrationFailed value, enc.IJsonWriter writer)
                {
                    WriteProperty("user_migration_failed", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserMigrationFailed" />.</para>
            /// </summary>
            private class UserMigrationFailedDecoder : enc.StructDecoder<UserMigrationFailed>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserMigrationFailed"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserMigrationFailed Create()
                {
                    return new UserMigrationFailed();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(UserMigrationFailed value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "user_migration_failed":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>A user with the given external member ID already exists on the team
        /// (including in recoverable state).</para>
        /// </summary>
        public sealed class DuplicateExternalMemberId : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<DuplicateExternalMemberId> Encoder = new DuplicateExternalMemberIdEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<DuplicateExternalMemberId> Decoder = new DuplicateExternalMemberIdDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DuplicateExternalMemberId"
            /// /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public DuplicateExternalMemberId(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DuplicateExternalMemberId"
            /// /> class.</para>
            /// </summary>
            private DuplicateExternalMemberId()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="DuplicateExternalMemberId" />.</para>
            /// </summary>
            private class DuplicateExternalMemberIdEncoder : enc.StructEncoder<DuplicateExternalMemberId>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(DuplicateExternalMemberId value, enc.IJsonWriter writer)
                {
                    WriteProperty("duplicate_external_member_id", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="DuplicateExternalMemberId" />.</para>
            /// </summary>
            private class DuplicateExternalMemberIdDecoder : enc.StructDecoder<DuplicateExternalMemberId>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="DuplicateExternalMemberId"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override DuplicateExternalMemberId Create()
                {
                    return new DuplicateExternalMemberId();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(DuplicateExternalMemberId value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "duplicate_external_member_id":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>A user with the given persistent ID already exists on the team (including in
        /// recoverable state).</para>
        /// </summary>
        public sealed class DuplicateMemberPersistentId : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<DuplicateMemberPersistentId> Encoder = new DuplicateMemberPersistentIdEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<DuplicateMemberPersistentId> Decoder = new DuplicateMemberPersistentIdDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DuplicateMemberPersistentId"
            /// /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public DuplicateMemberPersistentId(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DuplicateMemberPersistentId"
            /// /> class.</para>
            /// </summary>
            private DuplicateMemberPersistentId()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="DuplicateMemberPersistentId" />.</para>
            /// </summary>
            private class DuplicateMemberPersistentIdEncoder : enc.StructEncoder<DuplicateMemberPersistentId>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(DuplicateMemberPersistentId value, enc.IJsonWriter writer)
                {
                    WriteProperty("duplicate_member_persistent_id", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="DuplicateMemberPersistentId" />.</para>
            /// </summary>
            private class DuplicateMemberPersistentIdDecoder : enc.StructDecoder<DuplicateMemberPersistentId>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="DuplicateMemberPersistentId"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override DuplicateMemberPersistentId Create()
                {
                    return new DuplicateMemberPersistentId();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(DuplicateMemberPersistentId value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "duplicate_member_persistent_id":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>Persistent ID is only available to teams with persistent ID SAML
        /// configuration. Please contact Dropbox for more information.</para>
        /// </summary>
        public sealed class PersistentIdDisabled : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<PersistentIdDisabled> Encoder = new PersistentIdDisabledEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<PersistentIdDisabled> Decoder = new PersistentIdDisabledDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="PersistentIdDisabled" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public PersistentIdDisabled(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="PersistentIdDisabled" />
            /// class.</para>
            /// </summary>
            private PersistentIdDisabled()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="PersistentIdDisabled" />.</para>
            /// </summary>
            private class PersistentIdDisabledEncoder : enc.StructEncoder<PersistentIdDisabled>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(PersistentIdDisabled value, enc.IJsonWriter writer)
                {
                    WriteProperty("persistent_id_disabled", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="PersistentIdDisabled" />.</para>
            /// </summary>
            private class PersistentIdDisabledDecoder : enc.StructDecoder<PersistentIdDisabled>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="PersistentIdDisabled"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override PersistentIdDisabled Create()
                {
                    return new PersistentIdDisabled();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(PersistentIdDisabled value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "persistent_id_disabled":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>User creation has failed.</para>
        /// </summary>
        public sealed class UserCreationFailed : MemberAddResultBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserCreationFailed> Encoder = new UserCreationFailedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserCreationFailed> Decoder = new UserCreationFailedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserCreationFailed" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public UserCreationFailed(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserCreationFailed" />
            /// class.</para>
            /// </summary>
            private UserCreationFailed()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserCreationFailed" />.</para>
            /// </summary>
            private class UserCreationFailedEncoder : enc.StructEncoder<UserCreationFailed>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserCreationFailed value, enc.IJsonWriter writer)
                {
                    WriteProperty("user_creation_failed", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserCreationFailed" />.</para>
            /// </summary>
            private class UserCreationFailedDecoder : enc.StructDecoder<UserCreationFailed>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserCreationFailed"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserCreationFailed Create()
                {
                    return new UserCreationFailed();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(UserCreationFailed value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "user_creation_failed":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }
    }
}
