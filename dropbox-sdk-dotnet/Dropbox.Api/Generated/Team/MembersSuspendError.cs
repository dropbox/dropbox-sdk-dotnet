// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The members suspend error object</para>
    /// </summary>
    public class MembersSuspendError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<MembersSuspendError> Encoder = new MembersSuspendErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<MembersSuspendError> Decoder = new MembersSuspendErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MembersSuspendError" />
        /// class.</para>
        /// </summary>
        public MembersSuspendError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SuspendInactiveUser</para>
        /// </summary>
        public bool IsSuspendInactiveUser
        {
            get
            {
                return this is SuspendInactiveUser;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SuspendInactiveUser, or <c>null</c>.</para>
        /// </summary>
        public SuspendInactiveUser AsSuspendInactiveUser
        {
            get
            {
                return this as SuspendInactiveUser;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SuspendLastAdmin</para>
        /// </summary>
        public bool IsSuspendLastAdmin
        {
            get
            {
                return this is SuspendLastAdmin;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SuspendLastAdmin, or <c>null</c>.</para>
        /// </summary>
        public SuspendLastAdmin AsSuspendLastAdmin
        {
            get
            {
                return this as SuspendLastAdmin;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TeamLicenseLimit</para>
        /// </summary>
        public bool IsTeamLicenseLimit
        {
            get
            {
                return this is TeamLicenseLimit;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TeamLicenseLimit, or <c>null</c>.</para>
        /// </summary>
        public TeamLicenseLimit AsTeamLicenseLimit
        {
            get
            {
                return this as TeamLicenseLimit;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserNotInTeam</para>
        /// </summary>
        public bool IsUserNotInTeam
        {
            get
            {
                return this is UserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserNotInTeam, or <c>null</c>.</para>
        /// </summary>
        public UserNotInTeam AsUserNotInTeam
        {
            get
            {
                return this as UserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserNotFound</para>
        /// </summary>
        public bool IsUserNotFound
        {
            get
            {
                return this is UserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserNotFound, or <c>null</c>.</para>
        /// </summary>
        public UserNotFound AsUserNotFound
        {
            get
            {
                return this as UserNotFound;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="MembersSuspendError" />.</para>
        /// </summary>
        private class MembersSuspendErrorEncoder : enc.StructEncoder<MembersSuspendError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(MembersSuspendError value, enc.IJsonWriter writer)
            {
                if (value is SuspendInactiveUser)
                {
                    WriteProperty(".tag", "suspend_inactive_user", writer, enc.StringEncoder.Instance);
                    SuspendInactiveUser.Encoder.EncodeFields((SuspendInactiveUser)value, writer);
                    return;
                }
                if (value is SuspendLastAdmin)
                {
                    WriteProperty(".tag", "suspend_last_admin", writer, enc.StringEncoder.Instance);
                    SuspendLastAdmin.Encoder.EncodeFields((SuspendLastAdmin)value, writer);
                    return;
                }
                if (value is TeamLicenseLimit)
                {
                    WriteProperty(".tag", "team_license_limit", writer, enc.StringEncoder.Instance);
                    TeamLicenseLimit.Encoder.EncodeFields((TeamLicenseLimit)value, writer);
                    return;
                }
                if (value is UserNotInTeam)
                {
                    WriteProperty(".tag", "user_not_in_team", writer, enc.StringEncoder.Instance);
                    UserNotInTeam.Encoder.EncodeFields((UserNotInTeam)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                if (value is UserNotFound)
                {
                    WriteProperty(".tag", "user_not_found", writer, enc.StringEncoder.Instance);
                    UserNotFound.Encoder.EncodeFields((UserNotFound)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="MembersSuspendError" />.</para>
        /// </summary>
        private class MembersSuspendErrorDecoder : enc.UnionDecoder<MembersSuspendError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="MembersSuspendError" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override MembersSuspendError Create()
            {
                return new MembersSuspendError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override MembersSuspendError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "suspend_inactive_user":
                        return SuspendInactiveUser.Decoder.DecodeFields(reader);
                    case "suspend_last_admin":
                        return SuspendLastAdmin.Decoder.DecodeFields(reader);
                    case "team_license_limit":
                        return TeamLicenseLimit.Decoder.DecodeFields(reader);
                    case "user_not_in_team":
                        return UserNotInTeam.Decoder.DecodeFields(reader);
                    case "other":
                        return Other.Decoder.DecodeFields(reader);
                    case "user_not_found":
                        return UserNotFound.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The user is not active, so it cannot be suspended.</para>
        /// </summary>
        public sealed class SuspendInactiveUser : MembersSuspendError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SuspendInactiveUser> Encoder = new SuspendInactiveUserEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SuspendInactiveUser> Decoder = new SuspendInactiveUserDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SuspendInactiveUser" />
            /// class.</para>
            /// </summary>
            private SuspendInactiveUser()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SuspendInactiveUser</para>
            /// </summary>
            public static readonly SuspendInactiveUser Instance = new SuspendInactiveUser();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SuspendInactiveUser" />.</para>
            /// </summary>
            private class SuspendInactiveUserEncoder : enc.StructEncoder<SuspendInactiveUser>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SuspendInactiveUser value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SuspendInactiveUser" />.</para>
            /// </summary>
            private class SuspendInactiveUserDecoder : enc.StructDecoder<SuspendInactiveUser>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SuspendInactiveUser"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SuspendInactiveUser Create()
                {
                    return SuspendInactiveUser.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The user is the last admin of the team, so it cannot be suspended.</para>
        /// </summary>
        public sealed class SuspendLastAdmin : MembersSuspendError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SuspendLastAdmin> Encoder = new SuspendLastAdminEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SuspendLastAdmin> Decoder = new SuspendLastAdminDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SuspendLastAdmin" />
            /// class.</para>
            /// </summary>
            private SuspendLastAdmin()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SuspendLastAdmin</para>
            /// </summary>
            public static readonly SuspendLastAdmin Instance = new SuspendLastAdmin();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SuspendLastAdmin" />.</para>
            /// </summary>
            private class SuspendLastAdminEncoder : enc.StructEncoder<SuspendLastAdmin>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SuspendLastAdmin value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SuspendLastAdmin" />.</para>
            /// </summary>
            private class SuspendLastAdminDecoder : enc.StructDecoder<SuspendLastAdmin>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SuspendLastAdmin" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SuspendLastAdmin Create()
                {
                    return SuspendLastAdmin.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Team is full. The organization has no available licenses.</para>
        /// </summary>
        public sealed class TeamLicenseLimit : MembersSuspendError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TeamLicenseLimit> Encoder = new TeamLicenseLimitEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TeamLicenseLimit> Decoder = new TeamLicenseLimitDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TeamLicenseLimit" />
            /// class.</para>
            /// </summary>
            private TeamLicenseLimit()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TeamLicenseLimit</para>
            /// </summary>
            public static readonly TeamLicenseLimit Instance = new TeamLicenseLimit();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TeamLicenseLimit" />.</para>
            /// </summary>
            private class TeamLicenseLimitEncoder : enc.StructEncoder<TeamLicenseLimit>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TeamLicenseLimit value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TeamLicenseLimit" />.</para>
            /// </summary>
            private class TeamLicenseLimitDecoder : enc.StructDecoder<TeamLicenseLimit>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TeamLicenseLimit" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TeamLicenseLimit Create()
                {
                    return TeamLicenseLimit.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The user is not a member of the team.</para>
        /// </summary>
        public sealed class UserNotInTeam : MembersSuspendError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserNotInTeam> Encoder = new UserNotInTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserNotInTeam> Decoder = new UserNotInTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserNotInTeam" />
            /// class.</para>
            /// </summary>
            private UserNotInTeam()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserNotInTeam</para>
            /// </summary>
            public static readonly UserNotInTeam Instance = new UserNotInTeam();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserNotInTeam" />.</para>
            /// </summary>
            private class UserNotInTeamEncoder : enc.StructEncoder<UserNotInTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserNotInTeam value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserNotInTeam" />.</para>
            /// </summary>
            private class UserNotInTeamDecoder : enc.StructDecoder<UserNotInTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserNotInTeam" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserNotInTeam Create()
                {
                    return UserNotInTeam.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : MembersSuspendError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>No matching user found. The provided team_member_id, email, or external_id
        /// does not exist on this team.</para>
        /// </summary>
        public sealed class UserNotFound : MembersSuspendError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserNotFound> Encoder = new UserNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserNotFound> Decoder = new UserNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserNotFound" />
            /// class.</para>
            /// </summary>
            private UserNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserNotFound</para>
            /// </summary>
            public static readonly UserNotFound Instance = new UserNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserNotFound" />.</para>
            /// </summary>
            private class UserNotFoundEncoder : enc.StructEncoder<UserNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserNotFound" />.</para>
            /// </summary>
            private class UserNotFoundDecoder : enc.StructDecoder<UserNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserNotFound" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserNotFound Create()
                {
                    return UserNotFound.Instance;
                }

            }

            #endregion
        }
    }
}
