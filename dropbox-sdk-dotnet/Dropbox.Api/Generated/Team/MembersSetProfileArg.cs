// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Exactly one of team_member_id, email, or external_id must be provided to identify
    /// the user account.</para>
    /// <para>At least one of new_email, new_external_id, new_given_name, and/or new_surname
    /// must be provided.</para>
    /// </summary>
    public class MembersSetProfileArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<MembersSetProfileArg> Encoder = new MembersSetProfileArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<MembersSetProfileArg> Decoder = new MembersSetProfileArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MembersSetProfileArg" />
        /// class.</para>
        /// </summary>
        /// <param name="user">Identity of user whose profile will be set.</param>
        /// <param name="newEmail">New email for member.</param>
        /// <param name="newExternalId">New external ID for member.</param>
        /// <param name="newGivenName">New given name for member.</param>
        /// <param name="newSurname">New surname for member.</param>
        /// <param name="newPersistentId">New persistent ID. This field only available to teams
        /// using persistent ID SAML configuration.</param>
        /// <param name="newIsDirectoryRestricted">New value for whether the user is a
        /// directory restricted user.</param>
        public MembersSetProfileArg(UserSelectorArg user,
                                    string newEmail = null,
                                    string newExternalId = null,
                                    string newGivenName = null,
                                    string newSurname = null,
                                    string newPersistentId = null,
                                    bool? newIsDirectoryRestricted = null)
        {
            if (user == null)
            {
                throw new sys.ArgumentNullException("user");
            }

            if (newEmail != null)
            {
                if (newEmail.Length > 255)
                {
                    throw new sys.ArgumentOutOfRangeException("newEmail", "Length should be at most 255");
                }
                if (!re.Regex.IsMatch(newEmail, @"\A(?:^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\.[A-Za-z]{2,15}$)\z"))
                {
                    throw new sys.ArgumentOutOfRangeException("newEmail", @"Value should match pattern '\A(?:^['&A-Za-z0-9._%+-]+@[A-Za-z0-9-][A-Za-z0-9.-]*\.[A-Za-z]{2,15}$)\z'");
                }
            }

            if (newExternalId != null)
            {
                if (newExternalId.Length > 64)
                {
                    throw new sys.ArgumentOutOfRangeException("newExternalId", "Length should be at most 64");
                }
            }

            if (newGivenName != null)
            {
                if (newGivenName.Length > 100)
                {
                    throw new sys.ArgumentOutOfRangeException("newGivenName", "Length should be at most 100");
                }
                if (!re.Regex.IsMatch(newGivenName, @"\A(?:[^/:?*<>""|]*)\z"))
                {
                    throw new sys.ArgumentOutOfRangeException("newGivenName", @"Value should match pattern '\A(?:[^/:?*<>""|]*)\z'");
                }
            }

            if (newSurname != null)
            {
                if (newSurname.Length > 100)
                {
                    throw new sys.ArgumentOutOfRangeException("newSurname", "Length should be at most 100");
                }
                if (!re.Regex.IsMatch(newSurname, @"\A(?:[^/:?*<>""|]*)\z"))
                {
                    throw new sys.ArgumentOutOfRangeException("newSurname", @"Value should match pattern '\A(?:[^/:?*<>""|]*)\z'");
                }
            }

            this.User = user;
            this.NewEmail = newEmail;
            this.NewExternalId = newExternalId;
            this.NewGivenName = newGivenName;
            this.NewSurname = newSurname;
            this.NewPersistentId = newPersistentId;
            this.NewIsDirectoryRestricted = newIsDirectoryRestricted;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MembersSetProfileArg" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public MembersSetProfileArg()
        {
        }

        /// <summary>
        /// <para>Identity of user whose profile will be set.</para>
        /// </summary>
        public UserSelectorArg User { get; protected set; }

        /// <summary>
        /// <para>New email for member.</para>
        /// </summary>
        public string NewEmail { get; protected set; }

        /// <summary>
        /// <para>New external ID for member.</para>
        /// </summary>
        public string NewExternalId { get; protected set; }

        /// <summary>
        /// <para>New given name for member.</para>
        /// </summary>
        public string NewGivenName { get; protected set; }

        /// <summary>
        /// <para>New surname for member.</para>
        /// </summary>
        public string NewSurname { get; protected set; }

        /// <summary>
        /// <para>New persistent ID. This field only available to teams using persistent ID
        /// SAML configuration.</para>
        /// </summary>
        public string NewPersistentId { get; protected set; }

        /// <summary>
        /// <para>New value for whether the user is a directory restricted user.</para>
        /// </summary>
        public bool? NewIsDirectoryRestricted { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="MembersSetProfileArg" />.</para>
        /// </summary>
        private class MembersSetProfileArgEncoder : enc.StructEncoder<MembersSetProfileArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(MembersSetProfileArg value, enc.IJsonWriter writer)
            {
                WriteProperty("user", value.User, writer, global::Dropbox.Api.Team.UserSelectorArg.Encoder);
                if (value.NewEmail != null)
                {
                    WriteProperty("new_email", value.NewEmail, writer, enc.StringEncoder.Instance);
                }
                if (value.NewExternalId != null)
                {
                    WriteProperty("new_external_id", value.NewExternalId, writer, enc.StringEncoder.Instance);
                }
                if (value.NewGivenName != null)
                {
                    WriteProperty("new_given_name", value.NewGivenName, writer, enc.StringEncoder.Instance);
                }
                if (value.NewSurname != null)
                {
                    WriteProperty("new_surname", value.NewSurname, writer, enc.StringEncoder.Instance);
                }
                if (value.NewPersistentId != null)
                {
                    WriteProperty("new_persistent_id", value.NewPersistentId, writer, enc.StringEncoder.Instance);
                }
                if (value.NewIsDirectoryRestricted != null)
                {
                    WriteProperty("new_is_directory_restricted", value.NewIsDirectoryRestricted.Value, writer, enc.BooleanEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="MembersSetProfileArg" />.</para>
        /// </summary>
        private class MembersSetProfileArgDecoder : enc.StructDecoder<MembersSetProfileArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="MembersSetProfileArg" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override MembersSetProfileArg Create()
            {
                return new MembersSetProfileArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(MembersSetProfileArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "user":
                        value.User = global::Dropbox.Api.Team.UserSelectorArg.Decoder.Decode(reader);
                        break;
                    case "new_email":
                        value.NewEmail = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "new_external_id":
                        value.NewExternalId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "new_given_name":
                        value.NewGivenName = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "new_surname":
                        value.NewSurname = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "new_persistent_id":
                        value.NewPersistentId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "new_is_directory_restricted":
                        value.NewIsDirectoryRestricted = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
