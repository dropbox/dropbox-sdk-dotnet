// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The members get info item base object</para>
    /// </summary>
    public class MembersGetInfoItemBase
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<MembersGetInfoItemBase> Encoder = new MembersGetInfoItemBaseEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<MembersGetInfoItemBase> Decoder = new MembersGetInfoItemBaseDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MembersGetInfoItemBase" />
        /// class.</para>
        /// </summary>
        public MembersGetInfoItemBase()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is IdNotFound</para>
        /// </summary>
        public bool IsIdNotFound
        {
            get
            {
                return this is IdNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a IdNotFound, or <c>null</c>.</para>
        /// </summary>
        public IdNotFound AsIdNotFound
        {
            get
            {
                return this as IdNotFound;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="MembersGetInfoItemBase" />.</para>
        /// </summary>
        private class MembersGetInfoItemBaseEncoder : enc.StructEncoder<MembersGetInfoItemBase>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(MembersGetInfoItemBase value, enc.IJsonWriter writer)
            {
                if (value is IdNotFound)
                {
                    WriteProperty(".tag", "id_not_found", writer, enc.StringEncoder.Instance);
                    IdNotFound.Encoder.EncodeFields((IdNotFound)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="MembersGetInfoItemBase" />.</para>
        /// </summary>
        private class MembersGetInfoItemBaseDecoder : enc.UnionDecoder<MembersGetInfoItemBase>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="MembersGetInfoItemBase"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override MembersGetInfoItemBase Create()
            {
                return new MembersGetInfoItemBase();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override MembersGetInfoItemBase Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "id_not_found":
                        return IdNotFound.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>An ID that was provided as a parameter to <see
        /// cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoAsync" /> or <see
        /// cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.MembersGetInfoV2Async" />, and did not
        /// match a corresponding user. This might be a team_member_id, an email, or an
        /// external ID, depending on how the method was called.</para>
        /// </summary>
        public sealed class IdNotFound : MembersGetInfoItemBase
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<IdNotFound> Encoder = new IdNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<IdNotFound> Decoder = new IdNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="IdNotFound" /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public IdNotFound(string value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="IdNotFound" /> class.</para>
            /// </summary>
            private IdNotFound()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public string Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="IdNotFound" />.</para>
            /// </summary>
            private class IdNotFoundEncoder : enc.StructEncoder<IdNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(IdNotFound value, enc.IJsonWriter writer)
                {
                    WriteProperty("id_not_found", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="IdNotFound" />.</para>
            /// </summary>
            private class IdNotFoundDecoder : enc.StructDecoder<IdNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="IdNotFound" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override IdNotFound Create()
                {
                    return new IdNotFound();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(IdNotFound value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "id_not_found":
                            value.Value = enc.StringDecoder.Instance.Decode(reader);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }
    }
}
