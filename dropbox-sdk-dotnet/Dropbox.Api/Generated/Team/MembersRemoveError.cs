// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The members remove error object</para>
    /// </summary>
    public class MembersRemoveError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<MembersRemoveError> Encoder = new MembersRemoveErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<MembersRemoveError> Decoder = new MembersRemoveErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MembersRemoveError" />
        /// class.</para>
        /// </summary>
        public MembersRemoveError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RemoveLastAdmin</para>
        /// </summary>
        public bool IsRemoveLastAdmin
        {
            get
            {
                return this is RemoveLastAdmin;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RemoveLastAdmin, or <c>null</c>.</para>
        /// </summary>
        public RemoveLastAdmin AsRemoveLastAdmin
        {
            get
            {
                return this as RemoveLastAdmin;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// CannotKeepAccountAndTransfer</para>
        /// </summary>
        public bool IsCannotKeepAccountAndTransfer
        {
            get
            {
                return this is CannotKeepAccountAndTransfer;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CannotKeepAccountAndTransfer, or <c>null</c>.</para>
        /// </summary>
        public CannotKeepAccountAndTransfer AsCannotKeepAccountAndTransfer
        {
            get
            {
                return this as CannotKeepAccountAndTransfer;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// CannotKeepAccountAndDeleteData</para>
        /// </summary>
        public bool IsCannotKeepAccountAndDeleteData
        {
            get
            {
                return this is CannotKeepAccountAndDeleteData;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CannotKeepAccountAndDeleteData, or
        /// <c>null</c>.</para>
        /// </summary>
        public CannotKeepAccountAndDeleteData AsCannotKeepAccountAndDeleteData
        {
            get
            {
                return this as CannotKeepAccountAndDeleteData;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// EmailAddressTooLongToBeDisabled</para>
        /// </summary>
        public bool IsEmailAddressTooLongToBeDisabled
        {
            get
            {
                return this is EmailAddressTooLongToBeDisabled;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a EmailAddressTooLongToBeDisabled, or
        /// <c>null</c>.</para>
        /// </summary>
        public EmailAddressTooLongToBeDisabled AsEmailAddressTooLongToBeDisabled
        {
            get
            {
                return this as EmailAddressTooLongToBeDisabled;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// CannotKeepInvitedUserAccount</para>
        /// </summary>
        public bool IsCannotKeepInvitedUserAccount
        {
            get
            {
                return this is CannotKeepInvitedUserAccount;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CannotKeepInvitedUserAccount, or <c>null</c>.</para>
        /// </summary>
        public CannotKeepInvitedUserAccount AsCannotKeepInvitedUserAccount
        {
            get
            {
                return this as CannotKeepInvitedUserAccount;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// CannotRetainSharesWhenDataWiped</para>
        /// </summary>
        public bool IsCannotRetainSharesWhenDataWiped
        {
            get
            {
                return this is CannotRetainSharesWhenDataWiped;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CannotRetainSharesWhenDataWiped, or
        /// <c>null</c>.</para>
        /// </summary>
        public CannotRetainSharesWhenDataWiped AsCannotRetainSharesWhenDataWiped
        {
            get
            {
                return this as CannotRetainSharesWhenDataWiped;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// CannotRetainSharesWhenNoAccountKept</para>
        /// </summary>
        public bool IsCannotRetainSharesWhenNoAccountKept
        {
            get
            {
                return this is CannotRetainSharesWhenNoAccountKept;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CannotRetainSharesWhenNoAccountKept, or
        /// <c>null</c>.</para>
        /// </summary>
        public CannotRetainSharesWhenNoAccountKept AsCannotRetainSharesWhenNoAccountKept
        {
            get
            {
                return this as CannotRetainSharesWhenNoAccountKept;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// CannotRetainSharesWhenTeamExternalSharingOff</para>
        /// </summary>
        public bool IsCannotRetainSharesWhenTeamExternalSharingOff
        {
            get
            {
                return this is CannotRetainSharesWhenTeamExternalSharingOff;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CannotRetainSharesWhenTeamExternalSharingOff, or
        /// <c>null</c>.</para>
        /// </summary>
        public CannotRetainSharesWhenTeamExternalSharingOff AsCannotRetainSharesWhenTeamExternalSharingOff
        {
            get
            {
                return this as CannotRetainSharesWhenTeamExternalSharingOff;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is CannotKeepAccount</para>
        /// </summary>
        public bool IsCannotKeepAccount
        {
            get
            {
                return this is CannotKeepAccount;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CannotKeepAccount, or <c>null</c>.</para>
        /// </summary>
        public CannotKeepAccount AsCannotKeepAccount
        {
            get
            {
                return this as CannotKeepAccount;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// CannotKeepAccountUnderLegalHold</para>
        /// </summary>
        public bool IsCannotKeepAccountUnderLegalHold
        {
            get
            {
                return this is CannotKeepAccountUnderLegalHold;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CannotKeepAccountUnderLegalHold, or
        /// <c>null</c>.</para>
        /// </summary>
        public CannotKeepAccountUnderLegalHold AsCannotKeepAccountUnderLegalHold
        {
            get
            {
                return this as CannotKeepAccountUnderLegalHold;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// CannotKeepAccountRequiredToSignTos</para>
        /// </summary>
        public bool IsCannotKeepAccountRequiredToSignTos
        {
            get
            {
                return this is CannotKeepAccountRequiredToSignTos;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CannotKeepAccountRequiredToSignTos, or
        /// <c>null</c>.</para>
        /// </summary>
        public CannotKeepAccountRequiredToSignTos AsCannotKeepAccountRequiredToSignTos
        {
            get
            {
                return this as CannotKeepAccountRequiredToSignTos;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// RemovedAndTransferDestShouldDiffer</para>
        /// </summary>
        public bool IsRemovedAndTransferDestShouldDiffer
        {
            get
            {
                return this is RemovedAndTransferDestShouldDiffer;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RemovedAndTransferDestShouldDiffer, or
        /// <c>null</c>.</para>
        /// </summary>
        public RemovedAndTransferDestShouldDiffer AsRemovedAndTransferDestShouldDiffer
        {
            get
            {
                return this as RemovedAndTransferDestShouldDiffer;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// RemovedAndTransferAdminShouldDiffer</para>
        /// </summary>
        public bool IsRemovedAndTransferAdminShouldDiffer
        {
            get
            {
                return this is RemovedAndTransferAdminShouldDiffer;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RemovedAndTransferAdminShouldDiffer, or
        /// <c>null</c>.</para>
        /// </summary>
        public RemovedAndTransferAdminShouldDiffer AsRemovedAndTransferAdminShouldDiffer
        {
            get
            {
                return this as RemovedAndTransferAdminShouldDiffer;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferDestUserNotFound</para>
        /// </summary>
        public bool IsTransferDestUserNotFound
        {
            get
            {
                return this is TransferDestUserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferDestUserNotFound, or <c>null</c>.</para>
        /// </summary>
        public TransferDestUserNotFound AsTransferDestUserNotFound
        {
            get
            {
                return this as TransferDestUserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferDestUserNotInTeam</para>
        /// </summary>
        public bool IsTransferDestUserNotInTeam
        {
            get
            {
                return this is TransferDestUserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferDestUserNotInTeam, or <c>null</c>.</para>
        /// </summary>
        public TransferDestUserNotInTeam AsTransferDestUserNotInTeam
        {
            get
            {
                return this as TransferDestUserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferAdminUserNotInTeam</para>
        /// </summary>
        public bool IsTransferAdminUserNotInTeam
        {
            get
            {
                return this is TransferAdminUserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferAdminUserNotInTeam, or <c>null</c>.</para>
        /// </summary>
        public TransferAdminUserNotInTeam AsTransferAdminUserNotInTeam
        {
            get
            {
                return this as TransferAdminUserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferAdminUserNotFound</para>
        /// </summary>
        public bool IsTransferAdminUserNotFound
        {
            get
            {
                return this is TransferAdminUserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferAdminUserNotFound, or <c>null</c>.</para>
        /// </summary>
        public TransferAdminUserNotFound AsTransferAdminUserNotFound
        {
            get
            {
                return this as TransferAdminUserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// UnspecifiedTransferAdminId</para>
        /// </summary>
        public bool IsUnspecifiedTransferAdminId
        {
            get
            {
                return this is UnspecifiedTransferAdminId;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UnspecifiedTransferAdminId, or <c>null</c>.</para>
        /// </summary>
        public UnspecifiedTransferAdminId AsUnspecifiedTransferAdminId
        {
            get
            {
                return this as UnspecifiedTransferAdminId;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// TransferAdminIsNotAdmin</para>
        /// </summary>
        public bool IsTransferAdminIsNotAdmin
        {
            get
            {
                return this is TransferAdminIsNotAdmin;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransferAdminIsNotAdmin, or <c>null</c>.</para>
        /// </summary>
        public TransferAdminIsNotAdmin AsTransferAdminIsNotAdmin
        {
            get
            {
                return this as TransferAdminIsNotAdmin;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RecipientNotVerified</para>
        /// </summary>
        public bool IsRecipientNotVerified
        {
            get
            {
                return this is RecipientNotVerified;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RecipientNotVerified, or <c>null</c>.</para>
        /// </summary>
        public RecipientNotVerified AsRecipientNotVerified
        {
            get
            {
                return this as RecipientNotVerified;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserNotInTeam</para>
        /// </summary>
        public bool IsUserNotInTeam
        {
            get
            {
                return this is UserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserNotInTeam, or <c>null</c>.</para>
        /// </summary>
        public UserNotInTeam AsUserNotInTeam
        {
            get
            {
                return this as UserNotInTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is UserNotFound</para>
        /// </summary>
        public bool IsUserNotFound
        {
            get
            {
                return this is UserNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a UserNotFound, or <c>null</c>.</para>
        /// </summary>
        public UserNotFound AsUserNotFound
        {
            get
            {
                return this as UserNotFound;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="MembersRemoveError" />.</para>
        /// </summary>
        private class MembersRemoveErrorEncoder : enc.StructEncoder<MembersRemoveError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(MembersRemoveError value, enc.IJsonWriter writer)
            {
                if (value is RemoveLastAdmin)
                {
                    WriteProperty(".tag", "remove_last_admin", writer, enc.StringEncoder.Instance);
                    RemoveLastAdmin.Encoder.EncodeFields((RemoveLastAdmin)value, writer);
                    return;
                }
                if (value is CannotKeepAccountAndTransfer)
                {
                    WriteProperty(".tag", "cannot_keep_account_and_transfer", writer, enc.StringEncoder.Instance);
                    CannotKeepAccountAndTransfer.Encoder.EncodeFields((CannotKeepAccountAndTransfer)value, writer);
                    return;
                }
                if (value is CannotKeepAccountAndDeleteData)
                {
                    WriteProperty(".tag", "cannot_keep_account_and_delete_data", writer, enc.StringEncoder.Instance);
                    CannotKeepAccountAndDeleteData.Encoder.EncodeFields((CannotKeepAccountAndDeleteData)value, writer);
                    return;
                }
                if (value is EmailAddressTooLongToBeDisabled)
                {
                    WriteProperty(".tag", "email_address_too_long_to_be_disabled", writer, enc.StringEncoder.Instance);
                    EmailAddressTooLongToBeDisabled.Encoder.EncodeFields((EmailAddressTooLongToBeDisabled)value, writer);
                    return;
                }
                if (value is CannotKeepInvitedUserAccount)
                {
                    WriteProperty(".tag", "cannot_keep_invited_user_account", writer, enc.StringEncoder.Instance);
                    CannotKeepInvitedUserAccount.Encoder.EncodeFields((CannotKeepInvitedUserAccount)value, writer);
                    return;
                }
                if (value is CannotRetainSharesWhenDataWiped)
                {
                    WriteProperty(".tag", "cannot_retain_shares_when_data_wiped", writer, enc.StringEncoder.Instance);
                    CannotRetainSharesWhenDataWiped.Encoder.EncodeFields((CannotRetainSharesWhenDataWiped)value, writer);
                    return;
                }
                if (value is CannotRetainSharesWhenNoAccountKept)
                {
                    WriteProperty(".tag", "cannot_retain_shares_when_no_account_kept", writer, enc.StringEncoder.Instance);
                    CannotRetainSharesWhenNoAccountKept.Encoder.EncodeFields((CannotRetainSharesWhenNoAccountKept)value, writer);
                    return;
                }
                if (value is CannotRetainSharesWhenTeamExternalSharingOff)
                {
                    WriteProperty(".tag", "cannot_retain_shares_when_team_external_sharing_off", writer, enc.StringEncoder.Instance);
                    CannotRetainSharesWhenTeamExternalSharingOff.Encoder.EncodeFields((CannotRetainSharesWhenTeamExternalSharingOff)value, writer);
                    return;
                }
                if (value is CannotKeepAccount)
                {
                    WriteProperty(".tag", "cannot_keep_account", writer, enc.StringEncoder.Instance);
                    CannotKeepAccount.Encoder.EncodeFields((CannotKeepAccount)value, writer);
                    return;
                }
                if (value is CannotKeepAccountUnderLegalHold)
                {
                    WriteProperty(".tag", "cannot_keep_account_under_legal_hold", writer, enc.StringEncoder.Instance);
                    CannotKeepAccountUnderLegalHold.Encoder.EncodeFields((CannotKeepAccountUnderLegalHold)value, writer);
                    return;
                }
                if (value is CannotKeepAccountRequiredToSignTos)
                {
                    WriteProperty(".tag", "cannot_keep_account_required_to_sign_tos", writer, enc.StringEncoder.Instance);
                    CannotKeepAccountRequiredToSignTos.Encoder.EncodeFields((CannotKeepAccountRequiredToSignTos)value, writer);
                    return;
                }
                if (value is RemovedAndTransferDestShouldDiffer)
                {
                    WriteProperty(".tag", "removed_and_transfer_dest_should_differ", writer, enc.StringEncoder.Instance);
                    RemovedAndTransferDestShouldDiffer.Encoder.EncodeFields((RemovedAndTransferDestShouldDiffer)value, writer);
                    return;
                }
                if (value is RemovedAndTransferAdminShouldDiffer)
                {
                    WriteProperty(".tag", "removed_and_transfer_admin_should_differ", writer, enc.StringEncoder.Instance);
                    RemovedAndTransferAdminShouldDiffer.Encoder.EncodeFields((RemovedAndTransferAdminShouldDiffer)value, writer);
                    return;
                }
                if (value is TransferDestUserNotFound)
                {
                    WriteProperty(".tag", "transfer_dest_user_not_found", writer, enc.StringEncoder.Instance);
                    TransferDestUserNotFound.Encoder.EncodeFields((TransferDestUserNotFound)value, writer);
                    return;
                }
                if (value is TransferDestUserNotInTeam)
                {
                    WriteProperty(".tag", "transfer_dest_user_not_in_team", writer, enc.StringEncoder.Instance);
                    TransferDestUserNotInTeam.Encoder.EncodeFields((TransferDestUserNotInTeam)value, writer);
                    return;
                }
                if (value is TransferAdminUserNotInTeam)
                {
                    WriteProperty(".tag", "transfer_admin_user_not_in_team", writer, enc.StringEncoder.Instance);
                    TransferAdminUserNotInTeam.Encoder.EncodeFields((TransferAdminUserNotInTeam)value, writer);
                    return;
                }
                if (value is TransferAdminUserNotFound)
                {
                    WriteProperty(".tag", "transfer_admin_user_not_found", writer, enc.StringEncoder.Instance);
                    TransferAdminUserNotFound.Encoder.EncodeFields((TransferAdminUserNotFound)value, writer);
                    return;
                }
                if (value is UnspecifiedTransferAdminId)
                {
                    WriteProperty(".tag", "unspecified_transfer_admin_id", writer, enc.StringEncoder.Instance);
                    UnspecifiedTransferAdminId.Encoder.EncodeFields((UnspecifiedTransferAdminId)value, writer);
                    return;
                }
                if (value is TransferAdminIsNotAdmin)
                {
                    WriteProperty(".tag", "transfer_admin_is_not_admin", writer, enc.StringEncoder.Instance);
                    TransferAdminIsNotAdmin.Encoder.EncodeFields((TransferAdminIsNotAdmin)value, writer);
                    return;
                }
                if (value is RecipientNotVerified)
                {
                    WriteProperty(".tag", "recipient_not_verified", writer, enc.StringEncoder.Instance);
                    RecipientNotVerified.Encoder.EncodeFields((RecipientNotVerified)value, writer);
                    return;
                }
                if (value is UserNotInTeam)
                {
                    WriteProperty(".tag", "user_not_in_team", writer, enc.StringEncoder.Instance);
                    UserNotInTeam.Encoder.EncodeFields((UserNotInTeam)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                if (value is UserNotFound)
                {
                    WriteProperty(".tag", "user_not_found", writer, enc.StringEncoder.Instance);
                    UserNotFound.Encoder.EncodeFields((UserNotFound)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="MembersRemoveError" />.</para>
        /// </summary>
        private class MembersRemoveErrorDecoder : enc.UnionDecoder<MembersRemoveError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="MembersRemoveError" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override MembersRemoveError Create()
            {
                return new MembersRemoveError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override MembersRemoveError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "remove_last_admin":
                        return RemoveLastAdmin.Decoder.DecodeFields(reader);
                    case "cannot_keep_account_and_transfer":
                        return CannotKeepAccountAndTransfer.Decoder.DecodeFields(reader);
                    case "cannot_keep_account_and_delete_data":
                        return CannotKeepAccountAndDeleteData.Decoder.DecodeFields(reader);
                    case "email_address_too_long_to_be_disabled":
                        return EmailAddressTooLongToBeDisabled.Decoder.DecodeFields(reader);
                    case "cannot_keep_invited_user_account":
                        return CannotKeepInvitedUserAccount.Decoder.DecodeFields(reader);
                    case "cannot_retain_shares_when_data_wiped":
                        return CannotRetainSharesWhenDataWiped.Decoder.DecodeFields(reader);
                    case "cannot_retain_shares_when_no_account_kept":
                        return CannotRetainSharesWhenNoAccountKept.Decoder.DecodeFields(reader);
                    case "cannot_retain_shares_when_team_external_sharing_off":
                        return CannotRetainSharesWhenTeamExternalSharingOff.Decoder.DecodeFields(reader);
                    case "cannot_keep_account":
                        return CannotKeepAccount.Decoder.DecodeFields(reader);
                    case "cannot_keep_account_under_legal_hold":
                        return CannotKeepAccountUnderLegalHold.Decoder.DecodeFields(reader);
                    case "cannot_keep_account_required_to_sign_tos":
                        return CannotKeepAccountRequiredToSignTos.Decoder.DecodeFields(reader);
                    case "removed_and_transfer_dest_should_differ":
                        return RemovedAndTransferDestShouldDiffer.Decoder.DecodeFields(reader);
                    case "removed_and_transfer_admin_should_differ":
                        return RemovedAndTransferAdminShouldDiffer.Decoder.DecodeFields(reader);
                    case "transfer_dest_user_not_found":
                        return TransferDestUserNotFound.Decoder.DecodeFields(reader);
                    case "transfer_dest_user_not_in_team":
                        return TransferDestUserNotInTeam.Decoder.DecodeFields(reader);
                    case "transfer_admin_user_not_in_team":
                        return TransferAdminUserNotInTeam.Decoder.DecodeFields(reader);
                    case "transfer_admin_user_not_found":
                        return TransferAdminUserNotFound.Decoder.DecodeFields(reader);
                    case "unspecified_transfer_admin_id":
                        return UnspecifiedTransferAdminId.Decoder.DecodeFields(reader);
                    case "transfer_admin_is_not_admin":
                        return TransferAdminIsNotAdmin.Decoder.DecodeFields(reader);
                    case "recipient_not_verified":
                        return RecipientNotVerified.Decoder.DecodeFields(reader);
                    case "user_not_in_team":
                        return UserNotInTeam.Decoder.DecodeFields(reader);
                    case "other":
                        return Other.Decoder.DecodeFields(reader);
                    case "user_not_found":
                        return UserNotFound.Decoder.DecodeFields(reader);
                    default:
                        throw new sys.InvalidOperationException();
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The user is the last admin of the team, so it cannot be removed from
        /// it.</para>
        /// </summary>
        public sealed class RemoveLastAdmin : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RemoveLastAdmin> Encoder = new RemoveLastAdminEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RemoveLastAdmin> Decoder = new RemoveLastAdminDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RemoveLastAdmin" />
            /// class.</para>
            /// </summary>
            private RemoveLastAdmin()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RemoveLastAdmin</para>
            /// </summary>
            public static readonly RemoveLastAdmin Instance = new RemoveLastAdmin();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RemoveLastAdmin" />.</para>
            /// </summary>
            private class RemoveLastAdminEncoder : enc.StructEncoder<RemoveLastAdmin>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RemoveLastAdmin value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RemoveLastAdmin" />.</para>
            /// </summary>
            private class RemoveLastAdminDecoder : enc.StructDecoder<RemoveLastAdmin>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RemoveLastAdmin" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RemoveLastAdmin Create()
                {
                    return RemoveLastAdmin.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Cannot keep account and transfer the data to another user at the same
        /// time.</para>
        /// </summary>
        public sealed class CannotKeepAccountAndTransfer : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CannotKeepAccountAndTransfer> Encoder = new CannotKeepAccountAndTransferEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CannotKeepAccountAndTransfer> Decoder = new CannotKeepAccountAndTransferDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="CannotKeepAccountAndTransfer" /> class.</para>
            /// </summary>
            private CannotKeepAccountAndTransfer()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CannotKeepAccountAndTransfer</para>
            /// </summary>
            public static readonly CannotKeepAccountAndTransfer Instance = new CannotKeepAccountAndTransfer();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CannotKeepAccountAndTransfer" />.</para>
            /// </summary>
            private class CannotKeepAccountAndTransferEncoder : enc.StructEncoder<CannotKeepAccountAndTransfer>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CannotKeepAccountAndTransfer value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CannotKeepAccountAndTransfer" />.</para>
            /// </summary>
            private class CannotKeepAccountAndTransferDecoder : enc.StructDecoder<CannotKeepAccountAndTransfer>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="CannotKeepAccountAndTransfer" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CannotKeepAccountAndTransfer Create()
                {
                    return CannotKeepAccountAndTransfer.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Cannot keep account and delete the data at the same time. To keep the account
        /// the argument wipe_data should be set to <c>false</c>.</para>
        /// </summary>
        public sealed class CannotKeepAccountAndDeleteData : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CannotKeepAccountAndDeleteData> Encoder = new CannotKeepAccountAndDeleteDataEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CannotKeepAccountAndDeleteData> Decoder = new CannotKeepAccountAndDeleteDataDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="CannotKeepAccountAndDeleteData" /> class.</para>
            /// </summary>
            private CannotKeepAccountAndDeleteData()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CannotKeepAccountAndDeleteData</para>
            /// </summary>
            public static readonly CannotKeepAccountAndDeleteData Instance = new CannotKeepAccountAndDeleteData();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CannotKeepAccountAndDeleteData" />.</para>
            /// </summary>
            private class CannotKeepAccountAndDeleteDataEncoder : enc.StructEncoder<CannotKeepAccountAndDeleteData>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CannotKeepAccountAndDeleteData value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CannotKeepAccountAndDeleteData" />.</para>
            /// </summary>
            private class CannotKeepAccountAndDeleteDataDecoder : enc.StructDecoder<CannotKeepAccountAndDeleteData>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="CannotKeepAccountAndDeleteData" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CannotKeepAccountAndDeleteData Create()
                {
                    return CannotKeepAccountAndDeleteData.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The email address of the user is too long to be disabled.</para>
        /// </summary>
        public sealed class EmailAddressTooLongToBeDisabled : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<EmailAddressTooLongToBeDisabled> Encoder = new EmailAddressTooLongToBeDisabledEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<EmailAddressTooLongToBeDisabled> Decoder = new EmailAddressTooLongToBeDisabledDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="EmailAddressTooLongToBeDisabled" /> class.</para>
            /// </summary>
            private EmailAddressTooLongToBeDisabled()
            {
            }

            /// <summary>
            /// <para>A singleton instance of EmailAddressTooLongToBeDisabled</para>
            /// </summary>
            public static readonly EmailAddressTooLongToBeDisabled Instance = new EmailAddressTooLongToBeDisabled();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="EmailAddressTooLongToBeDisabled" />.</para>
            /// </summary>
            private class EmailAddressTooLongToBeDisabledEncoder : enc.StructEncoder<EmailAddressTooLongToBeDisabled>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(EmailAddressTooLongToBeDisabled value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="EmailAddressTooLongToBeDisabled" />.</para>
            /// </summary>
            private class EmailAddressTooLongToBeDisabledDecoder : enc.StructDecoder<EmailAddressTooLongToBeDisabled>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="EmailAddressTooLongToBeDisabled" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override EmailAddressTooLongToBeDisabled Create()
                {
                    return EmailAddressTooLongToBeDisabled.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Cannot keep account of an invited user.</para>
        /// </summary>
        public sealed class CannotKeepInvitedUserAccount : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CannotKeepInvitedUserAccount> Encoder = new CannotKeepInvitedUserAccountEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CannotKeepInvitedUserAccount> Decoder = new CannotKeepInvitedUserAccountDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="CannotKeepInvitedUserAccount" /> class.</para>
            /// </summary>
            private CannotKeepInvitedUserAccount()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CannotKeepInvitedUserAccount</para>
            /// </summary>
            public static readonly CannotKeepInvitedUserAccount Instance = new CannotKeepInvitedUserAccount();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CannotKeepInvitedUserAccount" />.</para>
            /// </summary>
            private class CannotKeepInvitedUserAccountEncoder : enc.StructEncoder<CannotKeepInvitedUserAccount>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CannotKeepInvitedUserAccount value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CannotKeepInvitedUserAccount" />.</para>
            /// </summary>
            private class CannotKeepInvitedUserAccountDecoder : enc.StructDecoder<CannotKeepInvitedUserAccount>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="CannotKeepInvitedUserAccount" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CannotKeepInvitedUserAccount Create()
                {
                    return CannotKeepInvitedUserAccount.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Cannot retain team shares when the user's data is marked for deletion on
        /// their linked devices. The argument wipe_data should be set to <c>false</c>.</para>
        /// </summary>
        public sealed class CannotRetainSharesWhenDataWiped : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CannotRetainSharesWhenDataWiped> Encoder = new CannotRetainSharesWhenDataWipedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CannotRetainSharesWhenDataWiped> Decoder = new CannotRetainSharesWhenDataWipedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="CannotRetainSharesWhenDataWiped" /> class.</para>
            /// </summary>
            private CannotRetainSharesWhenDataWiped()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CannotRetainSharesWhenDataWiped</para>
            /// </summary>
            public static readonly CannotRetainSharesWhenDataWiped Instance = new CannotRetainSharesWhenDataWiped();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CannotRetainSharesWhenDataWiped" />.</para>
            /// </summary>
            private class CannotRetainSharesWhenDataWipedEncoder : enc.StructEncoder<CannotRetainSharesWhenDataWiped>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CannotRetainSharesWhenDataWiped value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CannotRetainSharesWhenDataWiped" />.</para>
            /// </summary>
            private class CannotRetainSharesWhenDataWipedDecoder : enc.StructDecoder<CannotRetainSharesWhenDataWiped>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="CannotRetainSharesWhenDataWiped" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CannotRetainSharesWhenDataWiped Create()
                {
                    return CannotRetainSharesWhenDataWiped.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The user's account must be kept in order to retain team shares. The argument
        /// keep_account should be set to <c>true</c>.</para>
        /// </summary>
        public sealed class CannotRetainSharesWhenNoAccountKept : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CannotRetainSharesWhenNoAccountKept> Encoder = new CannotRetainSharesWhenNoAccountKeptEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CannotRetainSharesWhenNoAccountKept> Decoder = new CannotRetainSharesWhenNoAccountKeptDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="CannotRetainSharesWhenNoAccountKept" /> class.</para>
            /// </summary>
            private CannotRetainSharesWhenNoAccountKept()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CannotRetainSharesWhenNoAccountKept</para>
            /// </summary>
            public static readonly CannotRetainSharesWhenNoAccountKept Instance = new CannotRetainSharesWhenNoAccountKept();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CannotRetainSharesWhenNoAccountKept" />.</para>
            /// </summary>
            private class CannotRetainSharesWhenNoAccountKeptEncoder : enc.StructEncoder<CannotRetainSharesWhenNoAccountKept>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CannotRetainSharesWhenNoAccountKept value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CannotRetainSharesWhenNoAccountKept" />.</para>
            /// </summary>
            private class CannotRetainSharesWhenNoAccountKeptDecoder : enc.StructDecoder<CannotRetainSharesWhenNoAccountKept>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="CannotRetainSharesWhenNoAccountKept" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CannotRetainSharesWhenNoAccountKept Create()
                {
                    return CannotRetainSharesWhenNoAccountKept.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Externally sharing files, folders, and links must be enabled in team settings
        /// in order to retain team shares for the user.</para>
        /// </summary>
        public sealed class CannotRetainSharesWhenTeamExternalSharingOff : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CannotRetainSharesWhenTeamExternalSharingOff> Encoder = new CannotRetainSharesWhenTeamExternalSharingOffEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CannotRetainSharesWhenTeamExternalSharingOff> Decoder = new CannotRetainSharesWhenTeamExternalSharingOffDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="CannotRetainSharesWhenTeamExternalSharingOff" /> class.</para>
            /// </summary>
            private CannotRetainSharesWhenTeamExternalSharingOff()
            {
            }

            /// <summary>
            /// <para>A singleton instance of
            /// CannotRetainSharesWhenTeamExternalSharingOff</para>
            /// </summary>
            public static readonly CannotRetainSharesWhenTeamExternalSharingOff Instance = new CannotRetainSharesWhenTeamExternalSharingOff();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CannotRetainSharesWhenTeamExternalSharingOff"
            /// />.</para>
            /// </summary>
            private class CannotRetainSharesWhenTeamExternalSharingOffEncoder : enc.StructEncoder<CannotRetainSharesWhenTeamExternalSharingOff>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CannotRetainSharesWhenTeamExternalSharingOff value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CannotRetainSharesWhenTeamExternalSharingOff"
            /// />.</para>
            /// </summary>
            private class CannotRetainSharesWhenTeamExternalSharingOffDecoder : enc.StructDecoder<CannotRetainSharesWhenTeamExternalSharingOff>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="CannotRetainSharesWhenTeamExternalSharingOff" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CannotRetainSharesWhenTeamExternalSharingOff Create()
                {
                    return CannotRetainSharesWhenTeamExternalSharingOff.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Only a team admin, can convert this account to a Basic account.</para>
        /// </summary>
        public sealed class CannotKeepAccount : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CannotKeepAccount> Encoder = new CannotKeepAccountEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CannotKeepAccount> Decoder = new CannotKeepAccountDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="CannotKeepAccount" />
            /// class.</para>
            /// </summary>
            private CannotKeepAccount()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CannotKeepAccount</para>
            /// </summary>
            public static readonly CannotKeepAccount Instance = new CannotKeepAccount();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CannotKeepAccount" />.</para>
            /// </summary>
            private class CannotKeepAccountEncoder : enc.StructEncoder<CannotKeepAccount>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CannotKeepAccount value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CannotKeepAccount" />.</para>
            /// </summary>
            private class CannotKeepAccountDecoder : enc.StructDecoder<CannotKeepAccount>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="CannotKeepAccount"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CannotKeepAccount Create()
                {
                    return CannotKeepAccount.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>This user content is currently being held. To convert this member's account
        /// to a Basic account, you'll first need to remove them from the hold.</para>
        /// </summary>
        public sealed class CannotKeepAccountUnderLegalHold : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CannotKeepAccountUnderLegalHold> Encoder = new CannotKeepAccountUnderLegalHoldEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CannotKeepAccountUnderLegalHold> Decoder = new CannotKeepAccountUnderLegalHoldDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="CannotKeepAccountUnderLegalHold" /> class.</para>
            /// </summary>
            private CannotKeepAccountUnderLegalHold()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CannotKeepAccountUnderLegalHold</para>
            /// </summary>
            public static readonly CannotKeepAccountUnderLegalHold Instance = new CannotKeepAccountUnderLegalHold();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CannotKeepAccountUnderLegalHold" />.</para>
            /// </summary>
            private class CannotKeepAccountUnderLegalHoldEncoder : enc.StructEncoder<CannotKeepAccountUnderLegalHold>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CannotKeepAccountUnderLegalHold value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CannotKeepAccountUnderLegalHold" />.</para>
            /// </summary>
            private class CannotKeepAccountUnderLegalHoldDecoder : enc.StructDecoder<CannotKeepAccountUnderLegalHold>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="CannotKeepAccountUnderLegalHold" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CannotKeepAccountUnderLegalHold Create()
                {
                    return CannotKeepAccountUnderLegalHold.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>To convert this member to a Basic account, they'll first need to sign in to
        /// Dropbox and agree to the terms of service.</para>
        /// </summary>
        public sealed class CannotKeepAccountRequiredToSignTos : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CannotKeepAccountRequiredToSignTos> Encoder = new CannotKeepAccountRequiredToSignTosEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CannotKeepAccountRequiredToSignTos> Decoder = new CannotKeepAccountRequiredToSignTosDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="CannotKeepAccountRequiredToSignTos" /> class.</para>
            /// </summary>
            private CannotKeepAccountRequiredToSignTos()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CannotKeepAccountRequiredToSignTos</para>
            /// </summary>
            public static readonly CannotKeepAccountRequiredToSignTos Instance = new CannotKeepAccountRequiredToSignTos();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CannotKeepAccountRequiredToSignTos" />.</para>
            /// </summary>
            private class CannotKeepAccountRequiredToSignTosEncoder : enc.StructEncoder<CannotKeepAccountRequiredToSignTos>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CannotKeepAccountRequiredToSignTos value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CannotKeepAccountRequiredToSignTos" />.</para>
            /// </summary>
            private class CannotKeepAccountRequiredToSignTosDecoder : enc.StructDecoder<CannotKeepAccountRequiredToSignTos>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="CannotKeepAccountRequiredToSignTos" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CannotKeepAccountRequiredToSignTos Create()
                {
                    return CannotKeepAccountRequiredToSignTos.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Expected removed user and transfer_dest user to be different.</para>
        /// </summary>
        public sealed class RemovedAndTransferDestShouldDiffer : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RemovedAndTransferDestShouldDiffer> Encoder = new RemovedAndTransferDestShouldDifferEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RemovedAndTransferDestShouldDiffer> Decoder = new RemovedAndTransferDestShouldDifferDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="RemovedAndTransferDestShouldDiffer" /> class.</para>
            /// </summary>
            private RemovedAndTransferDestShouldDiffer()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RemovedAndTransferDestShouldDiffer</para>
            /// </summary>
            public static readonly RemovedAndTransferDestShouldDiffer Instance = new RemovedAndTransferDestShouldDiffer();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RemovedAndTransferDestShouldDiffer" />.</para>
            /// </summary>
            private class RemovedAndTransferDestShouldDifferEncoder : enc.StructEncoder<RemovedAndTransferDestShouldDiffer>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RemovedAndTransferDestShouldDiffer value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RemovedAndTransferDestShouldDiffer" />.</para>
            /// </summary>
            private class RemovedAndTransferDestShouldDifferDecoder : enc.StructDecoder<RemovedAndTransferDestShouldDiffer>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="RemovedAndTransferDestShouldDiffer" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RemovedAndTransferDestShouldDiffer Create()
                {
                    return RemovedAndTransferDestShouldDiffer.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Expected removed user and transfer_admin user to be different.</para>
        /// </summary>
        public sealed class RemovedAndTransferAdminShouldDiffer : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RemovedAndTransferAdminShouldDiffer> Encoder = new RemovedAndTransferAdminShouldDifferEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RemovedAndTransferAdminShouldDiffer> Decoder = new RemovedAndTransferAdminShouldDifferDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see
            /// cref="RemovedAndTransferAdminShouldDiffer" /> class.</para>
            /// </summary>
            private RemovedAndTransferAdminShouldDiffer()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RemovedAndTransferAdminShouldDiffer</para>
            /// </summary>
            public static readonly RemovedAndTransferAdminShouldDiffer Instance = new RemovedAndTransferAdminShouldDiffer();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RemovedAndTransferAdminShouldDiffer" />.</para>
            /// </summary>
            private class RemovedAndTransferAdminShouldDifferEncoder : enc.StructEncoder<RemovedAndTransferAdminShouldDiffer>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RemovedAndTransferAdminShouldDiffer value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RemovedAndTransferAdminShouldDiffer" />.</para>
            /// </summary>
            private class RemovedAndTransferAdminShouldDifferDecoder : enc.StructDecoder<RemovedAndTransferAdminShouldDiffer>
            {
                /// <summary>
                /// <para>Create a new instance of type <see
                /// cref="RemovedAndTransferAdminShouldDiffer" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RemovedAndTransferAdminShouldDiffer Create()
                {
                    return RemovedAndTransferAdminShouldDiffer.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>No matching user found for the argument transfer_dest_id.</para>
        /// </summary>
        public sealed class TransferDestUserNotFound : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferDestUserNotFound> Encoder = new TransferDestUserNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferDestUserNotFound> Decoder = new TransferDestUserNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferDestUserNotFound" />
            /// class.</para>
            /// </summary>
            private TransferDestUserNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferDestUserNotFound</para>
            /// </summary>
            public static readonly TransferDestUserNotFound Instance = new TransferDestUserNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferDestUserNotFound" />.</para>
            /// </summary>
            private class TransferDestUserNotFoundEncoder : enc.StructEncoder<TransferDestUserNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferDestUserNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferDestUserNotFound" />.</para>
            /// </summary>
            private class TransferDestUserNotFoundDecoder : enc.StructDecoder<TransferDestUserNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferDestUserNotFound"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferDestUserNotFound Create()
                {
                    return TransferDestUserNotFound.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The provided transfer_dest_id does not exist on this team.</para>
        /// </summary>
        public sealed class TransferDestUserNotInTeam : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferDestUserNotInTeam> Encoder = new TransferDestUserNotInTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferDestUserNotInTeam> Decoder = new TransferDestUserNotInTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferDestUserNotInTeam"
            /// /> class.</para>
            /// </summary>
            private TransferDestUserNotInTeam()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferDestUserNotInTeam</para>
            /// </summary>
            public static readonly TransferDestUserNotInTeam Instance = new TransferDestUserNotInTeam();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferDestUserNotInTeam" />.</para>
            /// </summary>
            private class TransferDestUserNotInTeamEncoder : enc.StructEncoder<TransferDestUserNotInTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferDestUserNotInTeam value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferDestUserNotInTeam" />.</para>
            /// </summary>
            private class TransferDestUserNotInTeamDecoder : enc.StructDecoder<TransferDestUserNotInTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferDestUserNotInTeam"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferDestUserNotInTeam Create()
                {
                    return TransferDestUserNotInTeam.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The provided transfer_admin_id does not exist on this team.</para>
        /// </summary>
        public sealed class TransferAdminUserNotInTeam : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferAdminUserNotInTeam> Encoder = new TransferAdminUserNotInTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferAdminUserNotInTeam> Decoder = new TransferAdminUserNotInTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferAdminUserNotInTeam"
            /// /> class.</para>
            /// </summary>
            private TransferAdminUserNotInTeam()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferAdminUserNotInTeam</para>
            /// </summary>
            public static readonly TransferAdminUserNotInTeam Instance = new TransferAdminUserNotInTeam();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferAdminUserNotInTeam" />.</para>
            /// </summary>
            private class TransferAdminUserNotInTeamEncoder : enc.StructEncoder<TransferAdminUserNotInTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferAdminUserNotInTeam value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferAdminUserNotInTeam" />.</para>
            /// </summary>
            private class TransferAdminUserNotInTeamDecoder : enc.StructDecoder<TransferAdminUserNotInTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferAdminUserNotInTeam"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferAdminUserNotInTeam Create()
                {
                    return TransferAdminUserNotInTeam.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>No matching user found for the argument transfer_admin_id.</para>
        /// </summary>
        public sealed class TransferAdminUserNotFound : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferAdminUserNotFound> Encoder = new TransferAdminUserNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferAdminUserNotFound> Decoder = new TransferAdminUserNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferAdminUserNotFound"
            /// /> class.</para>
            /// </summary>
            private TransferAdminUserNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferAdminUserNotFound</para>
            /// </summary>
            public static readonly TransferAdminUserNotFound Instance = new TransferAdminUserNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferAdminUserNotFound" />.</para>
            /// </summary>
            private class TransferAdminUserNotFoundEncoder : enc.StructEncoder<TransferAdminUserNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferAdminUserNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferAdminUserNotFound" />.</para>
            /// </summary>
            private class TransferAdminUserNotFoundDecoder : enc.StructDecoder<TransferAdminUserNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferAdminUserNotFound"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferAdminUserNotFound Create()
                {
                    return TransferAdminUserNotFound.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The transfer_admin_id argument must be provided when file transfer is
        /// requested.</para>
        /// </summary>
        public sealed class UnspecifiedTransferAdminId : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UnspecifiedTransferAdminId> Encoder = new UnspecifiedTransferAdminIdEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UnspecifiedTransferAdminId> Decoder = new UnspecifiedTransferAdminIdDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UnspecifiedTransferAdminId"
            /// /> class.</para>
            /// </summary>
            private UnspecifiedTransferAdminId()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UnspecifiedTransferAdminId</para>
            /// </summary>
            public static readonly UnspecifiedTransferAdminId Instance = new UnspecifiedTransferAdminId();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UnspecifiedTransferAdminId" />.</para>
            /// </summary>
            private class UnspecifiedTransferAdminIdEncoder : enc.StructEncoder<UnspecifiedTransferAdminId>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UnspecifiedTransferAdminId value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UnspecifiedTransferAdminId" />.</para>
            /// </summary>
            private class UnspecifiedTransferAdminIdDecoder : enc.StructDecoder<UnspecifiedTransferAdminId>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UnspecifiedTransferAdminId"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UnspecifiedTransferAdminId Create()
                {
                    return UnspecifiedTransferAdminId.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Specified transfer_admin user is not a team admin.</para>
        /// </summary>
        public sealed class TransferAdminIsNotAdmin : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransferAdminIsNotAdmin> Encoder = new TransferAdminIsNotAdminEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransferAdminIsNotAdmin> Decoder = new TransferAdminIsNotAdminDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransferAdminIsNotAdmin" />
            /// class.</para>
            /// </summary>
            private TransferAdminIsNotAdmin()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransferAdminIsNotAdmin</para>
            /// </summary>
            public static readonly TransferAdminIsNotAdmin Instance = new TransferAdminIsNotAdmin();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransferAdminIsNotAdmin" />.</para>
            /// </summary>
            private class TransferAdminIsNotAdminEncoder : enc.StructEncoder<TransferAdminIsNotAdmin>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransferAdminIsNotAdmin value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransferAdminIsNotAdmin" />.</para>
            /// </summary>
            private class TransferAdminIsNotAdminDecoder : enc.StructDecoder<TransferAdminIsNotAdmin>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransferAdminIsNotAdmin"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransferAdminIsNotAdmin Create()
                {
                    return TransferAdminIsNotAdmin.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The recipient user's email is not verified.</para>
        /// </summary>
        public sealed class RecipientNotVerified : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RecipientNotVerified> Encoder = new RecipientNotVerifiedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RecipientNotVerified> Decoder = new RecipientNotVerifiedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RecipientNotVerified" />
            /// class.</para>
            /// </summary>
            private RecipientNotVerified()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RecipientNotVerified</para>
            /// </summary>
            public static readonly RecipientNotVerified Instance = new RecipientNotVerified();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RecipientNotVerified" />.</para>
            /// </summary>
            private class RecipientNotVerifiedEncoder : enc.StructEncoder<RecipientNotVerified>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RecipientNotVerified value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RecipientNotVerified" />.</para>
            /// </summary>
            private class RecipientNotVerifiedDecoder : enc.StructDecoder<RecipientNotVerified>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RecipientNotVerified"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RecipientNotVerified Create()
                {
                    return RecipientNotVerified.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The user is not a member of the team.</para>
        /// </summary>
        public sealed class UserNotInTeam : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserNotInTeam> Encoder = new UserNotInTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserNotInTeam> Decoder = new UserNotInTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserNotInTeam" />
            /// class.</para>
            /// </summary>
            private UserNotInTeam()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserNotInTeam</para>
            /// </summary>
            public static readonly UserNotInTeam Instance = new UserNotInTeam();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserNotInTeam" />.</para>
            /// </summary>
            private class UserNotInTeamEncoder : enc.StructEncoder<UserNotInTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserNotInTeam value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserNotInTeam" />.</para>
            /// </summary>
            private class UserNotInTeamDecoder : enc.StructDecoder<UserNotInTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserNotInTeam" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserNotInTeam Create()
                {
                    return UserNotInTeam.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>No matching user found. The provided team_member_id, email, or external_id
        /// does not exist on this team.</para>
        /// </summary>
        public sealed class UserNotFound : MembersRemoveError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<UserNotFound> Encoder = new UserNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<UserNotFound> Decoder = new UserNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="UserNotFound" />
            /// class.</para>
            /// </summary>
            private UserNotFound()
            {
            }

            /// <summary>
            /// <para>A singleton instance of UserNotFound</para>
            /// </summary>
            public static readonly UserNotFound Instance = new UserNotFound();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="UserNotFound" />.</para>
            /// </summary>
            private class UserNotFoundEncoder : enc.StructEncoder<UserNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(UserNotFound value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="UserNotFound" />.</para>
            /// </summary>
            private class UserNotFoundDecoder : enc.StructDecoder<UserNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="UserNotFound" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override UserNotFound Create()
                {
                    return UserNotFound.Instance;
                }

            }

            #endregion
        }
    }
}
