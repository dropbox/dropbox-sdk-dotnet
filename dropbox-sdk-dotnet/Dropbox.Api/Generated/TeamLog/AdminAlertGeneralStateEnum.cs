// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Alert state</para>
    /// </summary>
    public class AdminAlertGeneralStateEnum
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AdminAlertGeneralStateEnum> Encoder = new AdminAlertGeneralStateEnumEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AdminAlertGeneralStateEnum> Decoder = new AdminAlertGeneralStateEnumDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AdminAlertGeneralStateEnum" />
        /// class.</para>
        /// </summary>
        public AdminAlertGeneralStateEnum()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Active</para>
        /// </summary>
        public bool IsActive
        {
            get
            {
                return this is Active;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Active, or <c>null</c>.</para>
        /// </summary>
        public Active AsActive
        {
            get
            {
                return this as Active;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Dismissed</para>
        /// </summary>
        public bool IsDismissed
        {
            get
            {
                return this is Dismissed;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Dismissed, or <c>null</c>.</para>
        /// </summary>
        public Dismissed AsDismissed
        {
            get
            {
                return this as Dismissed;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is InProgress</para>
        /// </summary>
        public bool IsInProgress
        {
            get
            {
                return this is InProgress;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a InProgress, or <c>null</c>.</para>
        /// </summary>
        public InProgress AsInProgress
        {
            get
            {
                return this as InProgress;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Na</para>
        /// </summary>
        public bool IsNa
        {
            get
            {
                return this is Na;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Na, or <c>null</c>.</para>
        /// </summary>
        public Na AsNa
        {
            get
            {
                return this as Na;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Resolved</para>
        /// </summary>
        public bool IsResolved
        {
            get
            {
                return this is Resolved;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Resolved, or <c>null</c>.</para>
        /// </summary>
        public Resolved AsResolved
        {
            get
            {
                return this as Resolved;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AdminAlertGeneralStateEnum" />.</para>
        /// </summary>
        private class AdminAlertGeneralStateEnumEncoder : enc.StructEncoder<AdminAlertGeneralStateEnum>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AdminAlertGeneralStateEnum value, enc.IJsonWriter writer)
            {
                if (value is Active)
                {
                    WriteProperty(".tag", "active", writer, enc.StringEncoder.Instance);
                    Active.Encoder.EncodeFields((Active)value, writer);
                    return;
                }
                if (value is Dismissed)
                {
                    WriteProperty(".tag", "dismissed", writer, enc.StringEncoder.Instance);
                    Dismissed.Encoder.EncodeFields((Dismissed)value, writer);
                    return;
                }
                if (value is InProgress)
                {
                    WriteProperty(".tag", "in_progress", writer, enc.StringEncoder.Instance);
                    InProgress.Encoder.EncodeFields((InProgress)value, writer);
                    return;
                }
                if (value is Na)
                {
                    WriteProperty(".tag", "na", writer, enc.StringEncoder.Instance);
                    Na.Encoder.EncodeFields((Na)value, writer);
                    return;
                }
                if (value is Resolved)
                {
                    WriteProperty(".tag", "resolved", writer, enc.StringEncoder.Instance);
                    Resolved.Encoder.EncodeFields((Resolved)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AdminAlertGeneralStateEnum" />.</para>
        /// </summary>
        private class AdminAlertGeneralStateEnumDecoder : enc.UnionDecoder<AdminAlertGeneralStateEnum>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AdminAlertGeneralStateEnum"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AdminAlertGeneralStateEnum Create()
            {
                return new AdminAlertGeneralStateEnum();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override AdminAlertGeneralStateEnum Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "active":
                        return Active.Decoder.DecodeFields(reader);
                    case "dismissed":
                        return Dismissed.Decoder.DecodeFields(reader);
                    case "in_progress":
                        return InProgress.Decoder.DecodeFields(reader);
                    case "na":
                        return Na.Decoder.DecodeFields(reader);
                    case "resolved":
                        return Resolved.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The active object</para>
        /// </summary>
        public sealed class Active : AdminAlertGeneralStateEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Active> Encoder = new ActiveEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Active> Decoder = new ActiveDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Active" /> class.</para>
            /// </summary>
            private Active()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Active</para>
            /// </summary>
            public static readonly Active Instance = new Active();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Active" />.</para>
            /// </summary>
            private class ActiveEncoder : enc.StructEncoder<Active>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Active value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Active" />.</para>
            /// </summary>
            private class ActiveDecoder : enc.StructDecoder<Active>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Active" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Active Create()
                {
                    return Active.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The dismissed object</para>
        /// </summary>
        public sealed class Dismissed : AdminAlertGeneralStateEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Dismissed> Encoder = new DismissedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Dismissed> Decoder = new DismissedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Dismissed" /> class.</para>
            /// </summary>
            private Dismissed()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Dismissed</para>
            /// </summary>
            public static readonly Dismissed Instance = new Dismissed();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Dismissed" />.</para>
            /// </summary>
            private class DismissedEncoder : enc.StructEncoder<Dismissed>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Dismissed value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Dismissed" />.</para>
            /// </summary>
            private class DismissedDecoder : enc.StructDecoder<Dismissed>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Dismissed" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Dismissed Create()
                {
                    return Dismissed.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The in progress object</para>
        /// </summary>
        public sealed class InProgress : AdminAlertGeneralStateEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<InProgress> Encoder = new InProgressEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<InProgress> Decoder = new InProgressDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="InProgress" /> class.</para>
            /// </summary>
            private InProgress()
            {
            }

            /// <summary>
            /// <para>A singleton instance of InProgress</para>
            /// </summary>
            public static readonly InProgress Instance = new InProgress();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="InProgress" />.</para>
            /// </summary>
            private class InProgressEncoder : enc.StructEncoder<InProgress>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(InProgress value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="InProgress" />.</para>
            /// </summary>
            private class InProgressDecoder : enc.StructDecoder<InProgress>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="InProgress" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override InProgress Create()
                {
                    return InProgress.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The na object</para>
        /// </summary>
        public sealed class Na : AdminAlertGeneralStateEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Na> Encoder = new NaEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Na> Decoder = new NaDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Na" /> class.</para>
            /// </summary>
            private Na()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Na</para>
            /// </summary>
            public static readonly Na Instance = new Na();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Na" />.</para>
            /// </summary>
            private class NaEncoder : enc.StructEncoder<Na>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Na value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Na" />.</para>
            /// </summary>
            private class NaDecoder : enc.StructDecoder<Na>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Na" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Na Create()
                {
                    return Na.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The resolved object</para>
        /// </summary>
        public sealed class Resolved : AdminAlertGeneralStateEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Resolved> Encoder = new ResolvedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Resolved> Decoder = new ResolvedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Resolved" /> class.</para>
            /// </summary>
            private Resolved()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Resolved</para>
            /// </summary>
            public static readonly Resolved Instance = new Resolved();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Resolved" />.</para>
            /// </summary>
            private class ResolvedEncoder : enc.StructEncoder<Resolved>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Resolved value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Resolved" />.</para>
            /// </summary>
            private class ResolvedDecoder : enc.StructDecoder<Resolved>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Resolved" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Resolved Create()
                {
                    return Resolved.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : AdminAlertGeneralStateEnum
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
