// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Indicates what type of match was found for a given item.</para>
    /// </summary>
    public class SearchMatchTypeV2
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SearchMatchTypeV2> Encoder = new SearchMatchTypeV2Encoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SearchMatchTypeV2> Decoder = new SearchMatchTypeV2Decoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SearchMatchTypeV2" />
        /// class.</para>
        /// </summary>
        public SearchMatchTypeV2()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Filename</para>
        /// </summary>
        public bool IsFilename
        {
            get
            {
                return this is Filename;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Filename, or <c>null</c>.</para>
        /// </summary>
        public Filename AsFilename
        {
            get
            {
                return this as Filename;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FileContent</para>
        /// </summary>
        public bool IsFileContent
        {
            get
            {
                return this is FileContent;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FileContent, or <c>null</c>.</para>
        /// </summary>
        public FileContent AsFileContent
        {
            get
            {
                return this as FileContent;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FilenameAndContent</para>
        /// </summary>
        public bool IsFilenameAndContent
        {
            get
            {
                return this is FilenameAndContent;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FilenameAndContent, or <c>null</c>.</para>
        /// </summary>
        public FilenameAndContent AsFilenameAndContent
        {
            get
            {
                return this as FilenameAndContent;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ImageContent</para>
        /// </summary>
        public bool IsImageContent
        {
            get
            {
                return this is ImageContent;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ImageContent, or <c>null</c>.</para>
        /// </summary>
        public ImageContent AsImageContent
        {
            get
            {
                return this as ImageContent;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SearchMatchTypeV2" />.</para>
        /// </summary>
        private class SearchMatchTypeV2Encoder : enc.StructEncoder<SearchMatchTypeV2>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SearchMatchTypeV2 value, enc.IJsonWriter writer)
            {
                if (value is Filename)
                {
                    WriteProperty(".tag", "filename", writer, enc.StringEncoder.Instance);
                    Filename.Encoder.EncodeFields((Filename)value, writer);
                    return;
                }
                if (value is FileContent)
                {
                    WriteProperty(".tag", "file_content", writer, enc.StringEncoder.Instance);
                    FileContent.Encoder.EncodeFields((FileContent)value, writer);
                    return;
                }
                if (value is FilenameAndContent)
                {
                    WriteProperty(".tag", "filename_and_content", writer, enc.StringEncoder.Instance);
                    FilenameAndContent.Encoder.EncodeFields((FilenameAndContent)value, writer);
                    return;
                }
                if (value is ImageContent)
                {
                    WriteProperty(".tag", "image_content", writer, enc.StringEncoder.Instance);
                    ImageContent.Encoder.EncodeFields((ImageContent)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SearchMatchTypeV2" />.</para>
        /// </summary>
        private class SearchMatchTypeV2Decoder : enc.UnionDecoder<SearchMatchTypeV2>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SearchMatchTypeV2" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SearchMatchTypeV2 Create()
            {
                return new SearchMatchTypeV2();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override SearchMatchTypeV2 Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "filename":
                        return Filename.Decoder.DecodeFields(reader);
                    case "file_content":
                        return FileContent.Decoder.DecodeFields(reader);
                    case "filename_and_content":
                        return FilenameAndContent.Decoder.DecodeFields(reader);
                    case "image_content":
                        return ImageContent.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>This item was matched on its file or folder name.</para>
        /// </summary>
        public sealed class Filename : SearchMatchTypeV2
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Filename> Encoder = new FilenameEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Filename> Decoder = new FilenameDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Filename" /> class.</para>
            /// </summary>
            private Filename()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Filename</para>
            /// </summary>
            public static readonly Filename Instance = new Filename();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Filename" />.</para>
            /// </summary>
            private class FilenameEncoder : enc.StructEncoder<Filename>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Filename value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Filename" />.</para>
            /// </summary>
            private class FilenameDecoder : enc.StructDecoder<Filename>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Filename" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Filename Create()
                {
                    return Filename.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>This item was matched based on its file contents.</para>
        /// </summary>
        public sealed class FileContent : SearchMatchTypeV2
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FileContent> Encoder = new FileContentEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FileContent> Decoder = new FileContentDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FileContent" />
            /// class.</para>
            /// </summary>
            private FileContent()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FileContent</para>
            /// </summary>
            public static readonly FileContent Instance = new FileContent();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FileContent" />.</para>
            /// </summary>
            private class FileContentEncoder : enc.StructEncoder<FileContent>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FileContent value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FileContent" />.</para>
            /// </summary>
            private class FileContentDecoder : enc.StructDecoder<FileContent>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FileContent" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FileContent Create()
                {
                    return FileContent.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>This item was matched based on both its contents and its file name.</para>
        /// </summary>
        public sealed class FilenameAndContent : SearchMatchTypeV2
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FilenameAndContent> Encoder = new FilenameAndContentEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FilenameAndContent> Decoder = new FilenameAndContentDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FilenameAndContent" />
            /// class.</para>
            /// </summary>
            private FilenameAndContent()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FilenameAndContent</para>
            /// </summary>
            public static readonly FilenameAndContent Instance = new FilenameAndContent();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FilenameAndContent" />.</para>
            /// </summary>
            private class FilenameAndContentEncoder : enc.StructEncoder<FilenameAndContent>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FilenameAndContent value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FilenameAndContent" />.</para>
            /// </summary>
            private class FilenameAndContentDecoder : enc.StructDecoder<FilenameAndContent>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FilenameAndContent"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FilenameAndContent Create()
                {
                    return FilenameAndContent.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>This item was matched on image content.</para>
        /// </summary>
        public sealed class ImageContent : SearchMatchTypeV2
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ImageContent> Encoder = new ImageContentEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ImageContent> Decoder = new ImageContentDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ImageContent" />
            /// class.</para>
            /// </summary>
            private ImageContent()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ImageContent</para>
            /// </summary>
            public static readonly ImageContent Instance = new ImageContent();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ImageContent" />.</para>
            /// </summary>
            private class ImageContentEncoder : enc.StructEncoder<ImageContent>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ImageContent value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ImageContent" />.</para>
            /// </summary>
            private class ImageContentDecoder : enc.StructDecoder<ImageContent>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ImageContent" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ImageContent Create()
                {
                    return ImageContent.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : SearchMatchTypeV2
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
