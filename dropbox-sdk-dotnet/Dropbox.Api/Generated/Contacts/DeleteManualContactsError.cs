// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Contacts
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The delete manual contacts error object</para>
    /// </summary>
    public class DeleteManualContactsError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<DeleteManualContactsError> Encoder = new DeleteManualContactsErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<DeleteManualContactsError> Decoder = new DeleteManualContactsErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="DeleteManualContactsError" />
        /// class.</para>
        /// </summary>
        public DeleteManualContactsError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ContactsNotFound</para>
        /// </summary>
        public bool IsContactsNotFound
        {
            get
            {
                return this is ContactsNotFound;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ContactsNotFound, or <c>null</c>.</para>
        /// </summary>
        public ContactsNotFound AsContactsNotFound
        {
            get
            {
                return this as ContactsNotFound;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="DeleteManualContactsError" />.</para>
        /// </summary>
        private class DeleteManualContactsErrorEncoder : enc.StructEncoder<DeleteManualContactsError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(DeleteManualContactsError value, enc.IJsonWriter writer)
            {
                if (value is ContactsNotFound)
                {
                    WriteProperty(".tag", "contacts_not_found", writer, enc.StringEncoder.Instance);
                    ContactsNotFound.Encoder.EncodeFields((ContactsNotFound)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="DeleteManualContactsError" />.</para>
        /// </summary>
        private class DeleteManualContactsErrorDecoder : enc.UnionDecoder<DeleteManualContactsError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="DeleteManualContactsError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override DeleteManualContactsError Create()
            {
                return new DeleteManualContactsError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override DeleteManualContactsError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "contacts_not_found":
                        return ContactsNotFound.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Can't delete contacts from this list. Make sure the list only has manually
        /// added contacts. The deletion was cancelled.</para>
        /// </summary>
        public sealed class ContactsNotFound : DeleteManualContactsError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ContactsNotFound> Encoder = new ContactsNotFoundEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ContactsNotFound> Decoder = new ContactsNotFoundDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ContactsNotFound" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public ContactsNotFound(col.IEnumerable<string> value)
            {
                this.Value = new col.List<string>(value);
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ContactsNotFound" />
            /// class.</para>
            /// </summary>
            private ContactsNotFound()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public col.IList<string> Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ContactsNotFound" />.</para>
            /// </summary>
            private class ContactsNotFoundEncoder : enc.StructEncoder<ContactsNotFound>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ContactsNotFound value, enc.IJsonWriter writer)
                {
                    WriteListProperty("contacts_not_found", value.Value, writer, enc.StringEncoder.Instance);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ContactsNotFound" />.</para>
            /// </summary>
            private class ContactsNotFoundDecoder : enc.StructDecoder<ContactsNotFound>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ContactsNotFound" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ContactsNotFound Create()
                {
                    return new ContactsNotFound();
                }

                /// <summary>
                /// <para>Set given field.</para>
                /// </summary>
                /// <param name="value">The field value.</param>
                /// <param name="fieldName">The field name.</param>
                /// <param name="reader">The json reader.</param>
                protected override void SetField(ContactsNotFound value, string fieldName, enc.IJsonReader reader)
                {
                    switch (fieldName)
                    {
                        case "contacts_not_found":
                            value.Value = ReadList<string>(reader, enc.StringDecoder.Instance);
                            break;
                        default:
                            reader.Skip();
                            break;
                    }
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : DeleteManualContactsError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
