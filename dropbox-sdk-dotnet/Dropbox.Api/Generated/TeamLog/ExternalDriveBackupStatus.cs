// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>External Drive Backup status</para>
    /// </summary>
    public class ExternalDriveBackupStatus
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<ExternalDriveBackupStatus> Encoder = new ExternalDriveBackupStatusEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<ExternalDriveBackupStatus> Decoder = new ExternalDriveBackupStatusDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ExternalDriveBackupStatus" />
        /// class.</para>
        /// </summary>
        public ExternalDriveBackupStatus()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Broken</para>
        /// </summary>
        public bool IsBroken
        {
            get
            {
                return this is Broken;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Broken, or <c>null</c>.</para>
        /// </summary>
        public Broken AsBroken
        {
            get
            {
                return this as Broken;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Created</para>
        /// </summary>
        public bool IsCreated
        {
            get
            {
                return this is Created;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Created, or <c>null</c>.</para>
        /// </summary>
        public Created AsCreated
        {
            get
            {
                return this as Created;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is CreatedOrBroken</para>
        /// </summary>
        public bool IsCreatedOrBroken
        {
            get
            {
                return this is CreatedOrBroken;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CreatedOrBroken, or <c>null</c>.</para>
        /// </summary>
        public CreatedOrBroken AsCreatedOrBroken
        {
            get
            {
                return this as CreatedOrBroken;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Deleted</para>
        /// </summary>
        public bool IsDeleted
        {
            get
            {
                return this is Deleted;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Deleted, or <c>null</c>.</para>
        /// </summary>
        public Deleted AsDeleted
        {
            get
            {
                return this as Deleted;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Empty</para>
        /// </summary>
        public bool IsEmpty
        {
            get
            {
                return this is Empty;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Empty, or <c>null</c>.</para>
        /// </summary>
        public Empty AsEmpty
        {
            get
            {
                return this as Empty;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Unknown</para>
        /// </summary>
        public bool IsUnknown
        {
            get
            {
                return this is Unknown;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Unknown, or <c>null</c>.</para>
        /// </summary>
        public Unknown AsUnknown
        {
            get
            {
                return this as Unknown;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="ExternalDriveBackupStatus" />.</para>
        /// </summary>
        private class ExternalDriveBackupStatusEncoder : enc.StructEncoder<ExternalDriveBackupStatus>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(ExternalDriveBackupStatus value, enc.IJsonWriter writer)
            {
                if (value is Broken)
                {
                    WriteProperty(".tag", "broken", writer, enc.StringEncoder.Instance);
                    Broken.Encoder.EncodeFields((Broken)value, writer);
                    return;
                }
                if (value is Created)
                {
                    WriteProperty(".tag", "created", writer, enc.StringEncoder.Instance);
                    Created.Encoder.EncodeFields((Created)value, writer);
                    return;
                }
                if (value is CreatedOrBroken)
                {
                    WriteProperty(".tag", "created_or_broken", writer, enc.StringEncoder.Instance);
                    CreatedOrBroken.Encoder.EncodeFields((CreatedOrBroken)value, writer);
                    return;
                }
                if (value is Deleted)
                {
                    WriteProperty(".tag", "deleted", writer, enc.StringEncoder.Instance);
                    Deleted.Encoder.EncodeFields((Deleted)value, writer);
                    return;
                }
                if (value is Empty)
                {
                    WriteProperty(".tag", "empty", writer, enc.StringEncoder.Instance);
                    Empty.Encoder.EncodeFields((Empty)value, writer);
                    return;
                }
                if (value is Unknown)
                {
                    WriteProperty(".tag", "unknown", writer, enc.StringEncoder.Instance);
                    Unknown.Encoder.EncodeFields((Unknown)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="ExternalDriveBackupStatus" />.</para>
        /// </summary>
        private class ExternalDriveBackupStatusDecoder : enc.UnionDecoder<ExternalDriveBackupStatus>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="ExternalDriveBackupStatus"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override ExternalDriveBackupStatus Create()
            {
                return new ExternalDriveBackupStatus();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override ExternalDriveBackupStatus Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "broken":
                        return Broken.Decoder.DecodeFields(reader);
                    case "created":
                        return Created.Decoder.DecodeFields(reader);
                    case "created_or_broken":
                        return CreatedOrBroken.Decoder.DecodeFields(reader);
                    case "deleted":
                        return Deleted.Decoder.DecodeFields(reader);
                    case "empty":
                        return Empty.Decoder.DecodeFields(reader);
                    case "unknown":
                        return Unknown.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The broken object</para>
        /// </summary>
        public sealed class Broken : ExternalDriveBackupStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Broken> Encoder = new BrokenEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Broken> Decoder = new BrokenDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Broken" /> class.</para>
            /// </summary>
            private Broken()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Broken</para>
            /// </summary>
            public static readonly Broken Instance = new Broken();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Broken" />.</para>
            /// </summary>
            private class BrokenEncoder : enc.StructEncoder<Broken>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Broken value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Broken" />.</para>
            /// </summary>
            private class BrokenDecoder : enc.StructDecoder<Broken>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Broken" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Broken Create()
                {
                    return Broken.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The created object</para>
        /// </summary>
        public sealed class Created : ExternalDriveBackupStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Created> Encoder = new CreatedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Created> Decoder = new CreatedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Created" /> class.</para>
            /// </summary>
            private Created()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Created</para>
            /// </summary>
            public static readonly Created Instance = new Created();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Created" />.</para>
            /// </summary>
            private class CreatedEncoder : enc.StructEncoder<Created>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Created value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Created" />.</para>
            /// </summary>
            private class CreatedDecoder : enc.StructDecoder<Created>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Created" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Created Create()
                {
                    return Created.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The created or broken object</para>
        /// </summary>
        public sealed class CreatedOrBroken : ExternalDriveBackupStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CreatedOrBroken> Encoder = new CreatedOrBrokenEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CreatedOrBroken> Decoder = new CreatedOrBrokenDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="CreatedOrBroken" />
            /// class.</para>
            /// </summary>
            private CreatedOrBroken()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CreatedOrBroken</para>
            /// </summary>
            public static readonly CreatedOrBroken Instance = new CreatedOrBroken();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CreatedOrBroken" />.</para>
            /// </summary>
            private class CreatedOrBrokenEncoder : enc.StructEncoder<CreatedOrBroken>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CreatedOrBroken value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CreatedOrBroken" />.</para>
            /// </summary>
            private class CreatedOrBrokenDecoder : enc.StructDecoder<CreatedOrBroken>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="CreatedOrBroken" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CreatedOrBroken Create()
                {
                    return CreatedOrBroken.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The deleted object</para>
        /// </summary>
        public sealed class Deleted : ExternalDriveBackupStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Deleted> Encoder = new DeletedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Deleted> Decoder = new DeletedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Deleted" /> class.</para>
            /// </summary>
            private Deleted()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Deleted</para>
            /// </summary>
            public static readonly Deleted Instance = new Deleted();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Deleted" />.</para>
            /// </summary>
            private class DeletedEncoder : enc.StructEncoder<Deleted>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Deleted value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Deleted" />.</para>
            /// </summary>
            private class DeletedDecoder : enc.StructDecoder<Deleted>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Deleted" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Deleted Create()
                {
                    return Deleted.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The empty object</para>
        /// </summary>
        public sealed class Empty : ExternalDriveBackupStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Empty> Encoder = new EmptyEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Empty> Decoder = new EmptyDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Empty" /> class.</para>
            /// </summary>
            private Empty()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Empty</para>
            /// </summary>
            public static readonly Empty Instance = new Empty();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Empty" />.</para>
            /// </summary>
            private class EmptyEncoder : enc.StructEncoder<Empty>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Empty value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Empty" />.</para>
            /// </summary>
            private class EmptyDecoder : enc.StructDecoder<Empty>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Empty" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Empty Create()
                {
                    return Empty.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The unknown object</para>
        /// </summary>
        public sealed class Unknown : ExternalDriveBackupStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Unknown> Encoder = new UnknownEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Unknown> Decoder = new UnknownDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Unknown" /> class.</para>
            /// </summary>
            private Unknown()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Unknown</para>
            /// </summary>
            public static readonly Unknown Instance = new Unknown();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Unknown" />.</para>
            /// </summary>
            private class UnknownEncoder : enc.StructEncoder<Unknown>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Unknown value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Unknown" />.</para>
            /// </summary>
            private class UnknownDecoder : enc.StructDecoder<Unknown>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Unknown" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Unknown Create()
                {
                    return Unknown.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : ExternalDriveBackupStatus
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
