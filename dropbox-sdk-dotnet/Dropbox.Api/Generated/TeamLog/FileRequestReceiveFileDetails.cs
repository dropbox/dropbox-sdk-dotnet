// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Received files for file request.</para>
    /// </summary>
    public class FileRequestReceiveFileDetails
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<FileRequestReceiveFileDetails> Encoder = new FileRequestReceiveFileDetailsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<FileRequestReceiveFileDetails> Decoder = new FileRequestReceiveFileDetailsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FileRequestReceiveFileDetails"
        /// /> class.</para>
        /// </summary>
        /// <param name="submittedFileNames">Submitted file names.</param>
        /// <param name="fileRequestId">File request id. Might be missing due to historical
        /// data gap.</param>
        /// <param name="fileRequestDetails">File request details. Might be missing due to
        /// historical data gap.</param>
        /// <param name="submitterName">The name as provided by the submitter. Might be missing
        /// due to historical data gap.</param>
        /// <param name="submitterEmail">The email as provided by the submitter. Might be
        /// missing due to historical data gap.</param>
        public FileRequestReceiveFileDetails(col.IEnumerable<string> submittedFileNames,
                                             string fileRequestId = null,
                                             FileRequestDetails fileRequestDetails = null,
                                             string submitterName = null,
                                             string submitterEmail = null)
        {
            var submittedFileNamesList = enc.Util.ToList(submittedFileNames);

            if (submittedFileNames == null)
            {
                throw new sys.ArgumentNullException("submittedFileNames");
            }

            if (fileRequestId != null)
            {
                if (fileRequestId.Length < 1)
                {
                    throw new sys.ArgumentOutOfRangeException("fileRequestId", "Length should be at least 1");
                }
                if (!re.Regex.IsMatch(fileRequestId, @"\A(?:[-_0-9a-zA-Z]+)\z"))
                {
                    throw new sys.ArgumentOutOfRangeException("fileRequestId", @"Value should match pattern '\A(?:[-_0-9a-zA-Z]+)\z'");
                }
            }

            if (submitterEmail != null)
            {
                if (submitterEmail.Length > 255)
                {
                    throw new sys.ArgumentOutOfRangeException("submitterEmail", "Length should be at most 255");
                }
            }

            this.SubmittedFileNames = submittedFileNamesList;
            this.FileRequestId = fileRequestId;
            this.FileRequestDetails = fileRequestDetails;
            this.SubmitterName = submitterName;
            this.SubmitterEmail = submitterEmail;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FileRequestReceiveFileDetails"
        /// /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public FileRequestReceiveFileDetails()
        {
        }

        /// <summary>
        /// <para>Submitted file names.</para>
        /// </summary>
        public col.IList<string> SubmittedFileNames { get; protected set; }

        /// <summary>
        /// <para>File request id. Might be missing due to historical data gap.</para>
        /// </summary>
        public string FileRequestId { get; protected set; }

        /// <summary>
        /// <para>File request details. Might be missing due to historical data gap.</para>
        /// </summary>
        public FileRequestDetails FileRequestDetails { get; protected set; }

        /// <summary>
        /// <para>The name as provided by the submitter. Might be missing due to historical
        /// data gap.</para>
        /// </summary>
        public string SubmitterName { get; protected set; }

        /// <summary>
        /// <para>The email as provided by the submitter. Might be missing due to historical
        /// data gap.</para>
        /// </summary>
        public string SubmitterEmail { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="FileRequestReceiveFileDetails" />.</para>
        /// </summary>
        private class FileRequestReceiveFileDetailsEncoder : enc.StructEncoder<FileRequestReceiveFileDetails>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(FileRequestReceiveFileDetails value, enc.IJsonWriter writer)
            {
                WriteListProperty("submitted_file_names", value.SubmittedFileNames, writer, enc.StringEncoder.Instance);
                if (value.FileRequestId != null)
                {
                    WriteProperty("file_request_id", value.FileRequestId, writer, enc.StringEncoder.Instance);
                }
                if (value.FileRequestDetails != null)
                {
                    WriteProperty("file_request_details", value.FileRequestDetails, writer, global::Dropbox.Api.TeamLog.FileRequestDetails.Encoder);
                }
                if (value.SubmitterName != null)
                {
                    WriteProperty("submitter_name", value.SubmitterName, writer, enc.StringEncoder.Instance);
                }
                if (value.SubmitterEmail != null)
                {
                    WriteProperty("submitter_email", value.SubmitterEmail, writer, enc.StringEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="FileRequestReceiveFileDetails" />.</para>
        /// </summary>
        private class FileRequestReceiveFileDetailsDecoder : enc.StructDecoder<FileRequestReceiveFileDetails>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="FileRequestReceiveFileDetails"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override FileRequestReceiveFileDetails Create()
            {
                return new FileRequestReceiveFileDetails();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(FileRequestReceiveFileDetails value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "submitted_file_names":
                        value.SubmittedFileNames = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    case "file_request_id":
                        value.FileRequestId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "file_request_details":
                        value.FileRequestDetails = global::Dropbox.Api.TeamLog.FileRequestDetails.Decoder.Decode(reader);
                        break;
                    case "submitter_name":
                        value.SubmitterName = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "submitter_email":
                        value.SubmitterEmail = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
