// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The get temporary upload link arg object</para>
    /// </summary>
    public class GetTemporaryUploadLinkArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<GetTemporaryUploadLinkArg> Encoder = new GetTemporaryUploadLinkArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<GetTemporaryUploadLinkArg> Decoder = new GetTemporaryUploadLinkArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GetTemporaryUploadLinkArg" />
        /// class.</para>
        /// </summary>
        /// <param name="commitInfo">Contains the path and other optional modifiers for the
        /// future upload commit. Equivalent to the parameters provided to <see
        /// cref="Dropbox.Api.Files.Routes.FilesUserRoutes.UploadAsync" />.</param>
        /// <param name="duration">How long before this link expires, in seconds.  Attempting
        /// to start an upload with this link longer than this period  of time after link
        /// creation will result in an error.</param>
        public GetTemporaryUploadLinkArg(CommitInfo commitInfo,
                                         double duration = 14400.0)
        {
            if (commitInfo == null)
            {
                throw new sys.ArgumentNullException("commitInfo");
            }

            if (duration < 60.0D)
            {
                throw new sys.ArgumentOutOfRangeException("duration", "Value should be greater or equal than 60.0");
            }
            if (duration > 14400.0D)
            {
                throw new sys.ArgumentOutOfRangeException("duration", "Value should be less of equal than 14400.0");
            }

            this.CommitInfo = commitInfo;
            this.Duration = duration;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GetTemporaryUploadLinkArg" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public GetTemporaryUploadLinkArg()
        {
            this.Duration = 14400.0;
        }

        /// <summary>
        /// <para>Contains the path and other optional modifiers for the future upload commit.
        /// Equivalent to the parameters provided to <see
        /// cref="Dropbox.Api.Files.Routes.FilesUserRoutes.UploadAsync" />.</para>
        /// </summary>
        public CommitInfo CommitInfo { get; protected set; }

        /// <summary>
        /// <para>How long before this link expires, in seconds.  Attempting to start an upload
        /// with this link longer than this period  of time after link creation will result in
        /// an error.</para>
        /// </summary>
        public double Duration { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="GetTemporaryUploadLinkArg" />.</para>
        /// </summary>
        private class GetTemporaryUploadLinkArgEncoder : enc.StructEncoder<GetTemporaryUploadLinkArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(GetTemporaryUploadLinkArg value, enc.IJsonWriter writer)
            {
                WriteProperty("commit_info", value.CommitInfo, writer, global::Dropbox.Api.Files.CommitInfo.Encoder);
                WriteProperty("duration", value.Duration, writer, enc.DoubleEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="GetTemporaryUploadLinkArg" />.</para>
        /// </summary>
        private class GetTemporaryUploadLinkArgDecoder : enc.StructDecoder<GetTemporaryUploadLinkArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="GetTemporaryUploadLinkArg"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override GetTemporaryUploadLinkArg Create()
            {
                return new GetTemporaryUploadLinkArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(GetTemporaryUploadLinkArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "commit_info":
                        value.CommitInfo = global::Dropbox.Api.Files.CommitInfo.Decoder.Decode(reader);
                        break;
                    case "duration":
                        value.Duration = enc.DoubleDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
