// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The sharing allowlist list response object</para>
    /// </summary>
    public class SharingAllowlistListResponse
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SharingAllowlistListResponse> Encoder = new SharingAllowlistListResponseEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SharingAllowlistListResponse> Decoder = new SharingAllowlistListResponseDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharingAllowlistListResponse" />
        /// class.</para>
        /// </summary>
        /// <param name="domains">List of domains represented by valid string representation
        /// (RFC-1034/5).</param>
        /// <param name="emails">List of emails represented by valid string representation
        /// (RFC-5322/822).</param>
        /// <param name="cursor">If this is nonempty, there are more entries that can be
        /// fetched with <see
        /// cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.SharingAllowlistListContinueAsync"
        /// />.</param>
        /// <param name="hasMore">if true indicates that more entries can be fetched with <see
        /// cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.SharingAllowlistListContinueAsync"
        /// />.</param>
        public SharingAllowlistListResponse(col.IEnumerable<string> domains,
                                            col.IEnumerable<string> emails,
                                            string cursor = "",
                                            bool hasMore = false)
        {
            var domainsList = enc.Util.ToList(domains);

            if (domains == null)
            {
                throw new sys.ArgumentNullException("domains");
            }

            var emailsList = enc.Util.ToList(emails);

            if (emails == null)
            {
                throw new sys.ArgumentNullException("emails");
            }

            if (cursor == null)
            {
                throw new sys.ArgumentNullException("cursor");
            }

            this.Domains = domainsList;
            this.Emails = emailsList;
            this.Cursor = cursor;
            this.HasMore = hasMore;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharingAllowlistListResponse" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public SharingAllowlistListResponse()
        {
            this.Cursor = "";
            this.HasMore = false;
        }

        /// <summary>
        /// <para>List of domains represented by valid string representation
        /// (RFC-1034/5).</para>
        /// </summary>
        public col.IList<string> Domains { get; protected set; }

        /// <summary>
        /// <para>List of emails represented by valid string representation
        /// (RFC-5322/822).</para>
        /// </summary>
        public col.IList<string> Emails { get; protected set; }

        /// <summary>
        /// <para>If this is nonempty, there are more entries that can be fetched with <see
        /// cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.SharingAllowlistListContinueAsync"
        /// />.</para>
        /// </summary>
        public string Cursor { get; protected set; }

        /// <summary>
        /// <para>if true indicates that more entries can be fetched with <see
        /// cref="Dropbox.Api.Team.Routes.TeamTeamRoutes.SharingAllowlistListContinueAsync"
        /// />.</para>
        /// </summary>
        public bool HasMore { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SharingAllowlistListResponse" />.</para>
        /// </summary>
        private class SharingAllowlistListResponseEncoder : enc.StructEncoder<SharingAllowlistListResponse>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SharingAllowlistListResponse value, enc.IJsonWriter writer)
            {
                WriteListProperty("domains", value.Domains, writer, enc.StringEncoder.Instance);
                WriteListProperty("emails", value.Emails, writer, enc.StringEncoder.Instance);
                WriteProperty("cursor", value.Cursor, writer, enc.StringEncoder.Instance);
                WriteProperty("has_more", value.HasMore, writer, enc.BooleanEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SharingAllowlistListResponse" />.</para>
        /// </summary>
        private class SharingAllowlistListResponseDecoder : enc.StructDecoder<SharingAllowlistListResponse>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SharingAllowlistListResponse"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SharingAllowlistListResponse Create()
            {
                return new SharingAllowlistListResponse();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(SharingAllowlistListResponse value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "domains":
                        value.Domains = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    case "emails":
                        value.Emails = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    case "cursor":
                        value.Cursor = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "has_more":
                        value.HasMore = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
