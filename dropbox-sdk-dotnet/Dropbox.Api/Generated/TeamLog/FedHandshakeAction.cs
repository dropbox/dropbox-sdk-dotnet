// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The fed handshake action object</para>
    /// </summary>
    public class FedHandshakeAction
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<FedHandshakeAction> Encoder = new FedHandshakeActionEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<FedHandshakeAction> Decoder = new FedHandshakeActionDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FedHandshakeAction" />
        /// class.</para>
        /// </summary>
        public FedHandshakeAction()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is AcceptedInvite</para>
        /// </summary>
        public bool IsAcceptedInvite
        {
            get
            {
                return this is AcceptedInvite;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a AcceptedInvite, or <c>null</c>.</para>
        /// </summary>
        public AcceptedInvite AsAcceptedInvite
        {
            get
            {
                return this as AcceptedInvite;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is CanceledInvite</para>
        /// </summary>
        public bool IsCanceledInvite
        {
            get
            {
                return this is CanceledInvite;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a CanceledInvite, or <c>null</c>.</para>
        /// </summary>
        public CanceledInvite AsCanceledInvite
        {
            get
            {
                return this as CanceledInvite;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is InviteExpired</para>
        /// </summary>
        public bool IsInviteExpired
        {
            get
            {
                return this is InviteExpired;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a InviteExpired, or <c>null</c>.</para>
        /// </summary>
        public InviteExpired AsInviteExpired
        {
            get
            {
                return this as InviteExpired;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Invited</para>
        /// </summary>
        public bool IsInvited
        {
            get
            {
                return this is Invited;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Invited, or <c>null</c>.</para>
        /// </summary>
        public Invited AsInvited
        {
            get
            {
                return this as Invited;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RejectedInvite</para>
        /// </summary>
        public bool IsRejectedInvite
        {
            get
            {
                return this is RejectedInvite;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RejectedInvite, or <c>null</c>.</para>
        /// </summary>
        public RejectedInvite AsRejectedInvite
        {
            get
            {
                return this as RejectedInvite;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is RemovedTeam</para>
        /// </summary>
        public bool IsRemovedTeam
        {
            get
            {
                return this is RemovedTeam;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a RemovedTeam, or <c>null</c>.</para>
        /// </summary>
        public RemovedTeam AsRemovedTeam
        {
            get
            {
                return this as RemovedTeam;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="FedHandshakeAction" />.</para>
        /// </summary>
        private class FedHandshakeActionEncoder : enc.StructEncoder<FedHandshakeAction>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(FedHandshakeAction value, enc.IJsonWriter writer)
            {
                if (value is AcceptedInvite)
                {
                    WriteProperty(".tag", "accepted_invite", writer, enc.StringEncoder.Instance);
                    AcceptedInvite.Encoder.EncodeFields((AcceptedInvite)value, writer);
                    return;
                }
                if (value is CanceledInvite)
                {
                    WriteProperty(".tag", "canceled_invite", writer, enc.StringEncoder.Instance);
                    CanceledInvite.Encoder.EncodeFields((CanceledInvite)value, writer);
                    return;
                }
                if (value is InviteExpired)
                {
                    WriteProperty(".tag", "invite_expired", writer, enc.StringEncoder.Instance);
                    InviteExpired.Encoder.EncodeFields((InviteExpired)value, writer);
                    return;
                }
                if (value is Invited)
                {
                    WriteProperty(".tag", "invited", writer, enc.StringEncoder.Instance);
                    Invited.Encoder.EncodeFields((Invited)value, writer);
                    return;
                }
                if (value is RejectedInvite)
                {
                    WriteProperty(".tag", "rejected_invite", writer, enc.StringEncoder.Instance);
                    RejectedInvite.Encoder.EncodeFields((RejectedInvite)value, writer);
                    return;
                }
                if (value is RemovedTeam)
                {
                    WriteProperty(".tag", "removed_team", writer, enc.StringEncoder.Instance);
                    RemovedTeam.Encoder.EncodeFields((RemovedTeam)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="FedHandshakeAction" />.</para>
        /// </summary>
        private class FedHandshakeActionDecoder : enc.UnionDecoder<FedHandshakeAction>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="FedHandshakeAction" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override FedHandshakeAction Create()
            {
                return new FedHandshakeAction();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override FedHandshakeAction Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "accepted_invite":
                        return AcceptedInvite.Decoder.DecodeFields(reader);
                    case "canceled_invite":
                        return CanceledInvite.Decoder.DecodeFields(reader);
                    case "invite_expired":
                        return InviteExpired.Decoder.DecodeFields(reader);
                    case "invited":
                        return Invited.Decoder.DecodeFields(reader);
                    case "rejected_invite":
                        return RejectedInvite.Decoder.DecodeFields(reader);
                    case "removed_team":
                        return RemovedTeam.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The accepted invite object</para>
        /// </summary>
        public sealed class AcceptedInvite : FedHandshakeAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<AcceptedInvite> Encoder = new AcceptedInviteEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<AcceptedInvite> Decoder = new AcceptedInviteDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AcceptedInvite" />
            /// class.</para>
            /// </summary>
            private AcceptedInvite()
            {
            }

            /// <summary>
            /// <para>A singleton instance of AcceptedInvite</para>
            /// </summary>
            public static readonly AcceptedInvite Instance = new AcceptedInvite();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="AcceptedInvite" />.</para>
            /// </summary>
            private class AcceptedInviteEncoder : enc.StructEncoder<AcceptedInvite>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(AcceptedInvite value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="AcceptedInvite" />.</para>
            /// </summary>
            private class AcceptedInviteDecoder : enc.StructDecoder<AcceptedInvite>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="AcceptedInvite" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override AcceptedInvite Create()
                {
                    return AcceptedInvite.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The canceled invite object</para>
        /// </summary>
        public sealed class CanceledInvite : FedHandshakeAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<CanceledInvite> Encoder = new CanceledInviteEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<CanceledInvite> Decoder = new CanceledInviteDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="CanceledInvite" />
            /// class.</para>
            /// </summary>
            private CanceledInvite()
            {
            }

            /// <summary>
            /// <para>A singleton instance of CanceledInvite</para>
            /// </summary>
            public static readonly CanceledInvite Instance = new CanceledInvite();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="CanceledInvite" />.</para>
            /// </summary>
            private class CanceledInviteEncoder : enc.StructEncoder<CanceledInvite>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(CanceledInvite value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="CanceledInvite" />.</para>
            /// </summary>
            private class CanceledInviteDecoder : enc.StructDecoder<CanceledInvite>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="CanceledInvite" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override CanceledInvite Create()
                {
                    return CanceledInvite.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The invite expired object</para>
        /// </summary>
        public sealed class InviteExpired : FedHandshakeAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<InviteExpired> Encoder = new InviteExpiredEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<InviteExpired> Decoder = new InviteExpiredDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="InviteExpired" />
            /// class.</para>
            /// </summary>
            private InviteExpired()
            {
            }

            /// <summary>
            /// <para>A singleton instance of InviteExpired</para>
            /// </summary>
            public static readonly InviteExpired Instance = new InviteExpired();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="InviteExpired" />.</para>
            /// </summary>
            private class InviteExpiredEncoder : enc.StructEncoder<InviteExpired>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(InviteExpired value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="InviteExpired" />.</para>
            /// </summary>
            private class InviteExpiredDecoder : enc.StructDecoder<InviteExpired>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="InviteExpired" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override InviteExpired Create()
                {
                    return InviteExpired.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The invited object</para>
        /// </summary>
        public sealed class Invited : FedHandshakeAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Invited> Encoder = new InvitedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Invited> Decoder = new InvitedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Invited" /> class.</para>
            /// </summary>
            private Invited()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Invited</para>
            /// </summary>
            public static readonly Invited Instance = new Invited();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Invited" />.</para>
            /// </summary>
            private class InvitedEncoder : enc.StructEncoder<Invited>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Invited value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Invited" />.</para>
            /// </summary>
            private class InvitedDecoder : enc.StructDecoder<Invited>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Invited" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Invited Create()
                {
                    return Invited.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The rejected invite object</para>
        /// </summary>
        public sealed class RejectedInvite : FedHandshakeAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RejectedInvite> Encoder = new RejectedInviteEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RejectedInvite> Decoder = new RejectedInviteDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RejectedInvite" />
            /// class.</para>
            /// </summary>
            private RejectedInvite()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RejectedInvite</para>
            /// </summary>
            public static readonly RejectedInvite Instance = new RejectedInvite();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RejectedInvite" />.</para>
            /// </summary>
            private class RejectedInviteEncoder : enc.StructEncoder<RejectedInvite>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RejectedInvite value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RejectedInvite" />.</para>
            /// </summary>
            private class RejectedInviteDecoder : enc.StructDecoder<RejectedInvite>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RejectedInvite" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RejectedInvite Create()
                {
                    return RejectedInvite.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The removed team object</para>
        /// </summary>
        public sealed class RemovedTeam : FedHandshakeAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<RemovedTeam> Encoder = new RemovedTeamEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<RemovedTeam> Decoder = new RemovedTeamDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="RemovedTeam" />
            /// class.</para>
            /// </summary>
            private RemovedTeam()
            {
            }

            /// <summary>
            /// <para>A singleton instance of RemovedTeam</para>
            /// </summary>
            public static readonly RemovedTeam Instance = new RemovedTeam();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="RemovedTeam" />.</para>
            /// </summary>
            private class RemovedTeamEncoder : enc.StructEncoder<RemovedTeam>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(RemovedTeam value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="RemovedTeam" />.</para>
            /// </summary>
            private class RemovedTeamDecoder : enc.StructDecoder<RemovedTeam>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="RemovedTeam" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override RemovedTeam Create()
                {
                    return RemovedTeam.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : FedHandshakeAction
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
