// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The search order by object</para>
    /// </summary>
    public class SearchOrderBy
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SearchOrderBy> Encoder = new SearchOrderByEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SearchOrderBy> Decoder = new SearchOrderByDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SearchOrderBy" /> class.</para>
        /// </summary>
        public SearchOrderBy()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Relevance</para>
        /// </summary>
        public bool IsRelevance
        {
            get
            {
                return this is Relevance;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Relevance, or <c>null</c>.</para>
        /// </summary>
        public Relevance AsRelevance
        {
            get
            {
                return this as Relevance;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is LastModifiedTime</para>
        /// </summary>
        public bool IsLastModifiedTime
        {
            get
            {
                return this is LastModifiedTime;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a LastModifiedTime, or <c>null</c>.</para>
        /// </summary>
        public LastModifiedTime AsLastModifiedTime
        {
            get
            {
                return this as LastModifiedTime;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SearchOrderBy" />.</para>
        /// </summary>
        private class SearchOrderByEncoder : enc.StructEncoder<SearchOrderBy>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SearchOrderBy value, enc.IJsonWriter writer)
            {
                if (value is Relevance)
                {
                    WriteProperty(".tag", "relevance", writer, enc.StringEncoder.Instance);
                    Relevance.Encoder.EncodeFields((Relevance)value, writer);
                    return;
                }
                if (value is LastModifiedTime)
                {
                    WriteProperty(".tag", "last_modified_time", writer, enc.StringEncoder.Instance);
                    LastModifiedTime.Encoder.EncodeFields((LastModifiedTime)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SearchOrderBy" />.</para>
        /// </summary>
        private class SearchOrderByDecoder : enc.UnionDecoder<SearchOrderBy>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SearchOrderBy" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SearchOrderBy Create()
            {
                return new SearchOrderBy();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override SearchOrderBy Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "relevance":
                        return Relevance.Decoder.DecodeFields(reader);
                    case "last_modified_time":
                        return LastModifiedTime.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>The relevance object</para>
        /// </summary>
        public sealed class Relevance : SearchOrderBy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Relevance> Encoder = new RelevanceEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Relevance> Decoder = new RelevanceDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Relevance" /> class.</para>
            /// </summary>
            private Relevance()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Relevance</para>
            /// </summary>
            public static readonly Relevance Instance = new Relevance();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Relevance" />.</para>
            /// </summary>
            private class RelevanceEncoder : enc.StructEncoder<Relevance>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Relevance value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Relevance" />.</para>
            /// </summary>
            private class RelevanceDecoder : enc.StructDecoder<Relevance>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Relevance" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Relevance Create()
                {
                    return Relevance.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The last modified time object</para>
        /// </summary>
        public sealed class LastModifiedTime : SearchOrderBy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<LastModifiedTime> Encoder = new LastModifiedTimeEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<LastModifiedTime> Decoder = new LastModifiedTimeDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="LastModifiedTime" />
            /// class.</para>
            /// </summary>
            private LastModifiedTime()
            {
            }

            /// <summary>
            /// <para>A singleton instance of LastModifiedTime</para>
            /// </summary>
            public static readonly LastModifiedTime Instance = new LastModifiedTime();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="LastModifiedTime" />.</para>
            /// </summary>
            private class LastModifiedTimeEncoder : enc.StructEncoder<LastModifiedTime>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(LastModifiedTime value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="LastModifiedTime" />.</para>
            /// </summary>
            private class LastModifiedTimeDecoder : enc.StructDecoder<LastModifiedTime>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="LastModifiedTime" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override LastModifiedTime Create()
                {
                    return LastModifiedTime.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : SearchOrderBy
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
